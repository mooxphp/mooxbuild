{"tables":{"basicrelationships":{"basicrelationships":{"count":344,"lastPrimaryKey":618,"index":{"3":{"hasMany":{"basicrelationships.inverseId":[4],"inputs.relationshipId":[67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"basicrelationships.inverseId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"basicrelationships.inverseId":[8],"inputs.relationshipId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"basicrelationships.inverseId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"basicrelationships.inverseId":[10],"inputs.relationshipId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"basicrelationships.inverseId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"basicrelationships.inverseId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"basicrelationships.inverseId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"basicrelationships.inverseId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"basicrelationships.inverseId":[13],"inputs.relationshipId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"basicrelationships.inverseId":[16],"inputs.relationshipId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"basicrelationships.inverseId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"basicrelationships.inverseId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"basicrelationships.inverseId":[21],"inputs.relationshipId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"basicrelationships.inverseId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"basicrelationships.inverseId":[25],"inputs.relationshipId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"basicrelationships.inverseId":[28]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"basicrelationships.inverseId":[27],"inputs.relationshipId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"basicrelationships.inverseId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"basicrelationships.inverseId":[29],"inputs.relationshipId":[35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"basicrelationships.inverseId":[32],"inputs.relationshipId":[68]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"basicrelationships.inverseId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"basicrelationships.inverseId":[38],"inputs.relationshipId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"basicrelationships.inverseId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"basicrelationships.inverseId":[42],"inputs.relationshipId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"basicrelationships.inverseId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"basicrelationships.inverseId":[44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"basicrelationships.inverseId":[43],"inputs.relationshipId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"basicrelationships.inverseId":[46],"inputs.relationshipId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"basicrelationships.inverseId":[45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{"basicrelationships.inverseId":[52],"inputs.relationshipId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"basicrelationships.inverseId":[51]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"basicrelationships.inverseId":[54]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"basicrelationships.inverseId":[53],"inputs.relationshipId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"basicrelationships.inverseId":[60],"inputs.relationshipId":[65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"basicrelationships.inverseId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"basicrelationships.inverseId":[62]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"basicrelationships.inverseId":[61],"inputs.relationshipId":[66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"basicrelationships.inverseId":[70],"inputs.relationshipId":[80]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"basicrelationships.inverseId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"basicrelationships.inverseId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{"basicrelationships.inverseId":[71],"inputs.relationshipId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"basicrelationships.inverseId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"basicrelationships.inverseId":[73],"inputs.relationshipId":[87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{"basicrelationships.inverseId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"basicrelationships.inverseId":[75],"inputs.relationshipId":[88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{"basicrelationships.inverseId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"basicrelationships.inverseId":[85],"inputs.relationshipId":[1837]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"basicrelationships.inverseId":[94],"inputs.relationshipId":[1939]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"94":{"hasMany":{"basicrelationships.inverseId":[93]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"basicrelationships.inverseId":[96]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{"basicrelationships.inverseId":[95],"inputs.relationshipId":[1836]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{"basicrelationships.inverseId":[98],"inputs.relationshipId":[1835]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"basicrelationships.inverseId":[97]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"basicrelationships.inverseId":[102]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"basicrelationships.inverseId":[101],"inputs.relationshipId":[1957]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"basicrelationships.inverseId":[104],"inputs.relationshipId":[1940]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"basicrelationships.inverseId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"109":{"hasMany":{"basicrelationships.inverseId":[110],"inputs.relationshipId":[2014]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"basicrelationships.inverseId":[109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"basicrelationships.inverseId":[124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{"basicrelationships.inverseId":[123],"inputs.relationshipId":[1874]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"basicrelationships.inverseId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{"basicrelationships.inverseId":[125],"inputs.relationshipId":[1875]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"basicrelationships.inverseId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"basicrelationships.inverseId":[127],"inputs.relationshipId":[1850]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"basicrelationships.inverseId":[130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"basicrelationships.inverseId":[129],"inputs.relationshipId":[1849]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"basicrelationships.inverseId":[148],"inputs.relationshipId":[2022]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{"basicrelationships.inverseId":[147]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{"basicrelationships.inverseId":[150],"inputs.relationshipId":[1725]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{"basicrelationships.inverseId":[149]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{"basicrelationships.inverseId":[152]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"152":{"hasMany":{"basicrelationships.inverseId":[151],"inputs.relationshipId":[1728]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{"basicrelationships.inverseId":[166]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"basicrelationships.inverseId":[165],"inputs.relationshipId":[1938]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"171":{"hasMany":{"basicrelationships.inverseId":[172]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{"basicrelationships.inverseId":[171],"inputs.relationshipId":[1841]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"173":{"hasMany":{"basicrelationships.inverseId":[174]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{"basicrelationships.inverseId":[173],"inputs.relationshipId":[1771]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{"basicrelationships.inverseId":[176]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{"basicrelationships.inverseId":[175],"inputs.relationshipId":[1770]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"183":{"hasMany":{"basicrelationships.inverseId":[184],"inputs.relationshipId":[1851]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"184":{"hasMany":{"basicrelationships.inverseId":[183]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"185":{"hasMany":{"basicrelationships.inverseId":[186],"inputs.relationshipId":[1861]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"186":{"hasMany":{"basicrelationships.inverseId":[185]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"187":{"hasMany":{"basicrelationships.inverseId":[188],"inputs.relationshipId":[1863]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"188":{"hasMany":{"basicrelationships.inverseId":[187]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"189":{"hasMany":{"basicrelationships.inverseId":[190]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"190":{"hasMany":{"basicrelationships.inverseId":[189],"inputs.relationshipId":[1866]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"191":{"hasMany":{"basicrelationships.inverseId":[192],"inputs.relationshipId":[1870]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{"basicrelationships.inverseId":[191]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{"basicrelationships.inverseId":[194]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"194":{"hasMany":{"basicrelationships.inverseId":[193],"inputs.relationshipId":[1869]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"197":{"hasMany":{"basicrelationships.inverseId":[198],"inputs.relationshipId":[1873]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"198":{"hasMany":{"basicrelationships.inverseId":[197]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"205":{"hasMany":{"basicrelationships.inverseId":[206]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"206":{"hasMany":{"basicrelationships.inverseId":[205],"inputs.relationshipId":[2021]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"207":{"hasMany":{"basicrelationships.inverseId":[208]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"208":{"hasMany":{"basicrelationships.inverseId":[207],"inputs.relationshipId":[1892]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"209":{"hasMany":{"basicrelationships.inverseId":[210]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"210":{"hasMany":{"basicrelationships.inverseId":[209],"inputs.relationshipId":[1912]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"211":{"hasMany":{"basicrelationships.inverseId":[212]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"212":{"hasMany":{"basicrelationships.inverseId":[211],"inputs.relationshipId":[2020]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"217":{"hasMany":{"basicrelationships.inverseId":[218]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{"basicrelationships.inverseId":[217],"inputs.relationshipId":[1876]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"227":{"hasMany":{"basicrelationships.inverseId":[228]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"228":{"hasMany":{"basicrelationships.inverseId":[227],"inputs.relationshipId":[1946]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"233":{"hasMany":{"basicrelationships.inverseId":[234]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"234":{"hasMany":{"basicrelationships.inverseId":[233],"inputs.relationshipId":[1762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"235":{"hasMany":{"basicrelationships.inverseId":[236]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"236":{"hasMany":{"basicrelationships.inverseId":[235],"inputs.relationshipId":[1947]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"239":{"hasMany":{"basicrelationships.inverseId":[240],"inputs.relationshipId":[2025]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"240":{"hasMany":{"basicrelationships.inverseId":[239]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"241":{"hasMany":{"basicrelationships.inverseId":[242]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"242":{"hasMany":{"basicrelationships.inverseId":[241],"inputs.relationshipId":[2026]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"245":{"hasMany":{"basicrelationships.inverseId":[246]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"246":{"hasMany":{"basicrelationships.inverseId":[245],"inputs.relationshipId":[2034]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"247":{"hasMany":{"basicrelationships.inverseId":[248]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"248":{"hasMany":{"basicrelationships.inverseId":[247],"inputs.relationshipId":[1783]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"249":{"hasMany":{"basicrelationships.inverseId":[250]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"250":{"hasMany":{"basicrelationships.inverseId":[249],"inputs.relationshipId":[1784]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"251":{"hasMany":{"basicrelationships.inverseId":[252]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"252":{"hasMany":{"basicrelationships.inverseId":[251],"inputs.relationshipId":[1787]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"253":{"hasMany":{"basicrelationships.inverseId":[254]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"254":{"hasMany":{"basicrelationships.inverseId":[253],"inputs.relationshipId":[1729]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"255":{"hasMany":{"basicrelationships.inverseId":[256]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"256":{"hasMany":{"basicrelationships.inverseId":[255],"inputs.relationshipId":[1928]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"257":{"hasMany":{"basicrelationships.inverseId":[258]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"258":{"hasMany":{"basicrelationships.inverseId":[257],"inputs.relationshipId":[2041]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{"basicrelationships.inverseId":[268]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"268":{"hasMany":{"basicrelationships.inverseId":[267],"inputs.relationshipId":[2042]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{"basicrelationships.inverseId":[270]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{"basicrelationships.inverseId":[269],"inputs.relationshipId":[2046]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{"basicrelationships.inverseId":[274]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{"basicrelationships.inverseId":[273],"inputs.relationshipId":[2048]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"289":{"hasMany":{"basicrelationships.inverseId":[290]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"290":{"hasMany":{"basicrelationships.inverseId":[289],"inputs.relationshipId":[3454]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"293":{"hasMany":{"basicrelationships.inverseId":[294]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{"basicrelationships.inverseId":[293],"inputs.relationshipId":[3455]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"297":{"hasMany":{"basicrelationships.inverseId":[298]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"298":{"hasMany":{"basicrelationships.inverseId":[297],"inputs.relationshipId":[3507]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"299":{"hasMany":{"basicrelationships.inverseId":[300]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"300":{"hasMany":{"basicrelationships.inverseId":[299],"inputs.relationshipId":[3508]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"301":{"hasMany":{"basicrelationships.inverseId":[302]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"302":{"hasMany":{"basicrelationships.inverseId":[301],"inputs.relationshipId":[3475]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"303":{"hasMany":{"basicrelationships.inverseId":[304]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"304":{"hasMany":{"basicrelationships.inverseId":[303],"inputs.relationshipId":[3476]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"305":{"hasMany":{"basicrelationships.inverseId":[306]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"306":{"hasMany":{"basicrelationships.inverseId":[305],"inputs.relationshipId":[3477]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"351":{"hasMany":{"basicrelationships.inverseId":[352]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"352":{"hasMany":{"basicrelationships.inverseId":[351],"inputs.relationshipId":[2906]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"355":{"hasMany":{"basicrelationships.inverseId":[356],"inputs.relationshipId":[2875]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"356":{"hasMany":{"basicrelationships.inverseId":[355]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"363":{"hasMany":{"basicrelationships.inverseId":[364],"inputs.relationshipId":[2874]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"364":{"hasMany":{"basicrelationships.inverseId":[363]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"367":{"hasMany":{"basicrelationships.inverseId":[368]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"368":{"hasMany":{"basicrelationships.inverseId":[367],"inputs.relationshipId":[2884]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"379":{"hasMany":{"basicrelationships.inverseId":[380]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"380":{"hasMany":{"basicrelationships.inverseId":[379],"inputs.relationshipId":[2921]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"381":{"hasMany":{"basicrelationships.inverseId":[382]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"382":{"hasMany":{"basicrelationships.inverseId":[381],"inputs.relationshipId":[2918]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"383":{"hasMany":{"basicrelationships.inverseId":[384],"inputs.relationshipId":[2909]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"384":{"hasMany":{"basicrelationships.inverseId":[383]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"387":{"hasMany":{"basicrelationships.inverseId":[388]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"388":{"hasMany":{"basicrelationships.inverseId":[387],"inputs.relationshipId":[3400]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"389":{"hasMany":{"basicrelationships.inverseId":[390]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"390":{"hasMany":{"basicrelationships.inverseId":[389],"inputs.relationshipId":[3399]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"391":{"hasMany":{"basicrelationships.inverseId":[392]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"392":{"hasMany":{"basicrelationships.inverseId":[391],"inputs.relationshipId":[3401]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"397":{"hasMany":{"basicrelationships.inverseId":[398],"inputs.relationshipId":[3402]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"398":{"hasMany":{"basicrelationships.inverseId":[397]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"405":{"hasMany":{"basicrelationships.inverseId":[406]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"406":{"hasMany":{"basicrelationships.inverseId":[405],"inputs.relationshipId":[3482]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"407":{"hasMany":{"basicrelationships.inverseId":[408]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"408":{"hasMany":{"basicrelationships.inverseId":[407]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"409":{"hasMany":{"basicrelationships.inverseId":[410]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"410":{"hasMany":{"basicrelationships.inverseId":[409],"inputs.relationshipId":[3484]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"411":{"hasMany":{"basicrelationships.inverseId":[412],"inputs.relationshipId":[3492]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"412":{"hasMany":{"basicrelationships.inverseId":[411]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"413":{"hasMany":{"basicrelationships.inverseId":[414]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"414":{"hasMany":{"basicrelationships.inverseId":[413],"inputs.relationshipId":[3447]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"415":{"hasMany":{"basicrelationships.inverseId":[416]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"416":{"hasMany":{"basicrelationships.inverseId":[415],"inputs.relationshipId":[3448]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"417":{"hasMany":{"basicrelationships.inverseId":[418],"inputs.relationshipId":[3506]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"418":{"hasMany":{"basicrelationships.inverseId":[417]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"419":{"hasMany":{"basicrelationships.inverseId":[420]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"420":{"hasMany":{"basicrelationships.inverseId":[419],"inputs.relationshipId":[3485]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"421":{"hasMany":{"basicrelationships.inverseId":[422]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"422":{"hasMany":{"basicrelationships.inverseId":[421],"inputs.relationshipId":[3512]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"423":{"hasMany":{"basicrelationships.inverseId":[424],"inputs.relationshipId":[3518]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"424":{"hasMany":{"basicrelationships.inverseId":[423]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"425":{"hasMany":{"basicrelationships.inverseId":[426],"inputs.relationshipId":[3519]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"426":{"hasMany":{"basicrelationships.inverseId":[425]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"427":{"hasMany":{"basicrelationships.inverseId":[428],"inputs.relationshipId":[3523]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"428":{"hasMany":{"basicrelationships.inverseId":[427]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"429":{"hasMany":{"basicrelationships.inverseId":[430],"inputs.relationshipId":[3524]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"430":{"hasMany":{"basicrelationships.inverseId":[429]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"431":{"hasMany":{"basicrelationships.inverseId":[432],"inputs.relationshipId":[3531]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"432":{"hasMany":{"basicrelationships.inverseId":[431]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"433":{"hasMany":{"basicrelationships.inverseId":[434],"inputs.relationshipId":[3535]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"434":{"hasMany":{"basicrelationships.inverseId":[433]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"435":{"hasMany":{"basicrelationships.inverseId":[436]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"436":{"hasMany":{"basicrelationships.inverseId":[435],"inputs.relationshipId":[3539]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"437":{"hasMany":{"basicrelationships.inverseId":[438]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"438":{"hasMany":{"basicrelationships.inverseId":[437],"inputs.relationshipId":[3543]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"439":{"hasMany":{"basicrelationships.inverseId":[440]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"440":{"hasMany":{"basicrelationships.inverseId":[439],"inputs.relationshipId":[3547]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"441":{"hasMany":{"basicrelationships.inverseId":[442],"inputs.relationshipId":[3557]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"442":{"hasMany":{"basicrelationships.inverseId":[441]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"443":{"hasMany":{"basicrelationships.inverseId":[444]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"444":{"hasMany":{"basicrelationships.inverseId":[443],"inputs.relationshipId":[3586]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"445":{"hasMany":{"basicrelationships.inverseId":[446],"inputs.relationshipId":[3587]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"446":{"hasMany":{"basicrelationships.inverseId":[445]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"447":{"hasMany":{"basicrelationships.inverseId":[448],"inputs.relationshipId":[3588]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"448":{"hasMany":{"basicrelationships.inverseId":[447]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"449":{"hasMany":{"basicrelationships.inverseId":[450],"inputs.relationshipId":[3592]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"450":{"hasMany":{"basicrelationships.inverseId":[449]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"451":{"hasMany":{"basicrelationships.inverseId":[452]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"452":{"hasMany":{"basicrelationships.inverseId":[451],"inputs.relationshipId":[3596]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"453":{"hasMany":{"basicrelationships.inverseId":[454],"inputs.relationshipId":[3600]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"454":{"hasMany":{"basicrelationships.inverseId":[453]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"455":{"hasMany":{"basicrelationships.inverseId":[456],"inputs.relationshipId":[3601]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"456":{"hasMany":{"basicrelationships.inverseId":[455]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"457":{"hasMany":{"basicrelationships.inverseId":[458],"inputs.relationshipId":[3621]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"458":{"hasMany":{"basicrelationships.inverseId":[457]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"459":{"hasMany":{"basicrelationships.inverseId":[460],"inputs.relationshipId":[3625]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"460":{"hasMany":{"basicrelationships.inverseId":[459]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"461":{"hasMany":{"basicrelationships.inverseId":[462],"inputs.relationshipId":[3628]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"462":{"hasMany":{"basicrelationships.inverseId":[461]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"463":{"hasMany":{"basicrelationships.inverseId":[464]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"464":{"hasMany":{"basicrelationships.inverseId":[463],"inputs.relationshipId":[3629]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"465":{"hasMany":{"basicrelationships.inverseId":[466]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"466":{"hasMany":{"basicrelationships.inverseId":[465],"inputs.relationshipId":[3636]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"467":{"hasMany":{"basicrelationships.inverseId":[468],"inputs.relationshipId":[3645]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"468":{"hasMany":{"basicrelationships.inverseId":[467]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"469":{"hasMany":{"basicrelationships.inverseId":[470],"inputs.relationshipId":[3646]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"470":{"hasMany":{"basicrelationships.inverseId":[469]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"471":{"hasMany":{"basicrelationships.inverseId":[472],"inputs.relationshipId":[3647]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"472":{"hasMany":{"basicrelationships.inverseId":[471]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"473":{"hasMany":{"basicrelationships.inverseId":[474]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"474":{"hasMany":{"basicrelationships.inverseId":[473],"inputs.relationshipId":[3648]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"475":{"hasMany":{"basicrelationships.inverseId":[476]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"476":{"hasMany":{"basicrelationships.inverseId":[475],"inputs.relationshipId":[3652]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"477":{"hasMany":{"basicrelationships.inverseId":[478],"inputs.relationshipId":[3655]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"478":{"hasMany":{"basicrelationships.inverseId":[477]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"479":{"hasMany":{"basicrelationships.inverseId":[480],"inputs.relationshipId":[3657]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"480":{"hasMany":{"basicrelationships.inverseId":[479]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"481":{"hasMany":{"basicrelationships.inverseId":[482]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"482":{"hasMany":{"basicrelationships.inverseId":[481],"inputs.relationshipId":[3661]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"483":{"hasMany":{"basicrelationships.inverseId":[484],"inputs.relationshipId":[3662]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"484":{"hasMany":{"basicrelationships.inverseId":[483]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"485":{"hasMany":{"basicrelationships.inverseId":[486],"inputs.relationshipId":[3666]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"486":{"hasMany":{"basicrelationships.inverseId":[485]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"487":{"hasMany":{"basicrelationships.inverseId":[488]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"488":{"hasMany":{"basicrelationships.inverseId":[487],"inputs.relationshipId":[3674]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"489":{"hasMany":{"basicrelationships.inverseId":[490]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"490":{"hasMany":{"basicrelationships.inverseId":[489],"inputs.relationshipId":[3683]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"491":{"hasMany":{"basicrelationships.inverseId":[492],"inputs.relationshipId":[3684]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"492":{"hasMany":{"basicrelationships.inverseId":[491]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"493":{"hasMany":{"basicrelationships.inverseId":[494],"inputs.relationshipId":[3685]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"494":{"hasMany":{"basicrelationships.inverseId":[493]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"495":{"hasMany":{"basicrelationships.inverseId":[496]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"496":{"hasMany":{"basicrelationships.inverseId":[495],"inputs.relationshipId":[3700]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"497":{"hasMany":{"basicrelationships.inverseId":[498],"inputs.relationshipId":[3709]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"498":{"hasMany":{"basicrelationships.inverseId":[497]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"499":{"hasMany":{"basicrelationships.inverseId":[500],"inputs.relationshipId":[3710]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"500":{"hasMany":{"basicrelationships.inverseId":[499]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"501":{"hasMany":{"basicrelationships.inverseId":[502]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"502":{"hasMany":{"basicrelationships.inverseId":[501],"inputs.relationshipId":[3714]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"503":{"hasMany":{"basicrelationships.inverseId":[504]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"504":{"hasMany":{"basicrelationships.inverseId":[503],"inputs.relationshipId":[3721]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"505":{"hasMany":{"basicrelationships.inverseId":[506],"inputs.relationshipId":[3756]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"506":{"hasMany":{"basicrelationships.inverseId":[505]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"507":{"hasMany":{"basicrelationships.inverseId":[508],"inputs.relationshipId":[3761]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"508":{"hasMany":{"basicrelationships.inverseId":[507]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"509":{"hasMany":{"basicrelationships.inverseId":[510],"inputs.relationshipId":[3762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"510":{"hasMany":{"basicrelationships.inverseId":[509]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"511":{"hasMany":{"basicrelationships.inverseId":[512]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"512":{"hasMany":{"basicrelationships.inverseId":[511]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"513":{"hasMany":{"basicrelationships.inverseId":[514]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"514":{"hasMany":{"basicrelationships.inverseId":[513]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"521":{"hasMany":{"basicrelationships.inverseId":[522]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"522":{"hasMany":{"basicrelationships.inverseId":[521]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"523":{"hasMany":{"basicrelationships.inverseId":[524]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"524":{"hasMany":{"basicrelationships.inverseId":[523]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"527":{"hasMany":{"basicrelationships.inverseId":[528]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"528":{"hasMany":{"basicrelationships.inverseId":[527],"inputs.relationshipId":[3843]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"529":{"hasMany":{"basicrelationships.inverseId":[530]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"530":{"hasMany":{"basicrelationships.inverseId":[529],"inputs.relationshipId":[3885]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"535":{"hasMany":{"basicrelationships.inverseId":[536]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"536":{"hasMany":{"basicrelationships.inverseId":[535],"inputs.relationshipId":[3932]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"537":{"hasMany":{"basicrelationships.inverseId":[538],"inputs.relationshipId":[3933]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"538":{"hasMany":{"basicrelationships.inverseId":[537]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"547":{"hasMany":{"basicrelationships.inverseId":[548],"inputs.relationshipId":[3844]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"548":{"hasMany":{"basicrelationships.inverseId":[547]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"553":{"hasMany":{"basicrelationships.inverseId":[554]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"554":{"hasMany":{"basicrelationships.inverseId":[553],"inputs.relationshipId":[3884]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"555":{"hasMany":{"basicrelationships.inverseId":[556]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"556":{"hasMany":{"basicrelationships.inverseId":[555],"inputs.relationshipId":[3893]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"557":{"hasMany":{"basicrelationships.inverseId":[558],"inputs.relationshipId":[3886]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"558":{"hasMany":{"basicrelationships.inverseId":[557]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"565":{"hasMany":{"basicrelationships.inverseId":[566]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"566":{"hasMany":{"basicrelationships.inverseId":[565],"inputs.relationshipId":[3876]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"567":{"hasMany":{"basicrelationships.inverseId":[568]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"568":{"hasMany":{"basicrelationships.inverseId":[567]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"569":{"hasMany":{"basicrelationships.inverseId":[570]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"570":{"hasMany":{"basicrelationships.inverseId":[569]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"571":{"hasMany":{"basicrelationships.inverseId":[572]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"572":{"hasMany":{"basicrelationships.inverseId":[571]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"573":{"hasMany":{"basicrelationships.inverseId":[574]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"574":{"hasMany":{"basicrelationships.inverseId":[573]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"575":{"hasMany":{"basicrelationships.inverseId":[576]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"576":{"hasMany":{"basicrelationships.inverseId":[575]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"577":{"hasMany":{"basicrelationships.inverseId":[578]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"578":{"hasMany":{"basicrelationships.inverseId":[577]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"581":{"hasMany":{"basicrelationships.inverseId":[582]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"582":{"hasMany":{"basicrelationships.inverseId":[581]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"589":{"hasMany":{"basicrelationships.inverseId":[590]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"590":{"hasMany":{"basicrelationships.inverseId":[589]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"591":{"hasMany":{"basicrelationships.inverseId":[592]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"592":{"hasMany":{"basicrelationships.inverseId":[591]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"593":{"hasMany":{"basicrelationships.inverseId":[594]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"594":{"hasMany":{"basicrelationships.inverseId":[593]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"595":{"hasMany":{"basicrelationships.inverseId":[596]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"596":{"hasMany":{"basicrelationships.inverseId":[595]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"597":{"hasMany":{"basicrelationships.inverseId":[598]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"598":{"hasMany":{"basicrelationships.inverseId":[597]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"599":{"hasMany":{"basicrelationships.inverseId":[600]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"600":{"hasMany":{"basicrelationships.inverseId":[599]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"603":{"hasMany":{"basicrelationships.inverseId":[604]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"604":{"hasMany":{"basicrelationships.inverseId":[603]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"605":{"hasMany":{"basicrelationships.inverseId":[606]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"606":{"hasMany":{"basicrelationships.inverseId":[605]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"607":{"hasMany":{"basicrelationships.inverseId":[608],"inputs.relationshipId":[3907]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"608":{"hasMany":{"basicrelationships.inverseId":[607]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"611":{"hasMany":{"basicrelationships.inverseId":[612]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"612":{"hasMany":{"basicrelationships.inverseId":[611]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"613":{"hasMany":{"basicrelationships.inverseId":[614]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"614":{"hasMany":{"basicrelationships.inverseId":[613]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"615":{"hasMany":{"basicrelationships.inverseId":[616],"inputs.relationshipId":[3912]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"616":{"hasMany":{"basicrelationships.inverseId":[615]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"617":{"hasMany":{"basicrelationships.inverseId":[618]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"618":{"hasMany":{"basicrelationships.inverseId":[617],"inputs.relationshipId":[3913]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_554":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":306,"inverseId":553,"localModelId":305,"parentKeyId":1711,"foreignKeyId":1791,"name":"author","type":"belongsTo","foreignOriginalName":"author_id","hasApi":true,"defaultName":"author","usingFirstDefaultName":true,"id":554,"createdAt":"2023-12-09 14:12:25","updatedAt":"2023-12-09 14:12:25"},"item_553":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":305,"inverseId":554,"localModelId":306,"parentKeyId":1711,"foreignKeyId":1791,"name":"posts","type":"hasMany","foreignOriginalName":"author_id","hasApi":true,"defaultName":"posts","usingFirstDefaultName":true,"id":553,"createdAt":"2023-12-09 14:12:25","updatedAt":"2023-12-09 14:12:25"},"item_568":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":306,"inverseId":567,"localModelId":296,"parentKeyId":1711,"foreignKeyId":1831,"name":"author","type":"belongsTo","foreignOriginalName":"author_id","hasApi":true,"defaultName":"author","usingFirstDefaultName":true,"id":568,"createdAt":"2023-12-10 00:55:33","updatedAt":"2023-12-10 00:55:33"},"item_567":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":296,"inverseId":568,"localModelId":306,"parentKeyId":1711,"foreignKeyId":1831,"name":"pages","type":"hasMany","foreignOriginalName":"author_id","hasApi":true,"defaultName":"pages","usingFirstDefaultName":true,"id":567,"createdAt":"2023-12-10 00:55:33","updatedAt":"2023-12-10 00:55:33"},"item_578":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":306,"inverseId":577,"localModelId":320,"parentKeyId":1711,"foreignKeyId":1836,"name":"author","type":"belongsTo","foreignOriginalName":"author_id","hasApi":true,"defaultName":"author","usingFirstDefaultName":true,"id":578,"createdAt":"2023-12-10 01:02:18","updatedAt":"2023-12-10 01:02:18"},"item_577":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":320,"inverseId":578,"localModelId":306,"parentKeyId":1711,"foreignKeyId":1836,"name":"products","type":"hasMany","foreignOriginalName":"author_id","hasApi":true,"defaultName":"products","usingFirstDefaultName":true,"id":577,"createdAt":"2023-12-10 01:02:18","updatedAt":"2023-12-10 01:02:18"},"item_594":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":306,"inverseId":593,"localModelId":324,"parentKeyId":1711,"foreignKeyId":1871,"name":"author","type":"belongsTo","foreignOriginalName":"author_id","hasApi":true,"defaultName":"author","usingFirstDefaultName":true,"id":594,"createdAt":"2023-12-10 22:18:37","updatedAt":"2023-12-10 22:18:37"},"item_593":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":324,"inverseId":594,"localModelId":306,"parentKeyId":1711,"foreignKeyId":1871,"name":"items","type":"hasMany","foreignOriginalName":"author_id","hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":593,"createdAt":"2023-12-10 22:18:37","updatedAt":"2023-12-10 22:18:37"},"item_618":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":306,"inverseId":617,"localModelId":307,"parentKeyId":1711,"foreignKeyId":1938,"name":"author","type":"belongsTo","foreignOriginalName":"author_id","hasApi":true,"defaultName":"author","usingFirstDefaultName":true,"id":618,"createdAt":"2023-12-11 10:43:42","updatedAt":"2023-12-11 10:43:42"},"item_617":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":307,"inverseId":618,"localModelId":306,"parentKeyId":1711,"foreignKeyId":1938,"name":"comments","type":"hasMany","foreignOriginalName":"author_id","hasApi":true,"defaultName":"comments","usingFirstDefaultName":true,"id":617,"createdAt":"2023-12-11 10:43:42","updatedAt":"2023-12-11 10:43:42"},"item_556":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":291,"inverseId":555,"localModelId":306,"parentKeyId":1657,"foreignKeyId":1792,"name":"user","type":"belongsTo","foreignOriginalName":"user_id","hasApi":true,"defaultName":"user","usingFirstDefaultName":true,"id":556,"createdAt":"2023-12-09 14:19:16","updatedAt":"2023-12-09 14:19:16"},"item_555":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":306,"inverseId":556,"localModelId":291,"parentKeyId":1657,"foreignKeyId":1792,"name":"authors","type":"hasMany","foreignOriginalName":"user_id","hasApi":true,"defaultName":"authors","usingFirstDefaultName":true,"id":555,"createdAt":"2023-12-09 14:19:16","updatedAt":"2023-12-09 14:19:16"},"item_612":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":291,"inverseId":611,"localModelId":343,"parentKeyId":1657,"foreignKeyId":1922,"name":"user","type":"belongsTo","foreignOriginalName":"user_id","hasApi":true,"defaultName":"user","usingFirstDefaultName":true,"id":612,"createdAt":"2023-12-10 23:07:18","updatedAt":"2023-12-10 23:07:18"},"item_611":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":343,"inverseId":612,"localModelId":291,"parentKeyId":1657,"foreignKeyId":1922,"name":"bypassTokens","type":"hasMany","foreignOriginalName":"user_id","hasApi":true,"defaultName":"bypassTokens","usingFirstDefaultName":true,"id":611,"createdAt":"2023-12-10 23:07:18","updatedAt":"2023-12-10 23:07:18"},"item_582":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":333,"inverseId":581,"localModelId":335,"parentKeyId":1840,"foreignKeyId":1843,"name":"customer","type":"belongsTo","foreignOriginalName":"customer_id","hasApi":true,"defaultName":"customer","usingFirstDefaultName":true,"id":582,"createdAt":"2023-12-10 01:20:03","updatedAt":"2023-12-10 01:20:03"},"item_581":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":335,"inverseId":582,"localModelId":333,"parentKeyId":1840,"foreignKeyId":1843,"name":"carts","type":"hasMany","foreignOriginalName":"customer_id","hasApi":true,"defaultName":"carts","usingFirstDefaultName":true,"id":581,"createdAt":"2023-12-10 01:20:03","updatedAt":"2023-12-10 01:20:03"},"item_537":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"inverseId":538,"localModelId":292,"parentKeyId":1668,"foreignKeyId":1760,"name":"translation","type":"belongsTo","foreignOriginalName":"category_translration_id","hasApi":true,"defaultName":"category","usingFirstDefaultName":true,"id":537,"createdAt":"2023-12-08 14:22:21","updatedAt":"2023-12-09 13:52:26"},"item_538":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"inverseId":537,"localModelId":292,"parentKeyId":1668,"foreignKeyId":1760,"name":"hasTranslation","type":"hasOne","foreignOriginalName":"category_translration_id","hasApi":true,"defaultName":"category2","usingFirstDefaultName":false,"id":538,"createdAt":"2023-12-08 14:22:21","updatedAt":"2023-12-09 13:52:43"},"item_566":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"inverseId":565,"localModelId":305,"parentKeyId":1668,"foreignKeyId":1818,"name":"mainCategory","type":"belongsTo","foreignOriginalName":"category_id","hasApi":true,"defaultName":"category","usingFirstDefaultName":true,"id":566,"createdAt":"2023-12-10 00:34:22","updatedAt":"2023-12-10 00:34:22"},"item_565":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":305,"inverseId":566,"localModelId":292,"parentKeyId":1668,"foreignKeyId":1818,"name":"mainCategoryPosts","type":"hasMany","foreignOriginalName":"category_id","hasApi":true,"defaultName":"posts","usingFirstDefaultName":true,"id":565,"createdAt":"2023-12-10 00:34:22","updatedAt":"2023-12-11 11:46:56"},"item_572":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"inverseId":571,"localModelId":296,"parentKeyId":1668,"foreignKeyId":1833,"name":"mainCategory","type":"belongsTo","foreignOriginalName":"main_category_id","hasApi":true,"defaultName":"category","usingFirstDefaultName":true,"id":572,"createdAt":"2023-12-10 01:00:55","updatedAt":"2023-12-10 01:00:55"},"item_571":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":296,"inverseId":572,"localModelId":292,"parentKeyId":1668,"foreignKeyId":1833,"name":"mainCategoryPages","type":"hasMany","foreignOriginalName":"main_category_id","hasApi":true,"defaultName":"pages","usingFirstDefaultName":true,"id":571,"createdAt":"2023-12-10 01:00:55","updatedAt":"2023-12-11 11:48:43"},"item_574":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"inverseId":573,"localModelId":320,"parentKeyId":1668,"foreignKeyId":1834,"name":"mainCategory","type":"belongsTo","foreignOriginalName":"main_category_id","hasApi":true,"defaultName":"category","usingFirstDefaultName":true,"id":574,"createdAt":"2023-12-10 01:01:29","updatedAt":"2023-12-10 01:01:29"},"item_573":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":320,"inverseId":574,"localModelId":292,"parentKeyId":1668,"foreignKeyId":1834,"name":"mainCategoryProducts","type":"hasMany","foreignOriginalName":"main_category_id","hasApi":true,"defaultName":"products","usingFirstDefaultName":true,"id":573,"createdAt":"2023-12-10 01:01:29","updatedAt":"2023-12-11 11:48:34"},"item_600":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"inverseId":599,"localModelId":324,"parentKeyId":1668,"foreignKeyId":1874,"name":"mainCategory","type":"belongsTo","foreignOriginalName":"main_category_id","hasApi":true,"defaultName":"category","usingFirstDefaultName":true,"id":600,"createdAt":"2023-12-10 22:20:45","updatedAt":"2023-12-10 22:20:45"},"item_599":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":324,"inverseId":600,"localModelId":292,"parentKeyId":1668,"foreignKeyId":1874,"name":"mainCategoryItems","type":"hasMany","foreignOriginalName":"main_category_id","hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":599,"createdAt":"2023-12-10 22:20:45","updatedAt":"2023-12-11 11:48:15"},"item_535":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"inverseId":536,"localModelId":308,"parentKeyId":1735,"foreignKeyId":1759,"name":"categories","type":"hasMany","foreignOriginalName":"language_id","hasApi":true,"defaultName":"categories","usingFirstDefaultName":true,"id":535,"createdAt":"2023-12-08 14:20:30","updatedAt":"2023-12-08 14:20:30"},"item_536":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":308,"inverseId":535,"localModelId":292,"parentKeyId":1735,"foreignKeyId":1759,"name":"language","type":"belongsTo","foreignOriginalName":"language_id","hasApi":true,"defaultName":"language","usingFirstDefaultName":true,"id":536,"createdAt":"2023-12-08 14:20:30","updatedAt":"2023-12-11 16:52:59","suggestedInverseName":"language"},"item_616":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":307,"inverseId":615,"localModelId":307,"parentKeyId":1712,"foreignKeyId":1935,"name":"parent","type":"hasOne","foreignOriginalName":"parent_id","hasApi":true,"defaultName":"comment2","usingFirstDefaultName":false,"id":616,"createdAt":"2023-12-11 10:42:52","updatedAt":"2023-12-11 10:42:52"},"item_615":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":307,"inverseId":616,"localModelId":307,"parentKeyId":1712,"foreignKeyId":1935,"name":"comment","type":"belongsTo","foreignOriginalName":"parent_id","hasApi":true,"defaultName":"comment","usingFirstDefaultName":true,"id":615,"createdAt":"2023-12-11 10:42:52","updatedAt":"2023-12-11 10:42:52"},"item_606":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":309,"inverseId":605,"localModelId":332,"parentKeyId":1839,"foreignKeyId":1909,"name":"countries","type":"hasMany","foreignOriginalName":"continent_id","hasApi":true,"defaultName":"countries","usingFirstDefaultName":true,"id":606,"createdAt":"2023-12-10 22:49:04","updatedAt":"2023-12-10 22:49:04"},"item_605":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":332,"inverseId":606,"localModelId":309,"parentKeyId":1839,"foreignKeyId":1909,"name":"continent","type":"belongsTo","foreignOriginalName":"continent_id","hasApi":true,"defaultName":"continent","usingFirstDefaultName":true,"id":605,"createdAt":"2023-12-10 22:49:04","updatedAt":"2023-12-10 22:49:04"},"item_590":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":333,"inverseId":589,"localModelId":291,"parentKeyId":1657,"foreignKeyId":1848,"name":"customer","type":"hasOne","foreignOriginalName":"user_id","hasApi":true,"defaultName":"customer","usingFirstDefaultName":true,"id":590,"createdAt":"2023-12-10 01:22:56","updatedAt":"2023-12-10 01:22:56"},"item_589":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":291,"inverseId":590,"localModelId":333,"parentKeyId":1657,"foreignKeyId":1848,"name":"user","type":"belongsTo","foreignOriginalName":"user_id","hasApi":true,"defaultName":"user","usingFirstDefaultName":true,"id":589,"createdAt":"2023-12-10 01:22:56","updatedAt":"2023-12-10 01:22:56"},"item_598":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":324,"inverseId":597,"localModelId":324,"parentKeyId":1809,"foreignKeyId":1873,"name":"translation","type":"belongsTo","foreignOriginalName":"translation_id","hasApi":true,"defaultName":"item2","usingFirstDefaultName":false,"id":598,"createdAt":"2023-12-10 22:19:14","updatedAt":"2023-12-10 22:19:14"},"item_597":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":324,"inverseId":598,"localModelId":324,"parentKeyId":1809,"foreignKeyId":1873,"name":"items","type":"hasMany","foreignOriginalName":"translation_id","hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":597,"createdAt":"2023-12-10 22:19:14","updatedAt":"2023-12-10 22:19:14"},"item_595":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":324,"inverseId":596,"localModelId":308,"parentKeyId":1735,"foreignKeyId":1872,"name":"items","type":"hasMany","foreignOriginalName":"language_id","hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":595,"createdAt":"2023-12-10 22:18:50","updatedAt":"2023-12-10 22:18:50"},"item_596":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":308,"inverseId":595,"localModelId":324,"parentKeyId":1735,"foreignKeyId":1872,"name":"language","type":"belongsTo","foreignOriginalName":"language_id","hasApi":true,"defaultName":"language","usingFirstDefaultName":true,"id":596,"createdAt":"2023-12-10 22:18:50","updatedAt":"2023-12-11 16:52:59","suggestedInverseName":"language"},"item_527":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":293,"inverseId":528,"localModelId":308,"parentKeyId":1735,"foreignKeyId":1746,"name":"tags","type":"hasMany","foreignOriginalName":"language_id","hasApi":true,"defaultName":"tags","usingFirstDefaultName":true,"id":527,"createdAt":"2023-12-08 13:29:50","updatedAt":"2023-12-08 13:29:50"},"item_528":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":308,"inverseId":527,"localModelId":293,"parentKeyId":1735,"foreignKeyId":1746,"name":"language","type":"belongsTo","foreignOriginalName":"language_id","hasApi":true,"defaultName":"language","usingFirstDefaultName":true,"id":528,"createdAt":"2023-12-08 13:29:50","updatedAt":"2023-12-11 16:52:59","suggestedInverseName":"language"},"item_529":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":305,"inverseId":530,"localModelId":308,"parentKeyId":1735,"foreignKeyId":1748,"name":"posts","type":"hasMany","foreignOriginalName":"language_id","hasApi":true,"defaultName":"posts","usingFirstDefaultName":true,"id":529,"createdAt":"2023-12-08 13:30:14","updatedAt":"2023-12-08 13:30:14"},"item_530":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":308,"inverseId":529,"localModelId":305,"parentKeyId":1735,"foreignKeyId":1748,"name":"language","type":"belongsTo","foreignOriginalName":"language_id","hasApi":true,"defaultName":"language","usingFirstDefaultName":true,"id":530,"createdAt":"2023-12-08 13:30:14","updatedAt":"2023-12-11 16:52:59","suggestedInverseName":"language"},"item_569":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":296,"inverseId":570,"localModelId":308,"parentKeyId":1735,"foreignKeyId":1832,"name":"pages","type":"hasMany","foreignOriginalName":"language_id","hasApi":true,"defaultName":"pages","usingFirstDefaultName":true,"id":569,"createdAt":"2023-12-10 00:55:41","updatedAt":"2023-12-10 00:55:41"},"item_570":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":308,"inverseId":569,"localModelId":296,"parentKeyId":1735,"foreignKeyId":1832,"name":"language","type":"belongsTo","foreignOriginalName":"language_id","hasApi":true,"defaultName":"language","usingFirstDefaultName":true,"id":570,"createdAt":"2023-12-10 00:55:41","updatedAt":"2023-12-11 16:52:59","suggestedInverseName":"language"},"item_575":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":320,"inverseId":576,"localModelId":308,"parentKeyId":1735,"foreignKeyId":1835,"name":"products","type":"hasMany","foreignOriginalName":"language_id","hasApi":true,"defaultName":"products","usingFirstDefaultName":true,"id":575,"createdAt":"2023-12-10 01:02:05","updatedAt":"2023-12-10 01:02:05"},"item_576":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":308,"inverseId":575,"localModelId":320,"parentKeyId":1735,"foreignKeyId":1835,"name":"language","type":"belongsTo","foreignOriginalName":"language_id","hasApi":true,"defaultName":"language","usingFirstDefaultName":true,"id":576,"createdAt":"2023-12-10 01:02:05","updatedAt":"2023-12-11 16:52:59","suggestedInverseName":"language"},"item_591":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":296,"inverseId":592,"localModelId":296,"parentKeyId":1672,"foreignKeyId":1856,"name":"pages","type":"hasMany","foreignOriginalName":"page_id","hasApi":true,"defaultName":"pages","usingFirstDefaultName":true,"id":591,"createdAt":"2023-12-10 22:10:45","updatedAt":"2023-12-10 22:10:45"},"item_592":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":296,"inverseId":591,"localModelId":296,"parentKeyId":1672,"foreignKeyId":1856,"name":"translation","type":"belongsTo","foreignOriginalName":"page_id","hasApi":true,"defaultName":"page2","usingFirstDefaultName":false,"id":592,"createdAt":"2023-12-10 22:10:45","updatedAt":"2023-12-10 22:11:08"},"item_614":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":339,"inverseId":613,"localModelId":296,"parentKeyId":1672,"foreignKeyId":1925,"name":"pageTemplates","type":"hasMany","foreignOriginalName":"page_id","hasApi":true,"defaultName":"pageTemplates","usingFirstDefaultName":true,"id":614,"createdAt":"2023-12-11 09:13:20","updatedAt":"2023-12-11 09:13:20"},"item_613":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":296,"inverseId":614,"localModelId":339,"parentKeyId":1672,"foreignKeyId":1925,"name":"page","type":"belongsTo","foreignOriginalName":"page_id","hasApi":true,"defaultName":"page","usingFirstDefaultName":true,"id":613,"createdAt":"2023-12-11 09:13:20","updatedAt":"2023-12-11 09:13:20"},"item_558":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":305,"inverseId":557,"localModelId":305,"parentKeyId":1710,"foreignKeyId":1798,"name":"hasTranslation","type":"hasOne","foreignOriginalName":"post_id","hasApi":true,"defaultName":"post2","usingFirstDefaultName":false,"id":558,"createdAt":"2023-12-09 23:17:27","updatedAt":"2023-12-09 23:17:27"},"item_557":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":305,"inverseId":558,"localModelId":305,"parentKeyId":1710,"foreignKeyId":1798,"name":"translation","type":"belongsTo","foreignOriginalName":"post_id","hasApi":true,"defaultName":"post","usingFirstDefaultName":true,"id":557,"createdAt":"2023-12-09 23:17:27","updatedAt":"2023-12-09 23:17:35"},"item_604":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":334,"inverseId":603,"localModelId":291,"parentKeyId":1657,"foreignKeyId":1897,"name":"subscriber","type":"hasOne","foreignOriginalName":"user_id","hasApi":true,"defaultName":"subscriber","usingFirstDefaultName":true,"id":604,"createdAt":"2023-12-10 22:38:03","updatedAt":"2023-12-10 22:38:03"},"item_603":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":291,"inverseId":604,"localModelId":334,"parentKeyId":1657,"foreignKeyId":1897,"name":"user","type":"belongsTo","foreignOriginalName":"user_id","hasApi":true,"defaultName":"user","usingFirstDefaultName":true,"id":603,"createdAt":"2023-12-10 22:38:03","updatedAt":"2023-12-10 22:38:03"},"item_548":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":293,"inverseId":547,"localModelId":293,"parentKeyId":1669,"foreignKeyId":1780,"name":"hasTranslation","type":"hasOne","foreignOriginalName":"tag_id","hasApi":true,"defaultName":"tag2","usingFirstDefaultName":false,"id":548,"createdAt":"2023-12-09 14:02:37","updatedAt":"2023-12-09 14:02:55"},"item_547":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":293,"inverseId":548,"localModelId":293,"parentKeyId":1669,"foreignKeyId":1780,"name":"translation","type":"belongsTo","foreignOriginalName":"tag_id","hasApi":true,"defaultName":"tag","usingFirstDefaultName":true,"id":547,"createdAt":"2023-12-09 14:02:37","updatedAt":"2023-12-09 14:03:05"},"item_608":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":291,"inverseId":607,"localModelId":342,"parentKeyId":1911,"foreignKeyId":1917,"name":"created_by","type":"hasOne","foreignOriginalName":"whitelist_id","hasApi":true,"defaultName":"user","usingFirstDefaultName":true,"id":608,"createdAt":"2023-12-10 23:02:51","updatedAt":"2023-12-10 23:02:51"},"item_607":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":342,"inverseId":608,"localModelId":291,"parentKeyId":1911,"foreignKeyId":1917,"name":"whitelist","type":"belongsTo","foreignOriginalName":"whitelist_id","hasApi":true,"defaultName":"whitelist","usingFirstDefaultName":true,"id":607,"createdAt":"2023-12-10 23:02:51","updatedAt":"2023-12-10 23:02:51"}},"comments":{"comments":{"count":7,"lastPrimaryKey":19,"index":{"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"cruds":{"cruds":{"count":135,"lastPrimaryKey":573,"index":{"5":{"hasMany":{"inputs.crudId":[10,11,12,13,14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"inputs.crudId":[15,16,17,18,19,20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"inputs.crudId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"inputs.crudId":[22,23,24,25,26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"inputs.crudId":[28,29,30,31,32,33,34,35,36,27],"manytomanycomponents.crudId":[1,2],"manytomanydetails.crudId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"inputs.crudId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"inputs.crudId":[38]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"inputs.crudId":[39]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"inputs.crudId":[40]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"inputs.crudId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"inputs.crudId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"inputs.crudId":[43,46,47,48,49,50,51,52,53,54,55,56,45,44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"inputs.crudId":[57,58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"inputs.crudId":[59,60,61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"inputs.crudId":[62,63,64,65,66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"inputs.crudId":[68,69,70,71,67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"inputs.crudId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"inputs.crudId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"inputs.crudId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"inputs.crudId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"inputs.crudId":[76,86,87,88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"inputs.crudId":[77,78,79,80,85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"inputs.crudId":[83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"266":{"hasMany":{"inputs.crudId":[1725,1726,1727,1728,1729]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{"inputs.crudId":[1730,1731,1732]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"268":{"hasMany":{"inputs.crudId":[1733,1734,1735]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{"inputs.crudId":[1736,1737,1738]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{"inputs.crudId":[1739,1740,1741]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"271":{"hasMany":{"inputs.crudId":[1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"272":{"hasMany":{"inputs.crudId":[1756,1757,1758]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{"inputs.crudId":[1759,1760,1761,1762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{"inputs.crudId":[1763,1764,1765,1766]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"275":{"hasMany":{"inputs.crudId":[1767,1768,1769,1770,1771]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"277":{"hasMany":{"inputs.crudId":[1774,1775,1776]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"278":{"hasMany":{"inputs.crudId":[1777,1778,1779]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"279":{"hasMany":{"inputs.crudId":[1780,1781,1782]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"280":{"hasMany":{"inputs.crudId":[1783,1784,1785,1786,1787]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"282":{"hasMany":{"inputs.crudId":[1791,1792,1793]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"283":{"hasMany":{"inputs.crudId":[1794,1795,1796]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"286":{"hasMany":{"inputs.crudId":[1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"287":{"hasMany":{"inputs.crudId":[1829,1830,1831]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"288":{"hasMany":{"inputs.crudId":[1832,1833,1834]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"289":{"hasMany":{"inputs.crudId":[1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"290":{"hasMany":{"inputs.crudId":[1887,1888,1889]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"291":{"hasMany":{"inputs.crudId":[1890,1891]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"292":{"hasMany":{"inputs.crudId":[1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"293":{"hasMany":{"inputs.crudId":[1922,1923,1924]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{"inputs.crudId":[1925,1926,1927,1928]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"295":{"hasMany":{"inputs.crudId":[1929,1930,1931]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"296":{"hasMany":{"inputs.crudId":[1932,1933,1934]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"297":{"hasMany":{"inputs.crudId":[1935,1936,1937]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"298":{"hasMany":{"inputs.crudId":[1938,1939,1940,1941,1942,1943]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"299":{"hasMany":{"inputs.crudId":[1945,1946,1947,1948,1949,1950,1944]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"300":{"hasMany":{"inputs.crudId":[1951,1952,1953]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"301":{"hasMany":{"inputs.crudId":[1954,1955,1956,1957,1958]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"304":{"hasMany":{"inputs.crudId":[2008,2009,2010]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"305":{"hasMany":{"inputs.crudId":[2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"306":{"hasMany":{"inputs.crudId":[2036,2037,2038,2039,2040,2041,2042]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"307":{"hasMany":{"inputs.crudId":[2043,2044,2045,2046,2047,2048]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"421":{"hasMany":{"inputs.crudId":[2866,2867,2868,2869]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"422":{"hasMany":{"inputs.crudId":[2870,2871,2872,2873]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"423":{"hasMany":{"inputs.crudId":[2874,2875,2876,2877,2878,2879,2880]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"424":{"hasMany":{"inputs.crudId":[2881,2882]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"425":{"hasMany":{"inputs.crudId":[2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"426":{"hasMany":{"inputs.crudId":[2906,2907,2908]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"427":{"hasMany":{"inputs.crudId":[2909,2910,2911,2912,2913]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"428":{"hasMany":{"inputs.crudId":[2914,2915,2916,2917]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"429":{"hasMany":{"inputs.crudId":[2918,2919,2920]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"430":{"hasMany":{"inputs.crudId":[2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2931,2932,2933]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"431":{"hasMany":{"inputs.crudId":[2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"494":{"hasMany":{"inputs.crudId":[3330,3331,3332]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"497":{"hasMany":{"inputs.crudId":[3370,3371,3372]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"498":{"hasMany":{"inputs.crudId":[3373,3374,3375]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"499":{"hasMany":{"inputs.crudId":[3376,3377,3378,3379,3380]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"500":{"hasMany":{"inputs.crudId":[3381,3382,3383]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"501":{"hasMany":{"inputs.crudId":[3384,3385,3386]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"502":{"hasMany":{"inputs.crudId":[3387,3388,3389,3390,3391]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"503":{"hasMany":{"inputs.crudId":[3392,3393,3394]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"504":{"hasMany":{"inputs.crudId":[3395,3396,3397,3398,3399,3400,3401,3402]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"508":{"hasMany":{"inputs.crudId":[3422,3423]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"510":{"hasMany":{"inputs.crudId":[3431,3432,3433,3434]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"511":{"hasMany":{"inputs.crudId":[3435,3436,3437]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"512":{"hasMany":{"inputs.crudId":[3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"513":{"hasMany":{"inputs.crudId":[3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3461,3462,3463,3464,3465,3466,3467,3468,3469,3470,3471,3472,3473,3474,3475,3476,3477]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"514":{"hasMany":{"inputs.crudId":[3478,3479,3480,3481,3482,3483,3484,3485]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"515":{"hasMany":{"inputs.crudId":[3486,3487,3488,3489,3490,3491,3492]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"516":{"hasMany":{"inputs.crudId":[3493,3494,3495]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"517":{"hasMany":{"inputs.crudId":[3496,3497,3498,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"518":{"hasMany":{"inputs.crudId":[3509,3510,3511]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"519":{"hasMany":{"inputs.crudId":[3513,3514]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"520":{"hasMany":{"inputs.crudId":[3515,3516,3517]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"521":{"hasMany":{"inputs.crudId":[3520,3521,3522]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"522":{"hasMany":{"inputs.crudId":[3525,3526,3527]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"523":{"hasMany":{"inputs.crudId":[3528,3529,3530]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"524":{"hasMany":{"inputs.crudId":[3532,3533,3534]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"525":{"hasMany":{"inputs.crudId":[3536,3537,3538]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"526":{"hasMany":{"inputs.crudId":[3540,3541,3542]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"527":{"hasMany":{"inputs.crudId":[3544,3545,3546]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"528":{"hasMany":{"inputs.crudId":[3548,3549,3550]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"529":{"hasMany":{"inputs.crudId":[3551,3552,3553]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"530":{"hasMany":{"inputs.crudId":[3554,3555,3556]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"531":{"hasMany":{"inputs.crudId":[3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3535,3577,3578,3579,3580,3581,3582,3583,3584,3585]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"532":{"hasMany":{"inputs.crudId":[3589,3590,3591]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"533":{"hasMany":{"inputs.crudId":[3593,3594,3595]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"534":{"hasMany":{"inputs.crudId":[3597,3598,3599]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"535":{"hasMany":{"inputs.crudId":[3602,3604,3603,3617,3618,3619,3620,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3605,3606]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"536":{"hasMany":{"inputs.crudId":[3622,3623,3624]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"537":{"hasMany":{"inputs.crudId":[3625,3626,3627,3628,3621]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"538":{"hasMany":{"inputs.crudId":[3630,3631,3632,3629]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"539":{"hasMany":{"inputs.crudId":[3633,3634,3635]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"540":{"hasMany":{"inputs.crudId":[3639,3637,3640,3638]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"541":{"hasMany":{"inputs.crudId":[3641,3642,3643,3601,3644,3645]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"542":{"hasMany":{"inputs.crudId":[3652,3647,3648,3649,3650,3651]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"543":{"hasMany":{"inputs.crudId":[3653,3656,3654,3655,3636]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"544":{"hasMany":{"inputs.crudId":[3658,3659,3660,3661]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"545":{"hasMany":{"inputs.crudId":[3663,3664,3665,3666,3667,3668,3669,3670,3671,3662,3588,3587,3672,3673,3596,3674,3675,3676,3677,3678,3679,3680,3681,3592,3682]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"546":{"hasMany":{"inputs.crudId":[3686,3699,3698,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"547":{"hasMany":{"inputs.crudId":[3701,3702,3703]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"548":{"hasMany":{"inputs.crudId":[3704,3706,3707,3708,3705,3709,3600]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"549":{"hasMany":{"inputs.crudId":[3711,3712,3713]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"550":{"hasMany":{"inputs.crudId":[3715,3716,3717]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"551":{"hasMany":{"inputs.crudId":[3684,3586,3512,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3543,3710,3714,3729,3730,3731,3732,3733,3734,3735,3736,3737,3539,3738,3523,3739,3740,3524,3741,3742,3519,3518,3743,3744,3700,3531,3547,3685,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"552":{"hasMany":{"inputs.crudId":[3755,3657,3756,3757,3758,3759,3760]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"553":{"hasMany":{"inputs.crudId":[3763,3764,3765,3683,3766]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"554":{"hasMany":{"inputs.crudId":[3761,3762,3767,3768,3646]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"557":{"hasMany":{"inputs.crudId":[3777,3778,3779,3780,3781]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"558":{"hasMany":{"inputs.crudId":[3782,3783,3784]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"564":{"hasMany":{"inputs.crudId":[3834,3835,3836,3837,3838,3839,3840,3841,3845,3844,3843]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"566":{"hasMany":{"inputs.crudId":[3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"567":{"hasMany":{"inputs.crudId":[3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3886,3885]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"569":{"hasMany":{"inputs.crudId":[3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"570":{"hasMany":{"inputs.crudId":[3904,3905,3906,3907]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"571":{"hasMany":{"inputs.crudId":[3908,3909,3910,3911,3912,3913,3914,3915,3916,3917]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"572":{"hasMany":{"inputs.crudId":[3918,3919,3920,3921,3922,3923]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"573":{"hasMany":{"inputs.crudId":[3924,3925,3926,3927,3928,3929,3930,3933,3934,3932]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_564":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Tags","url":"tags","modelId":293,"projectId":14,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Tags List","create":"Create Tag","edit":"Edit Tag","update":"Update Tag","show":"Show Tag","new":"New Tag"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":564,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:56:55"},"item_566":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Revisions","url":"revisions","modelId":338,"projectId":14,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Revisions List","create":"Create Revision","edit":"Edit Revision","update":"Update Revision","show":"Show Revision","new":"New Revision"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":566,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_567":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Posts","url":"posts","modelId":305,"projectId":14,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Posts List","create":"Create Post","edit":"Edit Post","update":"Update Post","show":"Show Post","new":"New Post"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":567,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_569":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Authors","url":"authors","modelId":306,"projectId":14,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Authors List","create":"Create Author","edit":"Edit Author","update":"Update Author","show":"Show Author","new":"New Author"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":569,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_570":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Users","url":"users","modelId":291,"projectId":14,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Users List","create":"Create User","edit":"Edit User","update":"Update User","show":"Show User","new":"New User"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":570,"createdAt":"2023-12-11 10:28:15","updatedAt":"2023-12-11 10:28:15"},"item_571":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Comments","url":"comments","modelId":307,"projectId":14,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Comments List","create":"Create Comment","edit":"Edit Comment","update":"Update Comment","show":"Show Comment","new":"New Comment"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":571,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_572":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Languages","url":"languages","modelId":308,"projectId":14,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Languages List","create":"Create Language","edit":"Edit Language","update":"Update Language","show":"Show Language","new":"New Language"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":572,"createdAt":"2023-12-11 11:16:58","updatedAt":"2023-12-11 11:16:58"},"item_573":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Categories","url":"categories","modelId":292,"projectId":14,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Categories List","create":"Create Category","edit":"Edit Category","update":"Update Category","show":"Show Category","new":"New Category"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":573,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:49:38"}},"entities":{"entities":{"count":227,"lastPrimaryKey":346,"index":{"6":{"hasMany":{"fields.entityId":[37,38,39,40,41,42,43,44,45,46,47,64,82],"projects.authModelId":[4],"cruds.modelId":[5],"basicrelationships.localModelId":[9,11,15,71],"basicrelationships.modelId":[10,12,16,72],"foreigns.relatedEntityId":[45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"fields.entityId":[48,60,174,175,176],"basicrelationships.localModelId":[7,72,74,76],"basicrelationships.modelId":[8,71,73,75],"cruds.modelId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"fields.entityId":[49,52,107,113,119,141],"foreigns.relatedEntityId":[25,39,47],"basicrelationships.modelId":[4,32,43,42,52,59,76],"basicrelationships.localModelId":[3,31,41,44,51,60,75],"manytomanyrelationships.localModelId":[1],"manytomanyrelationships.modelId":[2],"cruds.modelId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"fields.entityId":[50,125],"basicrelationships.localModelId":[4],"basicrelationships.modelId":[3],"foreigns.relatedEntityId":[2],"cruds.modelId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"fields.entityId":[54,55,56,57,167,58,65],"foreigns.relatedEntityId":[4,44],"basicrelationships.modelId":[7,13,69],"basicrelationships.localModelId":[8,14,70],"cruds.modelId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"fields.entityId":[61,62,63],"foreigns.relatedEntityId":[5,6,46],"basicrelationships.modelId":[9,11,14,74],"basicrelationships.localModelId":[10,12,13,73],"cruds.modelId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"fields.entityId":[66,67,70,71,72,73,74,75,76,77,78,79,80,69,68],"foreigns.relatedEntityId":[7,21],"basicrelationships.modelId":[15,44],"basicrelationships.localModelId":[16,43],"cruds.modelId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"fields.entityId":[83,114,116,117,118,93,95,96,97,111,115],"foreigns.relatedEntityId":[20,27,29,31],"basicrelationships.localModelId":[22,26,28,30,37,42],"basicrelationships.modelId":[21,25,27,29,38,41],"manytomanyrelationships.localModelId":[3,5,7],"manytomanyrelationships.modelId":[4,6,8],"cruds.modelId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"fields.entityId":[84,103],"foreigns.relatedEntityId":[30],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"manytomanyrelationships.modelId":[7],"manytomanyrelationships.localModelId":[8],"cruds.modelId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"fields.entityId":[85,90],"basicrelationships.modelId":[22],"basicrelationships.localModelId":[21],"foreigns.relatedEntityId":[10],"cruds.modelId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"fields.entityId":[86,101],"foreigns.relatedEntityId":[12],"basicrelationships.localModelId":[25],"basicrelationships.modelId":[26],"cruds.modelId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"fields.entityId":[87,102],"foreigns.relatedEntityId":[28],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"manytomanyrelationships.modelId":[5],"manytomanyrelationships.localModelId":[6],"cruds.modelId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"fields.entityId":[88,99],"foreigns.relatedEntityId":[13],"basicrelationships.localModelId":[27],"basicrelationships.modelId":[28],"cruds.modelId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"fields.entityId":[89,100],"foreigns.relatedEntityId":[14],"basicrelationships.localModelId":[29],"basicrelationships.modelId":[30],"cruds.modelId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"fields.entityId":[104,106],"foreigns.relatedEntityId":[15,18],"basicrelationships.modelId":[31,37],"basicrelationships.localModelId":[32,38],"cruds.modelId":[23]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"fields.entityId":[105,108],"foreigns.relatedEntityId":[24,26,34],"basicrelationships.modelId":[],"basicrelationships.localModelId":[],"manytomanyrelationships.modelId":[1,3,10],"manytomanyrelationships.localModelId":[2,4,9],"cruds.modelId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"fields.entityId":[120,123],"basicrelationships.localModelId":[45,52],"basicrelationships.modelId":[46,51],"foreigns.relatedEntityId":[33,35],"manytomanyrelationships.modelId":[9],"manytomanyrelationships.localModelId":[10],"cruds.modelId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"fields.entityId":[121,122],"foreigns.relatedEntityId":[22],"basicrelationships.modelId":[45],"basicrelationships.localModelId":[46],"cruds.modelId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"fields.entityId":[126,127],"manytomanyrelationships.pivotId":[1,2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"fields.entityId":[128,129],"manytomanyrelationships.pivotId":[3,4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"fields.entityId":[130,131],"manytomanyrelationships.pivotId":[5,6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"fields.entityId":[132,133],"manytomanyrelationships.pivotId":[7,8],"cruds.modelId":[27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"fields.entityId":[135,136],"manytomanyrelationships.pivotId":[9,10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"fields.entityId":[137,147,148,146],"basicrelationships.modelId":[53,62],"basicrelationships.localModelId":[54,61],"foreigns.relatedEntityId":[40],"cruds.modelId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"fields.entityId":[138,139,145,144,142,143],"foreigns.relatedEntityId":[36],"basicrelationships.localModelId":[53],"basicrelationships.modelId":[54],"cruds.modelId":[8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{"fields.entityId":[154,157,158,155,156,159],"basicrelationships.localModelId":[59,62],"basicrelationships.modelId":[60,61],"cruds.modelId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"fields.entityId":[161,173,171,172,166,160],"foreigns.relatedEntityId":[],"basicrelationships.modelId":[70],"basicrelationships.localModelId":[69],"cruds.modelId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{"fields.entityId":[177]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"fields.entityId":[178]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"fields.entityId":[179]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"fields.entityId":[180]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"fields.entityId":[181,182,411,661],"foreigns.relatedEntityId":[84],"manytomanyrelationships.modelId":[21],"manytomanyrelationships.localModelId":[22],"cruds.modelId":[270]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"fields.entityId":[183,184,648,667],"basicrelationships.modelId":[124],"basicrelationships.localModelId":[123],"foreigns.relatedEntityId":[80],"cruds.modelId":[272]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"fields.entityId":[185,186,410,660],"foreigns.relatedEntityId":[86],"manytomanyrelationships.modelId":[25],"manytomanyrelationships.localModelId":[26],"cruds.modelId":[277]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"fields.entityId":[187,188,647,668],"foreigns.relatedEntityId":[81],"basicrelationships.localModelId":[125],"basicrelationships.modelId":[126],"cruds.modelId":[293]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"fields.entityId":[189,190,632,657],"foreigns.relatedEntityId":[82],"basicrelationships.localModelId":[127],"basicrelationships.modelId":[128],"cruds.modelId":[296]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"fields.entityId":[191,192,633,658],"foreigns.relatedEntityId":[83],"basicrelationships.localModelId":[129],"basicrelationships.modelId":[130],"cruds.modelId":[297]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"fields.entityId":[193,194,641,664],"foreigns.relatedEntityId":[54],"manytomanyrelationships.modelId":[15],"manytomanyrelationships.localModelId":[16],"cruds.modelId":[282]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"fields.entityId":[195,196,413],"foreigns.relatedEntityId":[57],"basicrelationships.modelId":[86],"basicrelationships.localModelId":[85],"cruds.modelId":[291]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{"fields.entityId":[214,698,218,215,216,504,452,416,420,421,453,445,446,447,448,300,308,307,455,450,451,301,457,458,459,460,461,462,464,465,467,469,471,468,470,472,477,474,303,304,486,305,306,572,488,489,523,490,491,492,493,494,495,522],"foreigns.relatedEntityId":[63,65,85,87,107,123,137,145,181],"basicrelationships.modelId":[95,85,98,93,123,125,127,129,149,171,176,184,186,189,188,192,193,198,208,217,258],"basicrelationships.localModelId":[96,86,97,94,124,128,130,150,126,175,172,183,185,187,190,191,194,197,207,218,257],"manytomanyrelationships.localModelId":[15,25,21,44],"manytomanyrelationships.modelId":[16,22,26,43],"cruds.modelId":[289]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"fields.entityId":[221,220],"manytomanyrelationships.pivotId":[16,15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"fields.entityId":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"foreigns.relatedEntityId":[69,67,154],"basicrelationships.modelId":[102,97,218],"basicrelationships.localModelId":[101,98,217],"cruds.modelId":[271]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"fields.entityId":[237,238,239,240,241,242,243,244,245,247,249,527],"projects.authModelId":[5],"cruds.modelId":[301],"basicrelationships.localModelId":[102,104,151,171,233,247,249,235],"basicrelationships.modelId":[101,152,172,103,236,234,248,250],"foreigns.relatedEntityId":[70,108,119,161,162,174,175,193],"manytomanyrelationships.modelId":[62],"manytomanyrelationships.localModelId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"fields.entityId":[250,252,579,586,525,597,598,699,251],"foreigns.relatedEntityId":[72,165,192],"basicrelationships.modelId":[109,227,242,235],"basicrelationships.localModelId":[110,228,236,241],"cruds.modelId":[299],"manytomanyrelationships.modelId":[61],"manytomanyrelationships.localModelId":[62]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"fields.entityId":[253,254,511,258,255,510,675,680],"basicrelationships.localModelId":[258,268,273],"basicrelationships.modelId":[257,267,274],"cruds.modelId":[306],"foreigns.relatedEntityId":[191],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"fields.entityId":[259,508,260,261,512,681,695],"basicrelationships.modelId":[269,273],"basicrelationships.localModelId":[270,274],"foreigns.relatedEntityId":[],"cruds.modelId":[307]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"fields.entityId":[269,610,270,271,275,272,273,274,395,396,567,530,378,528,529,592,596,593,594,595,692,600,601,602,609,611],"foreigns.relatedEntityId":[114,149,150,151],"basicrelationships.modelId":[166,110,148,205,212,211,240,241,245],"basicrelationships.localModelId":[165,147,109,206,212,211,239,246,242],"cruds.modelId":[305],"manytomanyrelationships.modelId":[50,49],"manytomanyrelationships.localModelId":[50,49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"fields.entityId":[282,286,284,513,514,399,400],"basicrelationships.localModelId":[93,103,166,251],"basicrelationships.modelId":[104,94,165,252],"cruds.modelId":[298],"foreigns.relatedEntityId":[176],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{"fields.entityId":[289,628,629,669],"foreigns.relatedEntityId":[188],"manytomanyrelationships.modelId":[59],"manytomanyrelationships.localModelId":[60],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"cruds.modelId":[287]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"fields.entityId":[294,295,636,663,674],"foreigns.relatedEntityId":[177,180],"basicrelationships.modelId":[255,256],"basicrelationships.localModelId":[255,256],"cruds.modelId":[294],"manytomanyrelationships.modelId":[57],"manytomanyrelationships.localModelId":[58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{"fields.entityId":[296,297,622,654],"basicrelationships.localModelId":[95,148,205],"basicrelationships.modelId":[96,147,206],"foreigns.relatedEntityId":[66,106,144],"cruds.modelId":[290]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"fields.entityId":[298,317,319,318,435,344,343,342,341,330,329,328,327,326,325,324,320,321,322,323],"foreigns.relatedEntityId":[186,187,189],"manytomanyrelationships.localModelId":[59],"manytomanyrelationships.modelId":[60],"basicrelationships.localModelId":[267,269],"basicrelationships.modelId":[268,270],"cruds.modelId":[286]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"fields.entityId":[310,309],"manytomanyrelationships.pivotId":[22,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"fields.entityId":[313,312],"manytomanyrelationships.pivotId":[26,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{"fields.entityId":[381,382,383,384,386,651],"basicrelationships.localModelId":[149,152,254],"basicrelationships.modelId":[150,151,253],"foreigns.relatedEntityId":[],"cruds.modelId":[266]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{"fields.entityId":[388,390,645,671],"basicrelationships.localModelId":[253],"basicrelationships.modelId":[254],"cruds.modelId":[267],"foreigns.relatedEntityId":[179]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{"fields.entityId":[405,682,406,431,430,683],"basicrelationships.modelId":[173,175],"basicrelationships.localModelId":[176,174],"cruds.modelId":[275],"foreigns.relatedEntityId":[127],"manytomanyrelationships.modelId":[41],"manytomanyrelationships.localModelId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{"fields.entityId":[422,684,425,423,424],"foreigns.relatedEntityId":[122],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[],"basicrelationships.localModelId":[173],"basicrelationships.modelId":[174],"cruds.modelId":[274]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"fields.entityId":[436,616,617,437,441,618],"basicrelationships.modelId":[247,249,251],"basicrelationships.localModelId":[248,250,252],"foreigns.relatedEntityId":[128],"manytomanyrelationships.localModelId":[41],"manytomanyrelationships.modelId":[42],"cruds.modelId":[280]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{"fields.entityId":[443,444],"manytomanyrelationships.pivotId":[41,42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{"fields.entityId":[454,456,630,656],"foreigns.relatedEntityId":[129],"basicrelationships.modelId":[183],"basicrelationships.localModelId":[184],"cruds.modelId":[295]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{"fields.entityId":[463,487,634,659],"foreigns.relatedEntityId":[130],"basicrelationships.modelId":[185],"basicrelationships.localModelId":[186],"cruds.modelId":[278]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{"fields.entityId":[466,475,638,666],"foreigns.relatedEntityId":[131,132],"basicrelationships.modelId":[187,190],"basicrelationships.localModelId":[189,188],"cruds.modelId":[269]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"91":{"hasMany":{"fields.entityId":[473,482,640,665],"foreigns.relatedEntityId":[133,134],"basicrelationships.modelId":[191,194],"basicrelationships.localModelId":[192,193],"cruds.modelId":[279]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"92":{"hasMany":{"fields.entityId":[480,483,639,670],"foreigns.relatedEntityId":[138],"basicrelationships.modelId":[],"basicrelationships.localModelId":[],"manytomanyrelationships.localModelId":[43],"manytomanyrelationships.modelId":[44],"cruds.modelId":[268]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"fields.entityId":[484,485,635,662],"foreigns.relatedEntityId":[136],"basicrelationships.modelId":[197],"basicrelationships.localModelId":[198],"cruds.modelId":[283]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"fields.entityId":[502,503],"manytomanyrelationships.pivotId":[43,44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"fields.entityId":[531,532,534,637,533,535,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,556,558,559,672,560,561,562,563,564,565],"basicrelationships.modelId":[207,209],"basicrelationships.localModelId":[208,210],"foreigns.relatedEntityId":[178],"manytomanyrelationships.localModelId":[57],"manytomanyrelationships.modelId":[58],"cruds.modelId":[292]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"fields.entityId":[553,557,642,643],"foreigns.relatedEntityId":[148],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[],"basicrelationships.localModelId":[209],"basicrelationships.modelId":[210],"cruds.modelId":[288]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"fields.entityId":[568,569],"manytomanyrelationships.pivotId":[50,49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"fields.entityId":[576,580,624,581,585],"basicrelationships.modelId":[228,233],"basicrelationships.localModelId":[227,234],"foreigns.relatedEntityId":[159],"cruds.modelId":[273]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"fields.entityId":[590,591,619,653],"foreigns.relatedEntityId":[164],"basicrelationships.modelId":[239],"basicrelationships.localModelId":[240],"cruds.modelId":[304]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"fields.entityId":[604,606,620,652],"foreigns.relatedEntityId":[169],"basicrelationships.localModelId":[245],"basicrelationships.modelId":[246],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[],"cruds.modelId":[300]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{"fields.entityId":[649,650],"manytomanyrelationships.pivotId":[57,58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"fields.entityId":[690,691],"manytomanyrelationships.pivotId":[59,60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{"fields.entityId":[696,697],"manytomanyrelationships.pivotId":[62,61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{"fields.entityId":[724,725,726,727,728,729],"projects.authModelId":[7],"foreigns.relatedEntityId":[293,298,306],"basicrelationships.localModelId":[389,412],"basicrelationships.modelId":[390,411],"cruds.modelId":[511],"manytomanyrelationships.modelId":[109],"manytomanyrelationships.localModelId":[110]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{"fields.entityId":[730,769,770,789,839,1193,759,763,795,1278,1223,1277,793,1215,794,1214,790,796,791,800,801,798,799,792,811,1256,1257,868,869,870],"foreigns.relatedEntityId":[210,215,216,219,292,304],"basicrelationships.localModelId":[290,304,306,294,387,302,407,405],"basicrelationships.modelId":[289,293,301,303,305,388,408,406],"manytomanyrelationships.localModelId":[69,73,76,77],"manytomanyrelationships.modelId":[70,74,75,78],"cruds.modelId":[513]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{"fields.entityId":[731,826,827,828],"basicrelationships.localModelId":[293],"basicrelationships.modelId":[294],"foreigns.relatedEntityId":[211],"cruds.modelId":[498]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"fields.entityId":[732,773,776,785],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"foreigns.relatedEntityId":[217],"manytomanyrelationships.modelId":[76],"manytomanyrelationships.localModelId":[75],"cruds.modelId":[494]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"fields.entityId":[733,771,772,784],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"foreigns.relatedEntityId":[209],"manytomanyrelationships.modelId":[69],"manytomanyrelationships.localModelId":[70],"cruds.modelId":[503]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"fields.entityId":[734,777,778,1279,783,1280,782,779,780,781,1259,1260],"basicrelationships.localModelId":[289,416,414],"basicrelationships.modelId":[290,413,415],"foreigns.relatedEntityId":[207],"cruds.modelId":[512]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"fields.entityId":[761,762],"manytomanyrelationships.pivotId":[69,70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"fields.entityId":[766,786,787,788,1276],"foreigns.relatedEntityId":[214],"manytomanyrelationships.modelId":[73],"manytomanyrelationships.localModelId":[74],"cruds.modelId":[510]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"fields.entityId":[767,768],"manytomanyrelationships.pivotId":[73,74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"fields.entityId":[774,775],"manytomanyrelationships.pivotId":[75,76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"fields.entityId":[802,807,808,809,806,1196,829,1242],"foreigns.relatedEntityId":[218,294,299],"manytomanyrelationships.modelId":[77,110],"manytomanyrelationships.localModelId":[78,109],"basicrelationships.modelId":[392,412],"basicrelationships.localModelId":[411,391],"cruds.modelId":[515]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{"fields.entityId":[803,804],"manytomanyrelationships.pivotId":[77,78]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{"fields.entityId":[840,846,847,1266,1272,1267,856,1268,1269,1270,1265,1262,848,849],"basicrelationships.modelId":[297,299,302,418],"basicrelationships.localModelId":[301,298,300,417],"foreigns.relatedEntityId":[225,227],"manytomanyrelationships.modelId":[81],"manytomanyrelationships.localModelId":[82],"cruds.modelId":[517]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{"fields.entityId":[841,863,864,865],"foreigns.relatedEntityId":[224,307],"basicrelationships.localModelId":[413,299],"basicrelationships.modelId":[414,300],"cruds.modelId":[501]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{"fields.entityId":[842,859,860,861],"foreigns.relatedEntityId":[223,308],"basicrelationships.localModelId":[415,297],"basicrelationships.modelId":[416,298],"cruds.modelId":[500]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{"fields.entityId":[843,866,867,1275],"foreigns.relatedEntityId":[226],"manytomanyrelationships.localModelId":[81],"manytomanyrelationships.modelId":[82],"cruds.modelId":[518]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"140":{"hasMany":{"fields.entityId":[844,852,853,857,1251,1255],"foreigns.relatedEntityId":[229],"basicrelationships.localModelId":[305],"basicrelationships.modelId":[306],"cruds.modelId":[502]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"fields.entityId":[845,854,855,858,1253,1254],"foreigns.relatedEntityId":[228],"basicrelationships.localModelId":[303],"basicrelationships.modelId":[304],"cruds.modelId":[499]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{"fields.entityId":[850,851],"manytomanyrelationships.pivotId":[81,82]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{"fields.entityId":[1065,1066,1067,1064],"basicrelationships.localModelId":[352],"basicrelationships.modelId":[351],"cruds.modelId":[426]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{"fields.entityId":[1068,1186,1073,1074,1076,1077,1085,1086,1087,1078,1088,1089,1090,1091,1082,1083,1084,1081,1080,1079,1072,1075],"projects.authModelId":[10],"foreigns.relatedEntityId":[268,270,278,283,289],"manytomanyrelationships.localModelId":[99,104],"manytomanyrelationships.modelId":[100,103],"cruds.modelId":[431],"basicrelationships.localModelId":[356,367,379],"basicrelationships.modelId":[355,368,380]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"194":{"hasMany":{"fields.entityId":[1092,1192,1093,1096,1095,1094],"foreigns.relatedEntityId":[],"basicrelationships.modelId":[384],"basicrelationships.localModelId":[383],"manytomanyrelationships.modelId":[101],"manytomanyrelationships.localModelId":[102],"cruds.modelId":[427]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"195":{"hasMany":{"fields.entityId":[1182,1099,1100,1098],"basicrelationships.localModelId":[381,384],"basicrelationships.modelId":[382,383],"foreigns.relatedEntityId":[290,291],"cruds.modelId":[428]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"196":{"hasMany":{"fields.entityId":[1104,1191,1102,1103],"basicrelationships.localModelId":[382],"basicrelationships.modelId":[381],"cruds.modelId":[429]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"197":{"hasMany":{"fields.entityId":[1106,1185,1107,1108,1109,1110,1111,1114,1116,1117,1118,1113,1112,1115],"basicrelationships.modelId":[379],"basicrelationships.localModelId":[380],"cruds.modelId":[430]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"198":{"hasMany":{"fields.entityId":[1120,1159,1160],"foreigns.relatedEntityId":[275],"manytomanyrelationships.modelId":[99],"manytomanyrelationships.localModelId":[100],"cruds.modelId":[424]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"199":{"hasMany":{"fields.entityId":[1121,1122],"manytomanyrelationships.pivotId":[100,99]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"200":{"hasMany":{"fields.entityId":[1123,1124,1125],"manytomanyrelationships.pivotId":[101,102]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"201":{"hasMany":{"fields.entityId":[1187,1179,1127,1128,1141,1145,1146,1139,1129,1131,1142,1143,1144,1130,1132,1133,1134,1135,1136,1137,1138,1147,1140],"foreigns.relatedEntityId":[267,276,277],"basicrelationships.modelId":[367,352,363],"basicrelationships.localModelId":[368,351,364],"manytomanyrelationships.localModelId":[101],"manytomanyrelationships.modelId":[102],"cruds.modelId":[425]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"202":{"hasMany":{"fields.entityId":[1150,1151,1152,1153,1154,1155,1156,1157],"basicrelationships.modelId":[356,364],"basicrelationships.localModelId":[355,363],"cruds.modelId":[423]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"203":{"hasMany":{"fields.entityId":[1162,1165,1166,1167,1178],"foreigns.relatedEntityId":[279,281],"manytomanyrelationships.localModelId":[103,106],"manytomanyrelationships.modelId":[104,105],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"cruds.modelId":[422]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"204":{"hasMany":{"fields.entityId":[1163,1164],"manytomanyrelationships.pivotId":[103,104]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"205":{"hasMany":{"fields.entityId":[1168,1173,1174,1176,1177],"foreigns.relatedEntityId":[282],"basicrelationships.modelId":[],"basicrelationships.localModelId":[],"manytomanyrelationships.localModelId":[105],"manytomanyrelationships.modelId":[106],"cruds.modelId":[421]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"207":{"hasMany":{"fields.entityId":[1171,1172],"manytomanyrelationships.pivotId":[105,106]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"208":{"hasMany":{"fields.entityId":[1194,1197,1198,1210,1202,1201,1204,1199,1219],"basicrelationships.modelId":[387,389,420,391,398],"basicrelationships.localModelId":[388,390,392,397,419],"cruds.modelId":[504],"foreigns.relatedEntityId":[310]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"212":{"hasMany":{"fields.entityId":[1211,1212],"manytomanyrelationships.pivotId":[109,110]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"213":{"hasMany":{"fields.entityId":[1217,1220,1221,1222],"basicrelationships.localModelId":[398],"basicrelationships.modelId":[397],"foreigns.relatedEntityId":[301],"cruds.modelId":[516]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"214":{"hasMany":{"fields.entityId":[1224,1235,1236,1240,1241,1232,1281,1234,1274],"basicrelationships.modelId":[409,419,407,405],"basicrelationships.localModelId":[410,420,408,406],"foreigns.relatedEntityId":[],"cruds.modelId":[514]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"215":{"hasMany":{"fields.entityId":[1233,1237,1238,1239],"foreigns.relatedEntityId":[305],"basicrelationships.localModelId":[409],"basicrelationships.modelId":[410],"cruds.modelId":[497]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"216":{"hasMany":{"fields.entityId":[1261,1263,1264],"foreigns.relatedEntityId":[309],"basicrelationships.modelId":[417],"basicrelationships.localModelId":[418],"cruds.modelId":[508]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"217":{"hasMany":{"fields.entityId":[1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292],"projects.authModelId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{"fields.entityId":[1293]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"219":{"hasMany":{"fields.entityId":[1294]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"220":{"hasMany":{"fields.entityId":[1295]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"221":{"hasMany":{"fields.entityId":[1296]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"222":{"hasMany":{"fields.entityId":[1297]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"223":{"hasMany":{"fields.entityId":[1298]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"224":{"hasMany":{"fields.entityId":[1299]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"225":{"hasMany":{"fields.entityId":[1300]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"226":{"hasMany":{"fields.entityId":[1301]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"227":{"hasMany":{"fields.entityId":[1302]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"228":{"hasMany":{"fields.entityId":[1303]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"229":{"hasMany":{"fields.entityId":[1304]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"230":{"hasMany":{"fields.entityId":[1305]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"231":{"hasMany":{"fields.entityId":[1306]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"232":{"hasMany":{"fields.entityId":[1307]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"233":{"hasMany":{"fields.entityId":[1308,1309,1310],"foreigns.relatedEntityId":[311],"basicrelationships.modelId":[422],"basicrelationships.localModelId":[421],"cruds.modelId":[519]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"234":{"hasMany":{"fields.entityId":[1311,1312,1313,1314],"foreigns.relatedEntityId":[312],"manytomanyrelationships.localModelId":[111],"manytomanyrelationships.modelId":[112],"cruds.modelId":[520]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"235":{"hasMany":{"fields.entityId":[1315,1316,1317,1318],"foreigns.relatedEntityId":[313,314],"basicrelationships.modelId":[423,425],"basicrelationships.localModelId":[424,426],"cruds.modelId":[521]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"236":{"hasMany":{"fields.entityId":[1319,1320,1321,1322],"foreigns.relatedEntityId":[315,316],"basicrelationships.modelId":[427,429],"basicrelationships.localModelId":[430,428],"cruds.modelId":[522]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"237":{"hasMany":{"fields.entityId":[1323,1324],"manytomanyrelationships.pivotId":[111,112]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"238":{"hasMany":{"fields.entityId":[1325,1326,1327,1328],"foreigns.relatedEntityId":[318],"manytomanyrelationships.modelId":[113],"manytomanyrelationships.localModelId":[114],"cruds.modelId":[523]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"239":{"hasMany":{"fields.entityId":[1329,1330,1331,1332],"basicrelationships.modelId":[431],"basicrelationships.localModelId":[432],"foreigns.relatedEntityId":[319],"cruds.modelId":[524]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"240":{"hasMany":{"fields.entityId":[1333,1334,1335,1336],"foreigns.relatedEntityId":[320],"basicrelationships.localModelId":[434],"basicrelationships.modelId":[433],"cruds.modelId":[525]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"241":{"hasMany":{"fields.entityId":[1337,1338,1339,1340],"foreigns.relatedEntityId":[321],"basicrelationships.modelId":[436],"basicrelationships.localModelId":[435],"cruds.modelId":[526]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"242":{"hasMany":{"fields.entityId":[1341,1342,1343,1344],"foreigns.relatedEntityId":[322],"basicrelationships.localModelId":[437],"basicrelationships.modelId":[438],"cruds.modelId":[527]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"243":{"hasMany":{"fields.entityId":[1345,1346,1347,1348],"foreigns.relatedEntityId":[323],"basicrelationships.localModelId":[439],"basicrelationships.modelId":[440],"cruds.modelId":[528]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"244":{"hasMany":{"fields.entityId":[1349,1350],"manytomanyrelationships.pivotId":[115,116]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"245":{"hasMany":{"fields.entityId":[1351,1352,1353,1354],"foreigns.relatedEntityId":[325],"manytomanyrelationships.modelId":[116],"manytomanyrelationships.localModelId":[115],"cruds.modelId":[529]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"246":{"hasMany":{"fields.entityId":[1355,1356],"manytomanyrelationships.pivotId":[117,118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"247":{"hasMany":{"fields.entityId":[1357,1358,1359,1360],"foreigns.relatedEntityId":[327],"manytomanyrelationships.modelId":[118],"manytomanyrelationships.localModelId":[117],"cruds.modelId":[530]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"248":{"hasMany":{"fields.entityId":[1361,1362],"manytomanyrelationships.pivotId":[114,113]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"249":{"hasMany":{"fields.entityId":[1363,1364],"manytomanyrelationships.pivotId":[120,119]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"250":{"hasMany":{"fields.entityId":[1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395],"basicrelationships.modelId":[442,434],"basicrelationships.localModelId":[441,433],"foreigns.relatedEntityId":[330],"manytomanyrelationships.localModelId":[120],"manytomanyrelationships.modelId":[119],"cruds.modelId":[531]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"251":{"hasMany":{"fields.entityId":[1396,1397,1398,1399],"basicrelationships.localModelId":[443,446,448],"basicrelationships.modelId":[444,445,447],"foreigns.relatedEntityId":[332,333,334],"cruds.modelId":[532]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"252":{"hasMany":{"fields.entityId":[1400,1401,1402,1403],"foreigns.relatedEntityId":[335],"basicrelationships.localModelId":[450],"basicrelationships.modelId":[449],"cruds.modelId":[533]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"253":{"hasMany":{"fields.entityId":[1404,1405,1406,1407],"foreigns.relatedEntityId":[336],"basicrelationships.modelId":[452],"basicrelationships.localModelId":[451],"cruds.modelId":[534]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"254":{"hasMany":{"fields.entityId":[1408,1409],"manytomanyrelationships.pivotId":[121,122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"255":{"hasMany":{"fields.entityId":[1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429],"foreigns.relatedEntityId":[339,340,341],"manytomanyrelationships.localModelId":[123],"manytomanyrelationships.modelId":[124],"basicrelationships.localModelId":[454,456],"basicrelationships.modelId":[453,455],"cruds.modelId":[535]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"256":{"hasMany":{"fields.entityId":[1430,1431,1432,1433],"basicrelationships.localModelId":[458],"basicrelationships.modelId":[457],"cruds.modelId":[536],"foreigns.relatedEntityId":[342]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"257":{"hasMany":{"fields.entityId":[1434,1435,1436,1437,1438,1439],"basicrelationships.localModelId":[459,461,457],"basicrelationships.modelId":[460,462,458],"cruds.modelId":[537]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"258":{"hasMany":{"fields.entityId":[1440,1441],"manytomanyrelationships.pivotId":[123,124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"259":{"hasMany":{"fields.entityId":[1442,1443,1444,1445,1446],"foreigns.relatedEntityId":[329,346],"basicrelationships.modelId":[463,464],"basicrelationships.localModelId":[463,464],"cruds.modelId":[538],"manytomanyrelationships.modelId":[120],"manytomanyrelationships.localModelId":[119]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"260":{"hasMany":{"fields.entityId":[1447,1448,1449,1450],"foreigns.relatedEntityId":[345],"manytomanyrelationships.modelId":[123],"manytomanyrelationships.localModelId":[124],"cruds.modelId":[539]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"261":{"hasMany":{"fields.entityId":[1451,1452],"manytomanyrelationships.pivotId":[126,125]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"262":{"hasMany":{"fields.entityId":[1453,1454,1455,1456,1457],"foreigns.relatedEntityId":[349],"basicrelationships.localModelId":[465],"basicrelationships.modelId":[466],"cruds.modelId":[540]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"263":{"hasMany":{"fields.entityId":[1458,1459,1460,1461,1462,1463,1464],"basicrelationships.modelId":[456,468],"basicrelationships.localModelId":[455,467],"cruds.modelId":[541]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"264":{"hasMany":{"fields.entityId":[1465,1466,1467,1468,1469,1470,1471],"basicrelationships.localModelId":[471,474,476,470],"basicrelationships.modelId":[473,472,475,469],"cruds.modelId":[542],"foreigns.relatedEntityId":[351]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"265":{"hasMany":{"fields.entityId":[1472,1473,1474,1475,1476,1477],"basicrelationships.modelId":[465,478],"basicrelationships.localModelId":[477,466],"cruds.modelId":[543],"foreigns.relatedEntityId":[347],"manytomanyrelationships.modelId":[126],"manytomanyrelationships.localModelId":[125]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"266":{"hasMany":{"fields.entityId":[1478,1479],"manytomanyrelationships.pivotId":[127,128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{"fields.entityId":[1480,1481,1482,1483,1484],"basicrelationships.modelId":[479,481],"basicrelationships.localModelId":[480,482],"foreigns.relatedEntityId":[358],"cruds.modelId":[544]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"268":{"hasMany":{"fields.entityId":[1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510],"foreigns.relatedEntityId":[354,360,337,338],"basicrelationships.modelId":[476,486,446,448,483,484,451,487,450],"basicrelationships.localModelId":[475,445,485,447,483,484,452,449,488],"cruds.modelId":[545],"manytomanyrelationships.modelId":[121,122],"manytomanyrelationships.localModelId":[121,122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{"fields.entityId":[1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525],"foreigns.relatedEntityId":[363,364,365],"basicrelationships.modelId":[490,491,493],"basicrelationships.localModelId":[489,492,494],"cruds.modelId":[546]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{"fields.entityId":[1526,1527,1528,1529],"foreigns.relatedEntityId":[366],"basicrelationships.modelId":[496],"basicrelationships.localModelId":[495],"cruds.modelId":[547]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"271":{"hasMany":{"fields.entityId":[1530,1531,1532,1533,1534,1535,1536,1537],"basicrelationships.localModelId":[497,453,468],"basicrelationships.modelId":[498,454,467],"cruds.modelId":[548],"foreigns.relatedEntityId":[350]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"272":{"hasMany":{"fields.entityId":[1538,1539,1540,1541],"foreigns.relatedEntityId":[368],"basicrelationships.localModelId":[500],"basicrelationships.modelId":[499],"cruds.modelId":[549]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{"fields.entityId":[1542,1543,1544,1545],"foreigns.relatedEntityId":[369],"basicrelationships.modelId":[502],"basicrelationships.localModelId":[501],"cruds.modelId":[550]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{"fields.entityId":[1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599],"foreigns.relatedEntityId":[328,352,324,326,343,355,317,331,367],"basicrelationships.modelId":[443,421,492,471,432,439,500,437,459,503,477,501,435,430,428,424,426,495,441,494,497],"basicrelationships.localModelId":[444,422,491,472,431,499,438,460,440,478,504,502,436,427,429,423,425,496,442,493,498],"manytomanyrelationships.localModelId":[113,118,116,112],"manytomanyrelationships.modelId":[114,115,117,111],"cruds.modelId":[551]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"275":{"hasMany":{"fields.entityId":[1600,1601,1602,1603,1604,1605,1606,1607,1608],"foreigns.relatedEntityId":[361,362,356],"basicrelationships.modelId":[485,480,488,506],"basicrelationships.localModelId":[486,479,505,487],"cruds.modelId":[552],"manytomanyrelationships.modelId":[128],"manytomanyrelationships.localModelId":[127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"276":{"hasMany":{"fields.entityId":[1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620],"projects.authModelId":[12],"cruds.modelId":[553],"basicrelationships.localModelId":[490,473,462,503,481,508,510,506],"basicrelationships.modelId":[489,461,504,474,505,482,507,509],"foreigns.relatedEntityId":[353,344,370,359,371,372,373,357],"manytomanyrelationships.modelId":[127],"manytomanyrelationships.localModelId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"277":{"hasMany":{"fields.entityId":[1621,1622,1623,1624,1625,1626],"basicrelationships.modelId":[508,510,470],"basicrelationships.localModelId":[507,509,469],"foreigns.relatedEntityId":[348],"manytomanyrelationships.localModelId":[126],"manytomanyrelationships.modelId":[125],"cruds.modelId":[554]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"278":{"hasMany":{"fields.entityId":[1627]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"279":{"hasMany":{"fields.entityId":[1628]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"280":{"hasMany":{"fields.entityId":[1629]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"281":{"hasMany":{"fields.entityId":[1630]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"282":{"hasMany":{"fields.entityId":[1631]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"283":{"hasMany":{"fields.entityId":[1632]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"284":{"hasMany":{"fields.entityId":[1633]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"285":{"hasMany":{"fields.entityId":[1634]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"286":{"hasMany":{"fields.entityId":[1635]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"287":{"hasMany":{"fields.entityId":[1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646],"projects.authModelId":[13],"cruds.modelId":[558],"foreigns.relatedEntityId":[377],"manytomanyrelationships.modelId":[132],"manytomanyrelationships.localModelId":[131]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"288":{"hasMany":{"fields.entityId":[1647,1648,1650,1649,1651,1654],"foreigns.relatedEntityId":[376],"manytomanyrelationships.localModelId":[132],"manytomanyrelationships.modelId":[131],"cruds.modelId":[557]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"290":{"hasMany":{"fields.entityId":[1655,1656],"manytomanyrelationships.pivotId":[131,132]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"291":{"hasMany":{"fields.entityId":[1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1917],"projects.authModelId":[14],"foreigns.relatedEntityId":[409,442,451,455],"basicrelationships.localModelId":[555,590,604,607,611],"basicrelationships.modelId":[556,589,603,608,612],"morphrelationships.localModelId":[21],"cruds.modelId":[570]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"292":{"hasMany":{"fields.entityId":[1668,1810,1722,1723,1724,1725,1726,1727,1728,1760,1759],"cruds.modelId":[573],"basicrelationships.modelId":[535,537,538,566,572,574,600],"basicrelationships.localModelId":[537,538,565,599,573,571,536],"foreigns.relatedEntityId":[392,426,429,433,434,448],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[],"morphrelationships.modelId":[13,14,15,16],"morphrelationships.localModelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"293":{"hasMany":{"fields.entityId":[1669,1749,1729,1730,1731,1774,1775,1732,1733,1755,1780,1746],"basicrelationships.modelId":[527,548,547],"basicrelationships.localModelId":[548,547,528],"foreigns.relatedEntityId":[405,430],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[],"morphrelationships.modelId":[17,18,19,20],"cruds.modelId":[564]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{"fields.entityId":[1670]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"296":{"hasMany":{"fields.entityId":[1672,1859,1854,1855,1857,1858,1860,1861,1856,1862,1831,1833,1832],"foreigns.relatedEntityId":[444,458],"basicrelationships.modelId":[567,569,591,592,613,571],"basicrelationships.localModelId":[568,572,591,592,614,570],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[],"morphrelationships.modelId":[],"morphrelationships.localModelId":[15,18,24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"300":{"hasMany":{"fields.entityId":[1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686],"projects.authModelId":[15],"foreigns.relatedEntityId":[379,386,378],"basicrelationships.localModelId":[511,513,523],"basicrelationships.modelId":[512,514,524]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"301":{"hasMany":{"fields.entityId":[1687,1688,1689,1690,1700,1692,1707],"basicrelationships.modelId":[511,522],"basicrelationships.localModelId":[512,521],"foreigns.relatedEntityId":[],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"302":{"hasMany":{"fields.entityId":[1693,1694,1695,1696,1709,1698],"basicrelationships.modelId":[513],"basicrelationships.localModelId":[514]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"303":{"hasMany":{"fields.entityId":[1699,1701,1708],"foreigns.relatedEntityId":[385],"basicrelationships.modelId":[521,523],"basicrelationships.localModelId":[522,524],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"305":{"hasMany":{"fields.entityId":[1710,1721,1713,1714,1715,1752,1720,1754,1791,1798,1750,1818,1748],"basicrelationships.modelId":[529,553,558,557,565],"basicrelationships.localModelId":[554,558,557,566,530],"foreigns.relatedEntityId":[415],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[],"morphrelationships.localModelId":[13,17,23,25],"morphrelationships.modelId":[],"cruds.modelId":[567]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"306":{"hasMany":{"fields.entityId":[1711,1792,1902,1903,1898,1899,1900,1901,1905,1904,1906,1908],"foreigns.relatedEntityId":[408,431,436,445,461],"basicrelationships.modelId":[554,555,568,578,594,618],"basicrelationships.localModelId":[553,556,567,577,593,617],"cruds.modelId":[569]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"307":{"hasMany":{"fields.entityId":[1712,1786,1787,1788,1933,1935,1936,1938,1939,1940,1941],"foreigns.relatedEntityId":[459,460],"basicrelationships.modelId":[616,615,617],"basicrelationships.localModelId":[616,615,618],"morphrelationships.modelId":[23,24],"cruds.modelId":[571]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"308":{"hasMany":{"fields.entityId":[1735,1740,1741,1781,1784,1783,1743],"foreigns.relatedEntityId":[388,389,391,410,432,435,446],"basicrelationships.localModelId":[527,529,535,569,575,595],"basicrelationships.modelId":[528,530,536,570,576,596],"manytomanyrelationships.modelId":[141],"manytomanyrelationships.localModelId":[142],"cruds.modelId":[572]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"309":{"hasMany":{"fields.entityId":[1736,1909],"foreigns.relatedEntityId":[411,413,418],"manytomanyrelationships.localModelId":[146,148,141],"manytomanyrelationships.modelId":[142,145,147],"basicrelationships.localModelId":[605],"basicrelationships.modelId":[606]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"310":{"hasMany":{"fields.entityId":[1737],"foreigns.relatedEntityId":[414],"manytomanyrelationships.localModelId":[145],"manytomanyrelationships.modelId":[146]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"311":{"hasMany":{"fields.entityId":[1738],"foreigns.relatedEntityId":[419],"basicrelationships.modelId":[],"basicrelationships.localModelId":[],"manytomanyrelationships.localModelId":[147],"manytomanyrelationships.modelId":[148]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"317":{"hasMany":{"fields.entityId":[1793,1794],"manytomanyrelationships.pivotId":[142,141]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"319":{"hasMany":{"fields.entityId":[1796,1797],"manytomanyrelationships.pivotId":[145,146]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"320":{"hasMany":{"fields.entityId":[1800,1836,1834,1835],"morphrelationships.localModelId":[14,19],"basicrelationships.modelId":[575,577,573],"basicrelationships.localModelId":[574,578,576]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"321":{"hasMany":{"fields.entityId":[1802,1803],"manytomanyrelationships.pivotId":[147,148]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"324":{"hasMany":{"fields.entityId":[1809,1863,1864,1865,1866,1867,1868,1869,1871,1873,1875,1874,1872],"morphrelationships.localModelId":[16,20,22],"basicrelationships.modelId":[593,595,598,597,599],"basicrelationships.localModelId":[594,598,597,600,596],"foreigns.relatedEntityId":[447]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"329":{"hasMany":{"fields.entityId":[1826,1827,1825],"morphrelationships.pivotId":[13,14,15,16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"330":{"hasMany":{"fields.entityId":[1829,1828,1830],"morphrelationships.pivotId":[17,18,19,20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"331":{"hasMany":{"fields.entityId":[1838]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"332":{"hasMany":{"fields.entityId":[1839],"foreigns.relatedEntityId":[452],"basicrelationships.modelId":[605],"basicrelationships.localModelId":[606]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"333":{"hasMany":{"fields.entityId":[1840,1848],"foreigns.relatedEntityId":[438],"basicrelationships.localModelId":[581,589],"basicrelationships.modelId":[582,590]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"334":{"hasMany":{"fields.entityId":[1841,1897],"basicrelationships.modelId":[604],"basicrelationships.localModelId":[603]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"335":{"hasMany":{"fields.entityId":[1842,1843],"basicrelationships.modelId":[581],"basicrelationships.localModelId":[582]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"336":{"hasMany":{"fields.entityId":[1849],"foreigns.relatedEntityId":[443],"morphrelationships.modelId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"337":{"hasMany":{"fields.entityId":[1850,1851,1852],"morphrelationships.pivotId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"338":{"hasMany":{"fields.entityId":[1853,1930,1931,1932,1893,1892,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1894,1895],"foreigns.relatedEntityId":[449],"morphrelationships.modelId":[22,25],"cruds.modelId":[566]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"339":{"hasMany":{"fields.entityId":[1877,1925],"foreigns.relatedEntityId":[],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[],"basicrelationships.localModelId":[613],"basicrelationships.modelId":[614]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"340":{"hasMany":{"fields.entityId":[1880,1881,1879],"morphrelationships.pivotId":[22,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"341":{"hasMany":{"fields.entityId":[1910]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"342":{"hasMany":{"fields.entityId":[1911,1914,1915,1913,1920],"foreigns.relatedEntityId":[453],"basicrelationships.modelId":[607],"basicrelationships.localModelId":[608]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"343":{"hasMany":{"fields.entityId":[1918,1921,1922],"basicrelationships.localModelId":[612],"basicrelationships.modelId":[611]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"345":{"hasMany":{"fields.entityId":[1927,1928,1926],"morphrelationships.pivotId":[23,24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"346":{"hasMany":{"fields.entityId":[1929]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_306":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Author","type":"model","plural":"Authors","pluralAndSingularAreSame":false,"table":"authors","projectId":14,"top":"1185px","left":"-729px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000001_create_authors_table.php","foreignsMigrationName":"2023_09_10_009001_add_foreigns_to_authors_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":306,"createdAt":"2023-11-24 08:44:59","updatedAt":"2023-12-11 10:49:03"},"item_346":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Blacklist","type":"model","plural":"Blacklists","pluralAndSingularAreSame":false,"table":"blacklists","projectId":14,"top":"2771px","left":"-881px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000002_create_blacklists_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":346,"createdAt":"2023-12-11 09:47:12","updatedAt":"2023-12-11 10:49:03"},"item_343":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"BypassToken","type":"model","plural":"BypassTokens","pluralAndSingularAreSame":false,"table":"bypass_tokens","projectId":14,"top":"2368px","left":"-1462px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000003_create_bypass_tokens_table.php","foreignsMigrationName":"2023_09_10_009002_add_foreigns_to_bypass_tokens_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":343,"createdAt":"2023-12-10 23:03:53","updatedAt":"2023-12-11 10:49:03"},"item_335":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Cart","type":"model","plural":"Carts","pluralAndSingularAreSame":false,"table":"carts","projectId":14,"top":"2327px","left":"2048px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000004_create_carts_table.php","foreignsMigrationName":"2023_09_10_009003_add_foreigns_to_carts_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":335,"createdAt":"2023-12-10 01:19:22","updatedAt":"2023-12-11 10:49:03"},"item_329":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"categorizables","type":"table","table":"categorizables","plural":"","top":"331px","left":"348px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_09_10_000005_create_categorizables_table.php","foreignsMigrationName":"2023_09_10_009004_add_foreigns_to_categorizables_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":329,"createdAt":"2023-12-10 00:38:07","updatedAt":"2023-12-11 10:49:03"},"item_292":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Category","type":"model","plural":"Categories","pluralAndSingularAreSame":false,"table":"categories","projectId":14,"top":"665px","left":"355px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000002_create_categories_table.php","foreignsMigrationName":"2023_09_10_009001_add_foreigns_to_categories_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":292,"createdAt":"2023-09-10 01:16:18","updatedAt":"2023-12-11 16:56:07"},"item_307":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Comment","type":"model","plural":"Comments","pluralAndSingularAreSame":false,"table":"comments","projectId":14,"top":"-100px","left":"4101px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000003_create_comments_table.php","foreignsMigrationName":"2023_09_10_009005_add_foreigns_to_comments_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":307,"createdAt":"2023-11-26 19:40:26","updatedAt":"2023-12-11 11:25:58"},"item_345":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"commentables","type":"table","table":"commentables","plural":"","top":"-683px","left":"3852px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_09_10_000006_create_commentables_table.php","foreignsMigrationName":"2023_09_10_009006_add_foreigns_to_commentables_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":345,"createdAt":"2023-12-11 09:14:03","updatedAt":"2023-12-11 10:49:03"},"item_332":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Continent","type":"model","plural":"Continents","pluralAndSingularAreSame":false,"table":"continents","projectId":14,"top":"88px","left":"-2837px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000007_create_continents_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":332,"createdAt":"2023-12-10 01:13:42","updatedAt":"2023-12-11 10:49:03"},"item_309":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Country","type":"model","plural":"Countries","pluralAndSingularAreSame":false,"table":"countries","projectId":14,"top":"49px","left":"-2129px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000006_create_countries_table.php","foreignsMigrationName":"2023_09_10_009007_add_foreigns_to_countries_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":309,"createdAt":"2023-12-08 00:55:53","updatedAt":"2023-12-11 10:49:03"},"item_319":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"country_currency","type":"table","table":"country_currency","plural":"","top":"513px","left":"-2123px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_09_10_000008_create_country_currency_table.php","foreignsMigrationName":"2023_09_10_009008_add_foreigns_to_country_currency_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":319,"createdAt":"2023-12-09 14:22:37","updatedAt":"2023-12-11 10:49:04"},"item_317":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"country_language","type":"table","table":"country_language","plural":"","top":"113px","left":"-1542px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_09_10_000009_create_country_language_table.php","foreignsMigrationName":"2023_09_10_009009_add_foreigns_to_country_language_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":317,"createdAt":"2023-12-09 14:20:24","updatedAt":"2023-12-11 10:49:04"},"item_321":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"country_timezone","type":"table","table":"country_timezone","plural":"","top":"-294px","left":"-2125px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_09_10_000010_create_country_timezone_table.php","foreignsMigrationName":"2023_09_10_009010_add_foreigns_to_country_timezone_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":321,"createdAt":"2023-12-09 23:20:58","updatedAt":"2023-12-11 10:49:04"},"item_310":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Currency","type":"model","plural":"Currencies","pluralAndSingularAreSame":false,"table":"currencies","projectId":14,"top":"851px","left":"-2107px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000007_create_currencies_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":310,"createdAt":"2023-12-08 00:56:07","updatedAt":"2023-12-10 00:53:02"},"item_333":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Customer","type":"model","plural":"Customers","pluralAndSingularAreSame":false,"table":"customers","projectId":14,"top":"2317px","left":"1421px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000011_create_customers_table.php","foreignsMigrationName":"2023_09_10_009011_add_foreigns_to_customers_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":333,"createdAt":"2023-12-10 01:18:45","updatedAt":"2023-12-11 10:49:04"},"item_324":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Item","type":"model","plural":"Items","pluralAndSingularAreSame":false,"table":"items","projectId":14,"top":"267px","left":"2062px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000012_create_items_table.php","foreignsMigrationName":"2023_09_10_009012_add_foreigns_to_items_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":324,"createdAt":"2023-12-09 23:28:27","updatedAt":"2023-12-11 16:57:38"},"item_308":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Language","type":"model","plural":"Languages","pluralAndSingularAreSame":false,"table":"languages","projectId":14,"top":"-47px","left":"-761px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":null,"foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":"2023_09_10_000008_create_languages_table.php","oldForeignsMigrationName":null,"id":308,"createdAt":"2023-12-08 00:54:51","updatedAt":"2023-12-11 16:55:49"},"item_341":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Order","type":"model","plural":"Orders","pluralAndSingularAreSame":false,"table":"orders","projectId":14,"top":"2836px","left":"2079px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000013_create_orders_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":341,"createdAt":"2023-12-10 22:58:50","updatedAt":"2023-12-11 10:49:03"},"item_296":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Page","type":"model","plural":"Pages","pluralAndSingularAreSame":false,"table":"pages","projectId":14,"top":"-592px","left":"2043px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000009_create_pages_table.php","foreignsMigrationName":"2023_09_10_009013_add_foreigns_to_pages_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":296,"createdAt":"2023-09-10 01:26:22","updatedAt":"2023-12-11 16:57:33"},"item_339":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"PageTemplate","type":"model","plural":"PageTemplates","pluralAndSingularAreSame":false,"table":"page_templates","projectId":14,"top":"-181px","left":"3017px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000014_create_page_templates_table.php","foreignsMigrationName":"2023_09_10_009014_add_foreigns_to_page_templates_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":339,"createdAt":"2023-12-10 22:25:35","updatedAt":"2023-12-11 16:57:52"},"item_336":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Platform","type":"model","plural":"Platforms","pluralAndSingularAreSame":false,"table":"platforms","projectId":14,"top":"3009px","left":"70px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000015_create_platforms_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":336,"createdAt":"2023-12-10 01:58:21","updatedAt":"2023-12-11 10:49:03"},"item_305":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Post","type":"model","plural":"Posts","pluralAndSingularAreSame":false,"table":"posts","projectId":14,"top":"-1352px","left":"2051px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000011_create_posts_table.php","foreignsMigrationName":"2023_09_10_009003_add_foreigns_to_posts_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":305,"createdAt":"2023-11-24 08:44:30","updatedAt":"2023-12-11 16:57:48"},"item_331":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"PostalCode","type":"model","plural":"PostalCodes","pluralAndSingularAreSame":false,"table":"postal_codes","projectId":14,"top":"486px","left":"-2847px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000016_create_postal_codes_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":331,"createdAt":"2023-12-10 01:05:02","updatedAt":"2023-12-11 10:49:03"},"item_320":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Product","type":"model","plural":"Products","pluralAndSingularAreSame":false,"table":"products","projectId":14,"top":"1289px","left":"2064px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000017_create_products_table.php","foreignsMigrationName":"2023_09_10_009015_add_foreigns_to_products_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":320,"createdAt":"2023-12-09 23:20:07","updatedAt":"2023-12-11 16:57:42"},"item_338":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Revision","type":"model","plural":"Revisions","pluralAndSingularAreSame":false,"table":"revisions","projectId":14,"top":"282px","left":"4573px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000018_create_revisions_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":338,"createdAt":"2023-12-10 02:13:58","updatedAt":"2023-12-11 16:57:58"},"item_340":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"revisionables","type":"table","table":"revisionables","plural":"","top":"493px","left":"3522px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_09_10_000019_create_revisionables_table.php","foreignsMigrationName":"2023_09_10_009016_add_foreigns_to_revisionables_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":340,"createdAt":"2023-12-10 22:27:33","updatedAt":"2023-12-11 16:57:56"},"item_294":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Setting","type":"model","plural":"Settings","pluralAndSingularAreSame":false,"table":"settings","projectId":14,"top":"-1051px","left":"-762px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000012_create_settings_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":294,"createdAt":"2023-09-10 01:16:35","updatedAt":"2023-12-10 22:46:32"},"item_334":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Subscriber","type":"model","plural":"Subscribers","pluralAndSingularAreSame":false,"table":"subscribers","projectId":14,"top":"1676px","left":"1425px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000020_create_subscribers_table.php","foreignsMigrationName":"2023_09_10_009017_add_foreigns_to_subscribers_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":334,"createdAt":"2023-12-10 01:19:04","updatedAt":"2023-12-11 10:49:04"},"item_337":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"syncables","type":"table","table":"syncables","plural":"","top":"2663px","left":"40px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_09_10_000021_create_syncables_table.php","foreignsMigrationName":"2023_09_10_009018_add_foreigns_to_syncables_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":337,"createdAt":"2023-12-10 02:11:36","updatedAt":"2023-12-11 16:23:19"},"item_293":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Tag","type":"model","plural":"Tags","pluralAndSingularAreSame":false,"table":"tags","projectId":14,"top":"-771px","left":"352px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000013_create_tags_table.php","foreignsMigrationName":"2023_09_10_009004_add_foreigns_to_tags_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":293,"createdAt":"2023-09-10 01:16:25","updatedAt":"2023-12-11 16:56:12"},"item_330":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"taggables","type":"table","table":"taggables","plural":"","top":"-131px","left":"359px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_09_10_000022_create_taggables_table.php","foreignsMigrationName":"2023_09_10_009019_add_foreigns_to_taggables_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":330,"createdAt":"2023-12-10 00:46:01","updatedAt":"2023-12-11 16:56:02"},"item_311":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Timezone","type":"model","plural":"Timezones","pluralAndSingularAreSame":false,"table":"timezones","projectId":14,"top":"-636px","left":"-2108px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000014_create_timezones_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":311,"createdAt":"2023-12-08 00:56:28","updatedAt":"2023-12-10 00:52:55"},"item_291":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":14,"name":"User","type":"model","table":"users","plural":"Users","top":"1845px","left":"31px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2014_10_12_000000_create_users_table.php","foreignsMigrationName":"2023_09_10_009020_add_foreigns_to_users_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":291,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-12-11 10:49:04"},"item_342":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Whitelist","type":"model","plural":"Whitelists","pluralAndSingularAreSame":false,"table":"whitelists","projectId":14,"top":"1826px","left":"-1431px","pivot":false,"softDeletes":true,"timestamps":true,"needsCentralization":false,"migrationName":"2023_09_10_000023_create_whitelists_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":342,"createdAt":"2023-12-10 23:01:16","updatedAt":"2023-12-11 10:49:03"}},"fields":{"fields":{"count":1269,"lastPrimaryKey":1941,"index":{"37":{"hasMany":{"foreigns.relatedFieldId":[45],"basicrelationships.parentKeyId":[72,71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"inputs.fieldId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"inputs.fieldId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"inputs.fieldId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"foreigns.relatedFieldId":[25,39,47],"basicrelationships.parentKeyId":[60,59,76,75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"foreigns.relatedFieldId":[2],"basicrelationships.parentKeyId":[4,3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"foreigns.fieldId":[2],"basicrelationships.foreignKeyId":[4,3],"inputs.fieldId":[67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"foreigns.relatedFieldId":[4,44],"basicrelationships.parentKeyId":[8,7,69,70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"inputs.fieldId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"inputs.fieldId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"inputs.fieldId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"inputs.fieldId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"foreigns.fieldId":[4],"basicrelationships.foreignKeyId":[8,7],"inputs.fieldId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"foreigns.relatedFieldId":[5,6,46],"basicrelationships.parentKeyId":[10,9,11,12,14,13,74,73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"inputs.fieldId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{"inputs.fieldId":[58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{"foreigns.fieldId":[5],"basicrelationships.foreignKeyId":[10,9,11,12],"inputs.fieldId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{"foreigns.fieldId":[6],"basicrelationships.foreignKeyId":[14,13],"inputs.fieldId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{"foreigns.relatedFieldId":[7,21],"basicrelationships.parentKeyId":[16,15,44,43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"inputs.fieldId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{"inputs.fieldId":[44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"inputs.fieldId":[45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"inputs.fieldId":[46]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"inputs.fieldId":[47]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{"inputs.fieldId":[48]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"inputs.fieldId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"inputs.fieldId":[50]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{"inputs.fieldId":[51]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"inputs.fieldId":[52]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{"inputs.fieldId":[53]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{"inputs.fieldId":[54]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{"inputs.fieldId":[55]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{"inputs.fieldId":[56]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{"foreigns.fieldId":[7],"basicrelationships.foreignKeyId":[16,15],"inputs.fieldId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{"foreigns.relatedFieldId":[20,27,29,31],"basicrelationships.parentKeyId":[41,42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{"foreigns.relatedFieldId":[30],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{"foreigns.relatedFieldId":[10],"basicrelationships.parentKeyId":[22,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"foreigns.relatedFieldId":[12],"basicrelationships.parentKeyId":[26,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{"foreigns.relatedFieldId":[28],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{"foreigns.relatedFieldId":[13],"basicrelationships.parentKeyId":[28,27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{"foreigns.relatedFieldId":[14],"basicrelationships.parentKeyId":[30,29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{"inputs.fieldId":[38]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"foreigns.fieldId":[10],"basicrelationships.foreignKeyId":[22,21],"inputs.fieldId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"foreigns.fieldId":[12],"basicrelationships.foreignKeyId":[26,25],"inputs.fieldId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{"foreigns.fieldId":[13],"basicrelationships.foreignKeyId":[28,27],"inputs.fieldId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{"foreigns.fieldId":[14],"basicrelationships.foreignKeyId":[30,29],"inputs.fieldId":[35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"inputs.fieldId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{"inputs.fieldId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"inputs.fieldId":[40]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"inputs.fieldId":[39]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"inputs.fieldId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"foreigns.relatedFieldId":[15,18],"basicrelationships.parentKeyId":[32,31,38,37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{"foreigns.relatedFieldId":[24,26,34],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{"inputs.fieldId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{"foreigns.fieldId":[15],"basicrelationships.foreignKeyId":[32,31],"inputs.fieldId":[68]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{"inputs.fieldId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{"foreigns.fieldId":[18],"basicrelationships.foreignKeyId":[38,37],"inputs.fieldId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"113":{"hasMany":{"foreigns.fieldId":[20],"basicrelationships.foreignKeyId":[41,42],"inputs.fieldId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{"inputs.fieldId":[27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"115":{"hasMany":{"inputs.fieldId":[28]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{"inputs.fieldId":[29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{"inputs.fieldId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{"inputs.fieldId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"foreigns.fieldId":[21],"basicrelationships.foreignKeyId":[44,43],"inputs.fieldId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"foreigns.relatedFieldId":[33,35],"basicrelationships.parentKeyId":[51,52]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"foreigns.relatedFieldId":[22],"basicrelationships.parentKeyId":[46,45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{"inputs.fieldId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"foreigns.fieldId":[22],"basicrelationships.foreignKeyId":[46,45],"inputs.fieldId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"inputs.fieldId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{"foreigns.fieldId":[24],"manytomanyrelationships.localModelKeyId":[2],"manytomanyrelationships.modelKeyId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"foreigns.fieldId":[25],"manytomanyrelationships.modelKeyId":[2],"manytomanyrelationships.localModelKeyId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"foreigns.fieldId":[26],"manytomanyrelationships.localModelKeyId":[4],"manytomanyrelationships.modelKeyId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"foreigns.fieldId":[27],"manytomanyrelationships.modelKeyId":[4],"manytomanyrelationships.localModelKeyId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"foreigns.fieldId":[28],"manytomanyrelationships.localModelKeyId":[6],"manytomanyrelationships.modelKeyId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"foreigns.fieldId":[29],"manytomanyrelationships.modelKeyId":[6],"manytomanyrelationships.localModelKeyId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"foreigns.fieldId":[30],"manytomanyrelationships.localModelKeyId":[8],"manytomanyrelationships.modelKeyId":[7],"inputs.fieldId":[83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"foreigns.fieldId":[31],"manytomanyrelationships.modelKeyId":[8],"manytomanyrelationships.localModelKeyId":[7],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"135":{"hasMany":{"foreigns.fieldId":[33],"manytomanyrelationships.localModelKeyId":[10],"manytomanyrelationships.modelKeyId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{"foreigns.fieldId":[34],"manytomanyrelationships.modelKeyId":[10],"manytomanyrelationships.localModelKeyId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{"foreigns.relatedFieldId":[40],"basicrelationships.parentKeyId":[62,61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{"foreigns.relatedFieldId":[36],"basicrelationships.parentKeyId":[54,53]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{"inputs.fieldId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"foreigns.fieldId":[35],"basicrelationships.foreignKeyId":[51,52],"inputs.fieldId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{"inputs.fieldId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"143":{"hasMany":{"inputs.fieldId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{"inputs.fieldId":[23]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{"inputs.fieldId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{"foreigns.fieldId":[36],"basicrelationships.foreignKeyId":[54,53],"inputs.fieldId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"inputs.fieldId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{"inputs.fieldId":[60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"155":{"hasMany":{"foreigns.fieldId":[39],"basicrelationships.foreignKeyId":[60,59],"inputs.fieldId":[65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"156":{"hasMany":{"foreigns.fieldId":[40],"basicrelationships.foreignKeyId":[62,61],"inputs.fieldId":[66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"157":{"hasMany":{"inputs.fieldId":[62]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{"inputs.fieldId":[64]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{"inputs.fieldId":[63]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{"inputs.fieldId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"foreigns.fieldId":[44],"basicrelationships.foreignKeyId":[69,70],"inputs.fieldId":[80]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"167":{"hasMany":{"inputs.fieldId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"171":{"hasMany":{"inputs.fieldId":[78]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{"inputs.fieldId":[79]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"173":{"hasMany":{"inputs.fieldId":[85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{"foreigns.fieldId":[45],"basicrelationships.foreignKeyId":[72,71],"inputs.fieldId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{"foreigns.fieldId":[46],"basicrelationships.foreignKeyId":[74,73],"inputs.fieldId":[87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{"foreigns.fieldId":[47],"basicrelationships.foreignKeyId":[76,75],"inputs.fieldId":[88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"177":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"178":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"179":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"180":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"181":{"hasMany":{"foreigns.relatedFieldId":[84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"182":{"hasMany":{"inputs.fieldId":[1739]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"183":{"hasMany":{"foreigns.relatedFieldId":[80],"basicrelationships.parentKeyId":[124,123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"184":{"hasMany":{"inputs.fieldId":[1756]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"185":{"hasMany":{"foreigns.relatedFieldId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"186":{"hasMany":{"inputs.fieldId":[1774]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"187":{"hasMany":{"foreigns.relatedFieldId":[81],"basicrelationships.parentKeyId":[125,126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"188":{"hasMany":{"inputs.fieldId":[1922]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"189":{"hasMany":{"foreigns.relatedFieldId":[82],"basicrelationships.parentKeyId":[128,127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"190":{"hasMany":{"inputs.fieldId":[1932]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"191":{"hasMany":{"foreigns.relatedFieldId":[83],"basicrelationships.parentKeyId":[129,130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{"inputs.fieldId":[1935]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{"foreigns.relatedFieldId":[54]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"194":{"hasMany":{"inputs.fieldId":[1791]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"195":{"hasMany":{"foreigns.relatedFieldId":[57],"basicrelationships.parentKeyId":[85,86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"196":{"hasMany":{"inputs.fieldId":[1890]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"214":{"hasMany":{"foreigns.relatedFieldId":[63,65,85,87,107,123,137,145,181],"basicrelationships.parentKeyId":[93,94,149,150,176,175,208,207,258,257]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"215":{"hasMany":{"foreigns.fieldId":[66],"basicrelationships.foreignKeyId":[95,96],"inputs.fieldId":[1836]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"216":{"hasMany":{"foreigns.fieldId":[57],"basicrelationships.foreignKeyId":[85,86],"inputs.fieldId":[1837]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{"foreigns.fieldId":[67],"basicrelationships.foreignKeyId":[97,98],"inputs.fieldId":[1835]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"220":{"hasMany":{"foreigns.fieldId":[54],"manytomanyrelationships.localModelKeyId":[16],"manytomanyrelationships.modelKeyId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"221":{"hasMany":{"foreigns.fieldId":[63],"manytomanyrelationships.modelKeyId":[16],"manytomanyrelationships.localModelKeyId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"222":{"hasMany":{"foreigns.relatedFieldId":[69,67,154],"basicrelationships.parentKeyId":[101,102,97,98,218,217]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"223":{"hasMany":{"inputs.fieldId":[1742]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"224":{"hasMany":{"inputs.fieldId":[1745]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"225":{"hasMany":{"inputs.fieldId":[1746]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"226":{"hasMany":{"inputs.fieldId":[1747]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"227":{"hasMany":{"inputs.fieldId":[1748]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"228":{"hasMany":{"inputs.fieldId":[1749]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"229":{"hasMany":{"inputs.fieldId":[1750]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"230":{"hasMany":{"inputs.fieldId":[1751]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"231":{"hasMany":{"inputs.fieldId":[1752]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"232":{"hasMany":{"inputs.fieldId":[1753]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"233":{"hasMany":{"inputs.fieldId":[1754]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"234":{"hasMany":{"inputs.fieldId":[1755]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"235":{"hasMany":{"inputs.fieldId":[1744]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"236":{"hasMany":{"inputs.fieldId":[1743]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"237":{"hasMany":{"foreigns.relatedFieldId":[70,108,119,161,162,174,175,193],"basicrelationships.parentKeyId":[104,152,151,171,172,103,233,236,234,248,250,247,249,235]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"238":{"hasMany":{"inputs.fieldId":[1954]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"239":{"hasMany":{"inputs.fieldId":[1955]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"240":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"241":{"hasMany":{"inputs.fieldId":[1956]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"242":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"243":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"244":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"245":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"247":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"249":{"hasMany":{"foreigns.fieldId":[69],"basicrelationships.foreignKeyId":[101,102],"inputs.fieldId":[1957]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"250":{"hasMany":{"foreigns.relatedFieldId":[72,165,192],"basicrelationships.parentKeyId":[109,110,241,242]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"251":{"hasMany":{"inputs.fieldId":[1944]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"252":{"hasMany":{"inputs.fieldId":[1945]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"253":{"hasMany":{"foreigns.relatedFieldId":[191],"basicrelationships.parentKeyId":[274,273]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"254":{"hasMany":{"inputs.fieldId":[2036]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"255":{"hasMany":{"inputs.fieldId":[2038]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"258":{"hasMany":{"inputs.fieldId":[2037]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"259":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"260":{"hasMany":{"inputs.fieldId":[2044]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"261":{"hasMany":{"inputs.fieldId":[2045]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{"foreigns.relatedFieldId":[114,149,150,151],"basicrelationships.parentKeyId":[165,166,212,211],"basicrelationships.foreignKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{"inputs.fieldId":[2012]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"271":{"hasMany":{"inputs.fieldId":[2013]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"272":{"hasMany":{"inputs.fieldId":[2015]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{"inputs.fieldId":[2016]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{"inputs.fieldId":[2017]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"275":{"hasMany":{"foreigns.fieldId":[72],"basicrelationships.foreignKeyId":[109,110],"inputs.fieldId":[2014]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"282":{"hasMany":{"foreigns.relatedFieldId":[176],"basicrelationships.parentKeyId":[252,251]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"284":{"hasMany":{"foreigns.fieldId":[70],"basicrelationships.foreignKeyId":[104,103],"inputs.fieldId":[1940]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"286":{"hasMany":{"foreigns.fieldId":[65],"basicrelationships.foreignKeyId":[93,94],"inputs.fieldId":[1939]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"289":{"hasMany":{"foreigns.relatedFieldId":[188],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{"foreigns.relatedFieldId":[177,180],"basicrelationships.parentKeyId":[255,256]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"295":{"hasMany":{"inputs.fieldId":[1925]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"296":{"hasMany":{"foreigns.relatedFieldId":[66,106,144],"basicrelationships.parentKeyId":[95,96,147,206,148,205]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"297":{"hasMany":{"inputs.fieldId":[1887]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"298":{"hasMany":{"foreigns.relatedFieldId":[186,187,189],"basicrelationships.parentKeyId":[268,267,270,269]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"300":{"hasMany":{"inputs.fieldId":[1848]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"301":{"hasMany":{"inputs.fieldId":[1854]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"303":{"hasMany":{"inputs.fieldId":[1871]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"304":{"hasMany":{"inputs.fieldId":[1872]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"305":{"hasMany":{"foreigns.fieldId":[80],"basicrelationships.foreignKeyId":[124,123],"inputs.fieldId":[1874]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"306":{"hasMany":{"foreigns.fieldId":[81],"basicrelationships.foreignKeyId":[125,126],"inputs.fieldId":[1875]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"307":{"hasMany":{"foreigns.fieldId":[82],"basicrelationships.foreignKeyId":[128,127],"inputs.fieldId":[1850]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"308":{"hasMany":{"foreigns.fieldId":[83],"basicrelationships.foreignKeyId":[129,130],"inputs.fieldId":[1849]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"309":{"hasMany":{"foreigns.fieldId":[84],"manytomanyrelationships.localModelKeyId":[22],"manytomanyrelationships.modelKeyId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"310":{"hasMany":{"foreigns.fieldId":[85],"manytomanyrelationships.modelKeyId":[22],"manytomanyrelationships.localModelKeyId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"312":{"hasMany":{"foreigns.fieldId":[86],"manytomanyrelationships.localModelKeyId":[26],"manytomanyrelationships.modelKeyId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"313":{"hasMany":{"foreigns.fieldId":[87],"manytomanyrelationships.modelKeyId":[26],"manytomanyrelationships.localModelKeyId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"317":{"hasMany":{"inputs.fieldId":[1810]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"318":{"hasMany":{"inputs.fieldId":[1811]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"319":{"hasMany":{"inputs.fieldId":[1812]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"320":{"hasMany":{"inputs.fieldId":[1813]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"321":{"hasMany":{"inputs.fieldId":[1814]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"322":{"hasMany":{"inputs.fieldId":[1815]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"323":{"hasMany":{"inputs.fieldId":[1816]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"324":{"hasMany":{"inputs.fieldId":[1817]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"325":{"hasMany":{"inputs.fieldId":[1818]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"326":{"hasMany":{"inputs.fieldId":[1819]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"327":{"hasMany":{"inputs.fieldId":[1820]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"328":{"hasMany":{"inputs.fieldId":[1821]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"329":{"hasMany":{"inputs.fieldId":[1822]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"330":{"hasMany":{"inputs.fieldId":[1823]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"341":{"hasMany":{"inputs.fieldId":[1824]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"342":{"hasMany":{"inputs.fieldId":[1825]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"343":{"hasMany":{"inputs.fieldId":[1826]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"344":{"hasMany":{"inputs.fieldId":[1828]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"378":{"hasMany":{"foreigns.fieldId":[106],"basicrelationships.foreignKeyId":[147,148],"inputs.fieldId":[2022]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"381":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"382":{"hasMany":{"foreigns.fieldId":[107],"basicrelationships.foreignKeyId":[149,150],"inputs.fieldId":[1725]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"383":{"hasMany":{"inputs.fieldId":[1726]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"384":{"hasMany":{"inputs.fieldId":[1727]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"386":{"hasMany":{"foreigns.fieldId":[108],"basicrelationships.foreignKeyId":[152,151],"inputs.fieldId":[1728]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"388":{"hasMany":{"foreigns.relatedFieldId":[179],"basicrelationships.parentKeyId":[254,253]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"390":{"hasMany":{"inputs.fieldId":[1730]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"395":{"hasMany":{"inputs.fieldId":[2018]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"396":{"hasMany":{"inputs.fieldId":[2019]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"399":{"hasMany":{"inputs.fieldId":[1943]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"400":{"hasMany":{"foreigns.fieldId":[114],"basicrelationships.foreignKeyId":[165,166],"inputs.fieldId":[1938]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"405":{"hasMany":{"foreigns.relatedFieldId":[127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"406":{"hasMany":{"inputs.fieldId":[1769]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"410":{"hasMany":{"inputs.fieldId":[1775]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"411":{"hasMany":{"inputs.fieldId":[1740]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"413":{"hasMany":{"inputs.fieldId":[1891]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"416":{"hasMany":{"inputs.fieldId":[1840]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"420":{"hasMany":{"foreigns.fieldId":[119],"basicrelationships.foreignKeyId":[171,172],"inputs.fieldId":[1841]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"421":{"hasMany":{"inputs.fieldId":[1842]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"422":{"hasMany":{"foreigns.relatedFieldId":[122],"basicrelationships.parentKeyId":[173,174]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"423":{"hasMany":{"inputs.fieldId":[1763]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"424":{"hasMany":{"inputs.fieldId":[1765]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"425":{"hasMany":{"inputs.fieldId":[1766]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"430":{"hasMany":{"foreigns.fieldId":[122],"basicrelationships.foreignKeyId":[173,174],"inputs.fieldId":[1771]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"431":{"hasMany":{"foreigns.fieldId":[123],"basicrelationships.foreignKeyId":[176,175],"inputs.fieldId":[1770]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"435":{"hasMany":{"inputs.fieldId":[1827]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"436":{"hasMany":{"foreigns.relatedFieldId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"437":{"hasMany":{"inputs.fieldId":[1785]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"441":{"hasMany":{"inputs.fieldId":[1786]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"443":{"hasMany":{"foreigns.fieldId":[127],"manytomanyrelationships.localModelKeyId":[42],"manytomanyrelationships.modelKeyId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"444":{"hasMany":{"foreigns.fieldId":[128],"manytomanyrelationships.modelKeyId":[42],"manytomanyrelationships.localModelKeyId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"445":{"hasMany":{"inputs.fieldId":[1844]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"446":{"hasMany":{"inputs.fieldId":[1845]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"447":{"hasMany":{"inputs.fieldId":[1846]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"448":{"hasMany":{"inputs.fieldId":[1847]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"450":{"hasMany":{"inputs.fieldId":[1852]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"451":{"hasMany":{"inputs.fieldId":[1853]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"452":{"hasMany":{"inputs.fieldId":[1839]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"453":{"hasMany":{"inputs.fieldId":[1843]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"454":{"hasMany":{"foreigns.relatedFieldId":[129],"basicrelationships.parentKeyId":[184,183]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"455":{"hasMany":{"foreigns.fieldId":[129],"basicrelationships.foreignKeyId":[184,183],"inputs.fieldId":[1851]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"456":{"hasMany":{"inputs.fieldId":[1929]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"457":{"hasMany":{"inputs.fieldId":[1855]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"458":{"hasMany":{"inputs.fieldId":[1856]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"459":{"hasMany":{"inputs.fieldId":[1857]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"460":{"hasMany":{"inputs.fieldId":[1858]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"461":{"hasMany":{"inputs.fieldId":[1859]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"462":{"hasMany":{"inputs.fieldId":[1860]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"463":{"hasMany":{"foreigns.relatedFieldId":[130],"basicrelationships.parentKeyId":[186,185]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"464":{"hasMany":{"foreigns.fieldId":[130],"basicrelationships.foreignKeyId":[186,185],"inputs.fieldId":[1861]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"465":{"hasMany":{"inputs.fieldId":[1862]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"466":{"hasMany":{"foreigns.relatedFieldId":[131,132],"basicrelationships.parentKeyId":[187,190,189,188]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"467":{"hasMany":{"foreigns.fieldId":[131],"basicrelationships.foreignKeyId":[187,188],"inputs.fieldId":[1863]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"468":{"hasMany":{"foreigns.fieldId":[132],"basicrelationships.foreignKeyId":[190,189],"inputs.fieldId":[1866]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"469":{"hasMany":{"inputs.fieldId":[1864]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"470":{"hasMany":{"inputs.fieldId":[1867]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"471":{"hasMany":{"inputs.fieldId":[1865]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"472":{"hasMany":{"inputs.fieldId":[1868]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"473":{"hasMany":{"foreigns.relatedFieldId":[133,134],"basicrelationships.parentKeyId":[191,194,192,193]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"474":{"hasMany":{"foreigns.fieldId":[133],"basicrelationships.foreignKeyId":[191,192],"inputs.fieldId":[1870]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"475":{"hasMany":{"inputs.fieldId":[1736]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"477":{"hasMany":{"foreigns.fieldId":[134],"basicrelationships.foreignKeyId":[194,193],"inputs.fieldId":[1869]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"480":{"hasMany":{"foreigns.relatedFieldId":[138],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"482":{"hasMany":{"inputs.fieldId":[1780]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"483":{"hasMany":{"inputs.fieldId":[1733]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"484":{"hasMany":{"foreigns.relatedFieldId":[136],"basicrelationships.parentKeyId":[198,197]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"485":{"hasMany":{"inputs.fieldId":[1794]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"486":{"hasMany":{"foreigns.fieldId":[136],"basicrelationships.foreignKeyId":[198,197],"inputs.fieldId":[1873]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"487":{"hasMany":{"inputs.fieldId":[1777]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"488":{"hasMany":{"inputs.fieldId":[1877]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"489":{"hasMany":{"inputs.fieldId":[1878]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"490":{"hasMany":{"inputs.fieldId":[1880]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"491":{"hasMany":{"inputs.fieldId":[1881]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"492":{"hasMany":{"inputs.fieldId":[1882]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"493":{"hasMany":{"inputs.fieldId":[1883]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"494":{"hasMany":{"inputs.fieldId":[1884]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"495":{"hasMany":{"inputs.fieldId":[1885]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"502":{"hasMany":{"foreigns.fieldId":[137],"manytomanyrelationships.localModelKeyId":[44],"manytomanyrelationships.modelKeyId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"503":{"hasMany":{"foreigns.fieldId":[138],"manytomanyrelationships.modelKeyId":[44],"manytomanyrelationships.localModelKeyId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"504":{"hasMany":{"inputs.fieldId":[1838]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"508":{"hasMany":{"inputs.fieldId":[2043]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"510":{"hasMany":{"inputs.fieldId":[2039]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"511":{"hasMany":{"inputs.fieldId":[2040]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"512":{"hasMany":{"inputs.fieldId":[2047]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"513":{"hasMany":{"inputs.fieldId":[1941]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"514":{"hasMany":{"inputs.fieldId":[1942]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"522":{"hasMany":{"inputs.fieldId":[1886]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"523":{"hasMany":{"inputs.fieldId":[1879]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"525":{"hasMany":{"inputs.fieldId":[1948]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"527":{"hasMany":{"inputs.fieldId":[1958]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"528":{"hasMany":{"inputs.fieldId":[2023]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"529":{"hasMany":{"inputs.fieldId":[2024]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"530":{"hasMany":{"foreigns.fieldId":[144],"basicrelationships.foreignKeyId":[206,205],"inputs.fieldId":[2021]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"531":{"hasMany":{"foreigns.relatedFieldId":[178]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"532":{"hasMany":{"foreigns.fieldId":[145],"basicrelationships.foreignKeyId":[208,207],"inputs.fieldId":[1892]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"533":{"hasMany":{"inputs.fieldId":[1895]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"534":{"hasMany":{"inputs.fieldId":[1893]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"535":{"hasMany":{"inputs.fieldId":[1896]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"536":{"hasMany":{"inputs.fieldId":[1897]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"537":{"hasMany":{"inputs.fieldId":[1898]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"538":{"hasMany":{"inputs.fieldId":[1899]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"539":{"hasMany":{"inputs.fieldId":[1900]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"541":{"hasMany":{"inputs.fieldId":[1901]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"542":{"hasMany":{"inputs.fieldId":[1902]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"543":{"hasMany":{"inputs.fieldId":[1903]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"544":{"hasMany":{"inputs.fieldId":[1904]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"545":{"hasMany":{"inputs.fieldId":[1905]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"546":{"hasMany":{"inputs.fieldId":[1906]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"547":{"hasMany":{"inputs.fieldId":[1907]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"548":{"hasMany":{"inputs.fieldId":[1908]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"549":{"hasMany":{"inputs.fieldId":[1909]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"550":{"hasMany":{"inputs.fieldId":[1910]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"551":{"hasMany":{"inputs.fieldId":[1911]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"553":{"hasMany":{"foreigns.relatedFieldId":[148],"basicrelationships.parentKeyId":[210,209]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"556":{"hasMany":{"foreigns.fieldId":[148],"basicrelationships.foreignKeyId":[210,209],"inputs.fieldId":[1912]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"557":{"hasMany":{"inputs.fieldId":[1832]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"558":{"hasMany":{"inputs.fieldId":[1913]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"559":{"hasMany":{"inputs.fieldId":[1914]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"560":{"hasMany":{"inputs.fieldId":[1916]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"561":{"hasMany":{"inputs.fieldId":[1917]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"562":{"hasMany":{"inputs.fieldId":[1918]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"563":{"hasMany":{"inputs.fieldId":[1919]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"564":{"hasMany":{"inputs.fieldId":[1920]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"565":{"hasMany":{"inputs.fieldId":[1921]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"567":{"hasMany":{"foreigns.fieldId":[149],"basicrelationships.foreignKeyId":[212,211],"inputs.fieldId":[2020]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"568":{"hasMany":{"foreigns.fieldId":[150],"manytomanyrelationships.localModelKeyId":[50],"manytomanyrelationships.modelKeyId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"569":{"hasMany":{"foreigns.fieldId":[151],"manytomanyrelationships.modelKeyId":[50],"manytomanyrelationships.localModelKeyId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"572":{"hasMany":{"foreigns.fieldId":[154],"basicrelationships.foreignKeyId":[218,217],"inputs.fieldId":[1876]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"576":{"hasMany":{"foreigns.relatedFieldId":[159],"basicrelationships.parentKeyId":[228,227]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"579":{"hasMany":{"foreigns.fieldId":[159],"basicrelationships.foreignKeyId":[228,227],"inputs.fieldId":[1946]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"580":{"hasMany":{"inputs.fieldId":[1759]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"581":{"hasMany":{"inputs.fieldId":[1761]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"585":{"hasMany":{"foreigns.fieldId":[161],"basicrelationships.foreignKeyId":[233,234],"inputs.fieldId":[1762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"586":{"hasMany":{"foreigns.fieldId":[162],"basicrelationships.foreignKeyId":[236,235],"inputs.fieldId":[1947]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"590":{"hasMany":{"foreigns.relatedFieldId":[164],"basicrelationships.parentKeyId":[240,239]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"591":{"hasMany":{"inputs.fieldId":[2008]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"592":{"hasMany":{"foreigns.fieldId":[164],"basicrelationships.foreignKeyId":[240,239],"inputs.fieldId":[2025]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"593":{"hasMany":{"inputs.fieldId":[2027]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"594":{"hasMany":{"inputs.fieldId":[2028]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"595":{"hasMany":{"inputs.fieldId":[2029]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"596":{"hasMany":{"foreigns.fieldId":[165],"basicrelationships.foreignKeyId":[241,242],"inputs.fieldId":[2026]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"597":{"hasMany":{"inputs.fieldId":[1949]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"598":{"hasMany":{"inputs.fieldId":[1950]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"600":{"hasMany":{"inputs.fieldId":[2031]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"601":{"hasMany":{"inputs.fieldId":[2032]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"602":{"hasMany":{"inputs.fieldId":[2033]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"604":{"hasMany":{"foreigns.relatedFieldId":[169],"basicrelationships.parentKeyId":[246,245]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"606":{"hasMany":{"inputs.fieldId":[1951]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"609":{"hasMany":{"foreigns.fieldId":[169],"basicrelationships.foreignKeyId":[246,245],"inputs.fieldId":[2034]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"610":{"hasMany":{"inputs.fieldId":[2011]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"611":{"hasMany":{"inputs.fieldId":[2035]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"616":{"hasMany":{"foreigns.fieldId":[174],"basicrelationships.foreignKeyId":[248,247],"inputs.fieldId":[1783]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"617":{"hasMany":{"foreigns.fieldId":[175],"basicrelationships.foreignKeyId":[250,249],"inputs.fieldId":[1784]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"618":{"hasMany":{"foreigns.fieldId":[176],"basicrelationships.foreignKeyId":[252,251],"inputs.fieldId":[1787]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"619":{"hasMany":{"inputs.fieldId":[2009]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"620":{"hasMany":{"inputs.fieldId":[1952]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"622":{"hasMany":{"inputs.fieldId":[1888]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"624":{"hasMany":{"inputs.fieldId":[1760]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"628":{"hasMany":{"inputs.fieldId":[1829]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"629":{"hasMany":{"inputs.fieldId":[1830]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"630":{"hasMany":{"inputs.fieldId":[1930]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"632":{"hasMany":{"inputs.fieldId":[1933]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"633":{"hasMany":{"inputs.fieldId":[1936]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"634":{"hasMany":{"inputs.fieldId":[1778]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"635":{"hasMany":{"inputs.fieldId":[1795]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"636":{"hasMany":{"inputs.fieldId":[1926]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"637":{"hasMany":{"inputs.fieldId":[1894]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"638":{"hasMany":{"inputs.fieldId":[1737]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"639":{"hasMany":{"inputs.fieldId":[1734]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"640":{"hasMany":{"inputs.fieldId":[1781]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"641":{"hasMany":{"inputs.fieldId":[1792]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"642":{"hasMany":{"inputs.fieldId":[1833]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"643":{"hasMany":{"inputs.fieldId":[1834]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"645":{"hasMany":{"inputs.fieldId":[1731]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"647":{"hasMany":{"inputs.fieldId":[1923]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"648":{"hasMany":{"inputs.fieldId":[1757]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"649":{"hasMany":{"foreigns.fieldId":[177],"manytomanyrelationships.localModelKeyId":[58],"manytomanyrelationships.modelKeyId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"650":{"hasMany":{"foreigns.fieldId":[178],"manytomanyrelationships.modelKeyId":[58],"manytomanyrelationships.localModelKeyId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"651":{"hasMany":{"foreigns.fieldId":[179],"basicrelationships.foreignKeyId":[254,253],"inputs.fieldId":[1729]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"652":{"hasMany":{"inputs.fieldId":[1953]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"653":{"hasMany":{"inputs.fieldId":[2010]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"654":{"hasMany":{"inputs.fieldId":[1889]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"656":{"hasMany":{"inputs.fieldId":[1931]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"657":{"hasMany":{"inputs.fieldId":[1934]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"658":{"hasMany":{"inputs.fieldId":[1937]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"659":{"hasMany":{"inputs.fieldId":[1779]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"660":{"hasMany":{"inputs.fieldId":[1776]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"661":{"hasMany":{"inputs.fieldId":[1741]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"662":{"hasMany":{"inputs.fieldId":[1796]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"663":{"hasMany":{"inputs.fieldId":[1927]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"664":{"hasMany":{"inputs.fieldId":[1793]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"665":{"hasMany":{"inputs.fieldId":[1782]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"666":{"hasMany":{"inputs.fieldId":[1738]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"667":{"hasMany":{"inputs.fieldId":[1758]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"668":{"hasMany":{"inputs.fieldId":[1924]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"669":{"hasMany":{"inputs.fieldId":[1831]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"670":{"hasMany":{"inputs.fieldId":[1735]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"671":{"hasMany":{"inputs.fieldId":[1732]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"672":{"hasMany":{"inputs.fieldId":[1915]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"674":{"hasMany":{"foreigns.fieldId":[180],"basicrelationships.foreignKeyId":[255,256],"inputs.fieldId":[1928]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"675":{"hasMany":{"foreigns.fieldId":[181],"basicrelationships.foreignKeyId":[258,257],"inputs.fieldId":[2041]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"680":{"hasMany":{"foreigns.fieldId":[186],"basicrelationships.foreignKeyId":[268,267],"inputs.fieldId":[2042]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"681":{"hasMany":{"foreigns.fieldId":[187],"basicrelationships.foreignKeyId":[270,269],"inputs.fieldId":[2046]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"682":{"hasMany":{"inputs.fieldId":[1767]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"683":{"hasMany":{"inputs.fieldId":[1768]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"684":{"hasMany":{"inputs.fieldId":[1764]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"690":{"hasMany":{"foreigns.fieldId":[188],"manytomanyrelationships.localModelKeyId":[60],"manytomanyrelationships.modelKeyId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"691":{"hasMany":{"foreigns.fieldId":[189],"manytomanyrelationships.modelKeyId":[60],"manytomanyrelationships.localModelKeyId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"692":{"hasMany":{"inputs.fieldId":[2030]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"695":{"hasMany":{"foreigns.fieldId":[191],"basicrelationships.foreignKeyId":[274,273],"inputs.fieldId":[2048]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"696":{"hasMany":{"foreigns.fieldId":[192],"manytomanyrelationships.localModelKeyId":[62],"manytomanyrelationships.modelKeyId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"697":{"hasMany":{"foreigns.fieldId":[193],"manytomanyrelationships.modelKeyId":[62],"manytomanyrelationships.localModelKeyId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"698":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"699":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"724":{"hasMany":{"foreigns.relatedFieldId":[293,298,306],"basicrelationships.parentKeyId":[390,389,412,411]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"725":{"hasMany":{"inputs.fieldId":[3435]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"726":{"hasMany":{"inputs.fieldId":[3436]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"727":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"728":{"hasMany":{"inputs.fieldId":[3437]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"729":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"730":{"hasMany":{"foreigns.relatedFieldId":[210,215,216,219,292,304],"basicrelationships.parentKeyId":[388,387,408,407,406,405]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"731":{"hasMany":{"foreigns.relatedFieldId":[211],"basicrelationships.parentKeyId":[293,294]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"732":{"hasMany":{"foreigns.relatedFieldId":[217],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"733":{"hasMany":{"foreigns.relatedFieldId":[209]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"734":{"hasMany":{"foreigns.relatedFieldId":[207],"basicrelationships.parentKeyId":[290,289]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"759":{"hasMany":{"foreigns.fieldId":[207],"basicrelationships.foreignKeyId":[290,289],"inputs.fieldId":[3454]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"761":{"hasMany":{"foreigns.fieldId":[209],"manytomanyrelationships.localModelKeyId":[70],"manytomanyrelationships.modelKeyId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"762":{"hasMany":{"foreigns.fieldId":[210],"manytomanyrelationships.modelKeyId":[70],"manytomanyrelationships.localModelKeyId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"763":{"hasMany":{"foreigns.fieldId":[211],"basicrelationships.foreignKeyId":[293,294],"inputs.fieldId":[3455]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"766":{"hasMany":{"foreigns.relatedFieldId":[214]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"767":{"hasMany":{"foreigns.fieldId":[214],"manytomanyrelationships.localModelKeyId":[74],"manytomanyrelationships.modelKeyId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"768":{"hasMany":{"foreigns.fieldId":[215],"manytomanyrelationships.modelKeyId":[74],"manytomanyrelationships.localModelKeyId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"769":{"hasMany":{"inputs.fieldId":[3449]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"770":{"hasMany":{"inputs.fieldId":[3450]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"771":{"hasMany":{"inputs.fieldId":[3392]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"772":{"hasMany":{"inputs.fieldId":[3393]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"773":{"hasMany":{"inputs.fieldId":[3330]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"774":{"hasMany":{"foreigns.fieldId":[216],"manytomanyrelationships.localModelKeyId":[76],"manytomanyrelationships.modelKeyId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"775":{"hasMany":{"foreigns.fieldId":[217],"manytomanyrelationships.modelKeyId":[76],"manytomanyrelationships.localModelKeyId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"776":{"hasMany":{"inputs.fieldId":[3331]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"777":{"hasMany":{"inputs.fieldId":[3438]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"778":{"hasMany":{"inputs.fieldId":[3439]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"779":{"hasMany":{"inputs.fieldId":[3444]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"780":{"hasMany":{"inputs.fieldId":[3445]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"781":{"hasMany":{"inputs.fieldId":[3446]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"782":{"hasMany":{"inputs.fieldId":[3443]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"783":{"hasMany":{"inputs.fieldId":[3441]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"784":{"hasMany":{"inputs.fieldId":[3394]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"785":{"hasMany":{"inputs.fieldId":[3332]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"786":{"hasMany":{"inputs.fieldId":[3431]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"787":{"hasMany":{"inputs.fieldId":[3432]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"788":{"hasMany":{"inputs.fieldId":[3433]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"789":{"hasMany":{"inputs.fieldId":[3451]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"790":{"hasMany":{"inputs.fieldId":[3464]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"791":{"hasMany":{"inputs.fieldId":[3466]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"792":{"hasMany":{"inputs.fieldId":[3471]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"793":{"hasMany":{"inputs.fieldId":[3460]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"794":{"hasMany":{"inputs.fieldId":[3462]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"795":{"hasMany":{"inputs.fieldId":[3456]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"796":{"hasMany":{"inputs.fieldId":[3465]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"798":{"hasMany":{"inputs.fieldId":[3469]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"799":{"hasMany":{"inputs.fieldId":[3470]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"800":{"hasMany":{"inputs.fieldId":[3467]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"801":{"hasMany":{"inputs.fieldId":[3468]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"802":{"hasMany":{"foreigns.relatedFieldId":[218,294,299],"basicrelationships.parentKeyId":[392,391]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"803":{"hasMany":{"foreigns.fieldId":[218],"manytomanyrelationships.localModelKeyId":[78],"manytomanyrelationships.modelKeyId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"804":{"hasMany":{"foreigns.fieldId":[219],"manytomanyrelationships.modelKeyId":[78],"manytomanyrelationships.localModelKeyId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"806":{"hasMany":{"inputs.fieldId":[3490]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"807":{"hasMany":{"inputs.fieldId":[3486]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"808":{"hasMany":{"inputs.fieldId":[3487]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"809":{"hasMany":{"inputs.fieldId":[3488]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"811":{"hasMany":{"inputs.fieldId":[3472]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"826":{"hasMany":{"inputs.fieldId":[3373]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"827":{"hasMany":{"inputs.fieldId":[3374]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"828":{"hasMany":{"inputs.fieldId":[3375]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"829":{"hasMany":{"inputs.fieldId":[3491]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"839":{"hasMany":{"inputs.fieldId":[3452]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"840":{"hasMany":{"foreigns.relatedFieldId":[225,227],"basicrelationships.parentKeyId":[301,302]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"841":{"hasMany":{"foreigns.relatedFieldId":[224,307],"basicrelationships.parentKeyId":[413,299,414,300]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"842":{"hasMany":{"foreigns.relatedFieldId":[223,308],"basicrelationships.parentKeyId":[415,297,416,298]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"843":{"hasMany":{"foreigns.relatedFieldId":[226]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"844":{"hasMany":{"foreigns.relatedFieldId":[229],"basicrelationships.parentKeyId":[306,305]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"845":{"hasMany":{"foreigns.relatedFieldId":[228],"basicrelationships.parentKeyId":[304,303]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"846":{"hasMany":{"inputs.fieldId":[3496]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"847":{"hasMany":{"inputs.fieldId":[3497]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"848":{"hasMany":{"foreigns.fieldId":[223],"basicrelationships.foreignKeyId":[297,298],"inputs.fieldId":[3507]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"849":{"hasMany":{"foreigns.fieldId":[224],"basicrelationships.foreignKeyId":[299,300],"inputs.fieldId":[3508]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"850":{"hasMany":{"foreigns.fieldId":[225],"manytomanyrelationships.localModelKeyId":[82],"manytomanyrelationships.modelKeyId":[81]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"851":{"hasMany":{"foreigns.fieldId":[226],"manytomanyrelationships.modelKeyId":[82],"manytomanyrelationships.localModelKeyId":[81]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"852":{"hasMany":{"inputs.fieldId":[3387]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"853":{"hasMany":{"inputs.fieldId":[3388]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"854":{"hasMany":{"inputs.fieldId":[3376]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"855":{"hasMany":{"inputs.fieldId":[3377]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"856":{"hasMany":{"inputs.fieldId":[3501]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"857":{"hasMany":{"inputs.fieldId":[3389]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"858":{"hasMany":{"inputs.fieldId":[3378]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"859":{"hasMany":{"inputs.fieldId":[3381]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"860":{"hasMany":{"inputs.fieldId":[3382]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"861":{"hasMany":{"inputs.fieldId":[3383]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"863":{"hasMany":{"inputs.fieldId":[3384]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"864":{"hasMany":{"inputs.fieldId":[3385]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"865":{"hasMany":{"inputs.fieldId":[3386]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"866":{"hasMany":{"inputs.fieldId":[3509]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"867":{"hasMany":{"inputs.fieldId":[3510]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"868":{"hasMany":{"foreigns.fieldId":[227],"basicrelationships.foreignKeyId":[301,302],"inputs.fieldId":[3475]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"869":{"hasMany":{"foreigns.fieldId":[228],"basicrelationships.foreignKeyId":[304,303],"inputs.fieldId":[3476]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"870":{"hasMany":{"foreigns.fieldId":[229],"basicrelationships.foreignKeyId":[306,305],"inputs.fieldId":[3477]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1064":{"hasMany":{"inputs.fieldId":[2908]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1065":{"hasMany":{"inputs.fieldId":[2907]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1066":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1067":{"hasMany":{"foreigns.fieldId":[267],"basicrelationships.foreignKeyId":[351,352],"inputs.fieldId":[2906]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1068":{"hasMany":{"foreigns.relatedFieldId":[268,270,278,283,289],"basicrelationships.parentKeyId":[355,356,368,367,380,379]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1072":{"hasMany":{"inputs.fieldId":[2940]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1073":{"hasMany":{"inputs.fieldId":[2935]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1074":{"hasMany":{"inputs.fieldId":[2936]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1075":{"hasMany":{"inputs.fieldId":[2937]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1076":{"hasMany":{"inputs.fieldId":[2938]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1077":{"hasMany":{"inputs.fieldId":[2939]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1078":{"hasMany":{"inputs.fieldId":[2944]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1079":{"hasMany":{"inputs.fieldId":[2945]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1080":{"hasMany":{"inputs.fieldId":[2946]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1081":{"hasMany":{"inputs.fieldId":[2950]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1082":{"hasMany":{"inputs.fieldId":[2951]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1083":{"hasMany":{"inputs.fieldId":[2952]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1084":{"hasMany":{"inputs.fieldId":[2954]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1085":{"hasMany":{"inputs.fieldId":[2941]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1086":{"hasMany":{"inputs.fieldId":[2942]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1087":{"hasMany":{"inputs.fieldId":[2943]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1088":{"hasMany":{"inputs.fieldId":[2947]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1089":{"hasMany":{"inputs.fieldId":[2948]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1090":{"hasMany":{"inputs.fieldId":[2949]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1091":{"hasMany":{"inputs.fieldId":[2953]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1092":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1093":{"hasMany":{"inputs.fieldId":[2910]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1094":{"hasMany":{"inputs.fieldId":[2911]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1095":{"hasMany":{"inputs.fieldId":[2912]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1096":{"hasMany":{"inputs.fieldId":[2913]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1098":{"hasMany":{"inputs.fieldId":[2917]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1099":{"hasMany":{"inputs.fieldId":[2915]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1100":{"hasMany":{"inputs.fieldId":[2916]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1102":{"hasMany":{"inputs.fieldId":[2919]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1103":{"hasMany":{"inputs.fieldId":[2920]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1104":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1106":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1107":{"hasMany":{"inputs.fieldId":[2922]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1108":{"hasMany":{"inputs.fieldId":[2923]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1109":{"hasMany":{"inputs.fieldId":[2924]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1110":{"hasMany":{"inputs.fieldId":[2925]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1111":{"hasMany":{"inputs.fieldId":[2926]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1112":{"hasMany":{"inputs.fieldId":[2927]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1113":{"hasMany":{"inputs.fieldId":[2928]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1114":{"hasMany":{"inputs.fieldId":[2929]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1115":{"hasMany":{"inputs.fieldId":[2930]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1116":{"hasMany":{"inputs.fieldId":[2931]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1117":{"hasMany":{"inputs.fieldId":[2932]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1118":{"hasMany":{"inputs.fieldId":[2933]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1120":{"hasMany":{"foreigns.relatedFieldId":[275]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1121":{"hasMany":{"foreigns.fieldId":[275],"manytomanyrelationships.localModelKeyId":[100],"manytomanyrelationships.modelKeyId":[99]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1122":{"hasMany":{"foreigns.fieldId":[268],"manytomanyrelationships.modelKeyId":[100],"manytomanyrelationships.localModelKeyId":[99]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1123":{"hasMany":{"foreigns.fieldId":[276],"manytomanyrelationships.modelKeyId":[102],"manytomanyrelationships.localModelKeyId":[101]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1124":{"hasMany":{"foreigns.fieldId":[],"manytomanyrelationships.localModelKeyId":[102],"manytomanyrelationships.modelKeyId":[101]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1125":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1127":{"hasMany":{"inputs.fieldId":[2885]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1128":{"hasMany":{"inputs.fieldId":[2886]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1129":{"hasMany":{"inputs.fieldId":[2887]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1130":{"hasMany":{"inputs.fieldId":[2888]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1131":{"hasMany":{"inputs.fieldId":[2889]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1132":{"hasMany":{"inputs.fieldId":[2895]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1133":{"hasMany":{"inputs.fieldId":[2896]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1134":{"hasMany":{"inputs.fieldId":[2897]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1135":{"hasMany":{"inputs.fieldId":[2898]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1136":{"hasMany":{"inputs.fieldId":[2899]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1137":{"hasMany":{"inputs.fieldId":[2900]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1138":{"hasMany":{"inputs.fieldId":[2902]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1139":{"hasMany":{"inputs.fieldId":[2903]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1140":{"hasMany":{"inputs.fieldId":[2905]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1141":{"hasMany":{"inputs.fieldId":[2890]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1142":{"hasMany":{"inputs.fieldId":[2891]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1143":{"hasMany":{"inputs.fieldId":[2892]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1144":{"hasMany":{"inputs.fieldId":[2893]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1145":{"hasMany":{"inputs.fieldId":[2894]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1146":{"hasMany":{"inputs.fieldId":[2901]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1147":{"hasMany":{"inputs.fieldId":[2904]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1150":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1151":{"hasMany":{"foreigns.fieldId":[277],"basicrelationships.foreignKeyId":[363,364],"inputs.fieldId":[2874]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1152":{"hasMany":{"foreigns.fieldId":[270],"basicrelationships.foreignKeyId":[355,356],"inputs.fieldId":[2875]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1153":{"hasMany":{"inputs.fieldId":[2876]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1154":{"hasMany":{"inputs.fieldId":[2877]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1155":{"hasMany":{"inputs.fieldId":[2878]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1156":{"hasMany":{"inputs.fieldId":[2879]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1157":{"hasMany":{"inputs.fieldId":[2880]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1159":{"hasMany":{"inputs.fieldId":[2881]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1160":{"hasMany":{"inputs.fieldId":[2882]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1162":{"hasMany":{"foreigns.relatedFieldId":[279,281]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1163":{"hasMany":{"foreigns.fieldId":[278],"manytomanyrelationships.localModelKeyId":[104],"manytomanyrelationships.modelKeyId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1164":{"hasMany":{"foreigns.fieldId":[279],"manytomanyrelationships.modelKeyId":[104],"manytomanyrelationships.localModelKeyId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1165":{"hasMany":{"inputs.fieldId":[2870]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1166":{"hasMany":{"inputs.fieldId":[2871]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1167":{"hasMany":{"inputs.fieldId":[2872]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1168":{"hasMany":{"foreigns.relatedFieldId":[282],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1171":{"hasMany":{"foreigns.fieldId":[281],"manytomanyrelationships.localModelKeyId":[106],"manytomanyrelationships.modelKeyId":[105]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1172":{"hasMany":{"foreigns.fieldId":[282],"manytomanyrelationships.modelKeyId":[106],"manytomanyrelationships.localModelKeyId":[105]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1173":{"hasMany":{"inputs.fieldId":[2866]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1174":{"hasMany":{"inputs.fieldId":[2867]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1176":{"hasMany":{"inputs.fieldId":[2868]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1177":{"hasMany":{"inputs.fieldId":[2869]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1178":{"hasMany":{"inputs.fieldId":[2873]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1179":{"hasMany":{"foreigns.fieldId":[283],"basicrelationships.foreignKeyId":[368,367],"inputs.fieldId":[2884]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1182":{"hasMany":{"foreigns.relatedFieldId":[290,291],"basicrelationships.parentKeyId":[382,381,384,383],"inputs.fieldId":[2914]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1185":{"hasMany":{"foreigns.fieldId":[289],"basicrelationships.foreignKeyId":[380,379],"inputs.fieldId":[2921]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1186":{"hasMany":{"inputs.fieldId":[2934]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1187":{"hasMany":{"basicrelationships.parentKeyId":[351,352,363,364],"foreigns.relatedFieldId":[267,276,277],"inputs.fieldId":[2883]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1191":{"hasMany":{"foreigns.fieldId":[290],"basicrelationships.foreignKeyId":[382,381],"inputs.fieldId":[2918]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1192":{"hasMany":{"foreigns.fieldId":[291],"basicrelationships.foreignKeyId":[384,383],"inputs.fieldId":[2909]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1193":{"hasMany":{"inputs.fieldId":[3453]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1194":{"hasMany":{"foreigns.relatedFieldId":[310],"basicrelationships.parentKeyId":[420,419]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1196":{"hasMany":{"inputs.fieldId":[3489]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1197":{"hasMany":{"inputs.fieldId":[3395]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1198":{"hasMany":{"inputs.fieldId":[3396]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1199":{"hasMany":{"inputs.fieldId":[3397]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1201":{"hasMany":{"foreigns.fieldId":[292],"basicrelationships.foreignKeyId":[388,387],"inputs.fieldId":[3400]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1202":{"hasMany":{"foreigns.fieldId":[293],"basicrelationships.foreignKeyId":[390,389],"inputs.fieldId":[3399]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1204":{"hasMany":{"foreigns.fieldId":[294],"basicrelationships.foreignKeyId":[392,391],"inputs.fieldId":[3401]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1210":{"hasMany":{"inputs.fieldId":[3398]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1211":{"hasMany":{"foreigns.fieldId":[298],"manytomanyrelationships.localModelKeyId":[110],"manytomanyrelationships.modelKeyId":[109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1212":{"hasMany":{"foreigns.fieldId":[299],"manytomanyrelationships.modelKeyId":[110],"manytomanyrelationships.localModelKeyId":[109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1214":{"hasMany":{"inputs.fieldId":[3463]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1215":{"hasMany":{"inputs.fieldId":[3461]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1217":{"hasMany":{"foreigns.relatedFieldId":[301],"basicrelationships.parentKeyId":[397,398]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1219":{"hasMany":{"foreigns.fieldId":[301],"basicrelationships.foreignKeyId":[397,398],"inputs.fieldId":[3402]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1220":{"hasMany":{"inputs.fieldId":[3493]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1221":{"hasMany":{"inputs.fieldId":[3494]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1222":{"hasMany":{"inputs.fieldId":[3495]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1223":{"hasMany":{"inputs.fieldId":[3458]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1224":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1232":{"hasMany":{"foreigns.fieldId":[304],"basicrelationships.foreignKeyId":[406,405],"inputs.fieldId":[3482]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1233":{"hasMany":{"foreigns.relatedFieldId":[305],"basicrelationships.parentKeyId":[410,409]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1234":{"hasMany":{"foreigns.fieldId":[305],"basicrelationships.foreignKeyId":[410,409],"inputs.fieldId":[3484]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1235":{"hasMany":{"inputs.fieldId":[3478]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1236":{"hasMany":{"inputs.fieldId":[3479]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1237":{"hasMany":{"inputs.fieldId":[3370]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1238":{"hasMany":{"inputs.fieldId":[3371]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1239":{"hasMany":{"inputs.fieldId":[3372]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1240":{"hasMany":{"inputs.fieldId":[3480]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1241":{"hasMany":{"inputs.fieldId":[3481]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1242":{"hasMany":{"foreigns.fieldId":[306],"basicrelationships.foreignKeyId":[412,411],"inputs.fieldId":[3492]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1251":{"hasMany":{"inputs.fieldId":[3390]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1253":{"hasMany":{"inputs.fieldId":[3379]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1254":{"hasMany":{"inputs.fieldId":[3380]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1255":{"hasMany":{"inputs.fieldId":[3391]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1256":{"hasMany":{"inputs.fieldId":[3473]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1257":{"hasMany":{"inputs.fieldId":[3474]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1259":{"hasMany":{"foreigns.fieldId":[307],"basicrelationships.foreignKeyId":[413,414],"inputs.fieldId":[3447]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1260":{"hasMany":{"foreigns.fieldId":[308],"basicrelationships.foreignKeyId":[415,416],"inputs.fieldId":[3448]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1261":{"hasMany":{"foreigns.relatedFieldId":[309],"basicrelationships.parentKeyId":[418,417]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1262":{"hasMany":{"foreigns.fieldId":[309],"basicrelationships.foreignKeyId":[418,417],"inputs.fieldId":[3506]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1263":{"hasMany":{"inputs.fieldId":[3422]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1264":{"hasMany":{"inputs.fieldId":[3423]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1265":{"hasMany":{"inputs.fieldId":[3505]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1266":{"hasMany":{"inputs.fieldId":[3498]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1267":{"hasMany":{"inputs.fieldId":[3500]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1268":{"hasMany":{"inputs.fieldId":[3502]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1269":{"hasMany":{"inputs.fieldId":[3503]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1270":{"hasMany":{"inputs.fieldId":[3504]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1272":{"hasMany":{"inputs.fieldId":[3499]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1274":{"hasMany":{"foreigns.fieldId":[310],"basicrelationships.foreignKeyId":[420,419],"inputs.fieldId":[3485]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1275":{"hasMany":{"inputs.fieldId":[3511]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1276":{"hasMany":{"inputs.fieldId":[3434]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1277":{"hasMany":{"inputs.fieldId":[3459]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1278":{"hasMany":{"inputs.fieldId":[3457]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1279":{"hasMany":{"inputs.fieldId":[3440]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1280":{"hasMany":{"inputs.fieldId":[3442]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1281":{"hasMany":{"basicrelationships.foreignKeyId":[408,407],"inputs.fieldId":[3483]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1282":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1283":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1284":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1285":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1286":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1287":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1288":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1289":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1290":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1291":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1292":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1293":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1294":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1295":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1296":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1297":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1298":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1299":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1300":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1301":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1302":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1303":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1304":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1305":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1306":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1307":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1308":{"hasMany":{"foreigns.relatedFieldId":[311],"basicrelationships.parentKeyId":[421,422]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1309":{"hasMany":{"inputs.fieldId":[3513]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1310":{"hasMany":{"inputs.fieldId":[3514]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1311":{"hasMany":{"foreigns.relatedFieldId":[312]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1312":{"hasMany":{"inputs.fieldId":[3515]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1313":{"hasMany":{"inputs.fieldId":[3516]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1314":{"hasMany":{"inputs.fieldId":[3517]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1315":{"hasMany":{"foreigns.relatedFieldId":[313,314],"basicrelationships.parentKeyId":[423,425,424,426]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1316":{"hasMany":{"inputs.fieldId":[3520]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1317":{"hasMany":{"inputs.fieldId":[3521]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1318":{"hasMany":{"inputs.fieldId":[3522]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1319":{"hasMany":{"foreigns.relatedFieldId":[315,316],"basicrelationships.parentKeyId":[427,429,430,428]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1320":{"hasMany":{"inputs.fieldId":[3525]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1321":{"hasMany":{"inputs.fieldId":[3526]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1322":{"hasMany":{"inputs.fieldId":[3527]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1323":{"hasMany":{"foreigns.fieldId":[317],"manytomanyrelationships.localModelKeyId":[112],"manytomanyrelationships.modelKeyId":[111]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1324":{"hasMany":{"foreigns.fieldId":[312],"manytomanyrelationships.modelKeyId":[112],"manytomanyrelationships.localModelKeyId":[111]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1325":{"hasMany":{"foreigns.relatedFieldId":[318]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1326":{"hasMany":{"inputs.fieldId":[3528]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1327":{"hasMany":{"inputs.fieldId":[3529]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1328":{"hasMany":{"inputs.fieldId":[3530]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1329":{"hasMany":{"foreigns.relatedFieldId":[319],"basicrelationships.parentKeyId":[431,432]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1330":{"hasMany":{"inputs.fieldId":[3532]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1331":{"hasMany":{"inputs.fieldId":[3533]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1332":{"hasMany":{"inputs.fieldId":[3534]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1333":{"hasMany":{"foreigns.relatedFieldId":[320],"basicrelationships.parentKeyId":[433,434]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1334":{"hasMany":{"inputs.fieldId":[3536]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1335":{"hasMany":{"inputs.fieldId":[3537]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1336":{"hasMany":{"inputs.fieldId":[3538]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1337":{"hasMany":{"foreigns.relatedFieldId":[321],"basicrelationships.parentKeyId":[435,436]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1338":{"hasMany":{"inputs.fieldId":[3540]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1339":{"hasMany":{"inputs.fieldId":[3541]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1340":{"hasMany":{"inputs.fieldId":[3542]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1341":{"hasMany":{"foreigns.relatedFieldId":[322],"basicrelationships.parentKeyId":[437,438]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1342":{"hasMany":{"inputs.fieldId":[3544]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1343":{"hasMany":{"inputs.fieldId":[3545]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1344":{"hasMany":{"inputs.fieldId":[3546]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1345":{"hasMany":{"foreigns.relatedFieldId":[323],"basicrelationships.parentKeyId":[439,440]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1346":{"hasMany":{"inputs.fieldId":[3548]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1347":{"hasMany":{"inputs.fieldId":[3549]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1348":{"hasMany":{"inputs.fieldId":[3550]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1349":{"hasMany":{"foreigns.fieldId":[324],"manytomanyrelationships.modelKeyId":[115],"manytomanyrelationships.localModelKeyId":[116]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1350":{"hasMany":{"foreigns.fieldId":[325],"manytomanyrelationships.localModelKeyId":[115],"manytomanyrelationships.modelKeyId":[116]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1351":{"hasMany":{"foreigns.relatedFieldId":[325]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1352":{"hasMany":{"inputs.fieldId":[3551]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1353":{"hasMany":{"inputs.fieldId":[3552]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1354":{"hasMany":{"inputs.fieldId":[3553]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1355":{"hasMany":{"foreigns.fieldId":[326],"manytomanyrelationships.modelKeyId":[117],"manytomanyrelationships.localModelKeyId":[118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1356":{"hasMany":{"foreigns.fieldId":[327],"manytomanyrelationships.localModelKeyId":[117],"manytomanyrelationships.modelKeyId":[118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1357":{"hasMany":{"foreigns.relatedFieldId":[327]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1358":{"hasMany":{"inputs.fieldId":[3554]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1359":{"hasMany":{"inputs.fieldId":[3555]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1360":{"hasMany":{"inputs.fieldId":[3556]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1361":{"hasMany":{"foreigns.fieldId":[328],"manytomanyrelationships.modelKeyId":[114],"manytomanyrelationships.localModelKeyId":[113]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1362":{"hasMany":{"foreigns.fieldId":[318],"manytomanyrelationships.localModelKeyId":[114],"manytomanyrelationships.modelKeyId":[113]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1363":{"hasMany":{"foreigns.fieldId":[329],"manytomanyrelationships.localModelKeyId":[119],"manytomanyrelationships.modelKeyId":[120]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1364":{"hasMany":{"foreigns.fieldId":[330],"manytomanyrelationships.modelKeyId":[119],"manytomanyrelationships.localModelKeyId":[120]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1365":{"hasMany":{"foreigns.relatedFieldId":[330]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1366":{"hasMany":{"foreigns.fieldId":[331],"basicrelationships.foreignKeyId":[441,442],"inputs.fieldId":[3557]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1367":{"hasMany":{"inputs.fieldId":[3558]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1368":{"hasMany":{"inputs.fieldId":[3559]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1369":{"hasMany":{"inputs.fieldId":[3560]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1370":{"hasMany":{"inputs.fieldId":[3561]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1371":{"hasMany":{"inputs.fieldId":[3562]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1372":{"hasMany":{"inputs.fieldId":[3563]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1373":{"hasMany":{"inputs.fieldId":[3564]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1374":{"hasMany":{"inputs.fieldId":[3565]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1375":{"hasMany":{"inputs.fieldId":[3566]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1376":{"hasMany":{"inputs.fieldId":[3567]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1377":{"hasMany":{"inputs.fieldId":[3568]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1378":{"hasMany":{"inputs.fieldId":[3569]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1379":{"hasMany":{"inputs.fieldId":[3570]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1380":{"hasMany":{"inputs.fieldId":[3571]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1381":{"hasMany":{"inputs.fieldId":[3572]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1382":{"hasMany":{"inputs.fieldId":[3573]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1383":{"hasMany":{"inputs.fieldId":[3574]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1384":{"hasMany":{"inputs.fieldId":[3575]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1385":{"hasMany":{"inputs.fieldId":[3576]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1386":{"hasMany":{"foreigns.fieldId":[320],"basicrelationships.foreignKeyId":[433,434],"inputs.fieldId":[3535]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1387":{"hasMany":{"inputs.fieldId":[3577]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1388":{"hasMany":{"inputs.fieldId":[3578]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1389":{"hasMany":{"inputs.fieldId":[3579]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1390":{"hasMany":{"inputs.fieldId":[3580]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1391":{"hasMany":{"inputs.fieldId":[3581]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1392":{"hasMany":{"inputs.fieldId":[3582]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1393":{"hasMany":{"inputs.fieldId":[3583]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1394":{"hasMany":{"inputs.fieldId":[3584]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1395":{"hasMany":{"inputs.fieldId":[3585]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1396":{"hasMany":{"foreigns.relatedFieldId":[332,333,334],"basicrelationships.parentKeyId":[443,444,445,447,446,448]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1397":{"hasMany":{"inputs.fieldId":[3589]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1398":{"hasMany":{"inputs.fieldId":[3590]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1399":{"hasMany":{"inputs.fieldId":[3591]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1400":{"hasMany":{"foreigns.relatedFieldId":[335],"basicrelationships.parentKeyId":[449,450]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1401":{"hasMany":{"inputs.fieldId":[3593]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1402":{"hasMany":{"inputs.fieldId":[3594]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1403":{"hasMany":{"inputs.fieldId":[3595]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1404":{"hasMany":{"foreigns.relatedFieldId":[336],"basicrelationships.parentKeyId":[451,452]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1405":{"hasMany":{"inputs.fieldId":[3597]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1406":{"hasMany":{"inputs.fieldId":[3598]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1407":{"hasMany":{"inputs.fieldId":[3599]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1408":{"hasMany":{"foreigns.fieldId":[337],"manytomanyrelationships.localModelKeyId":[121],"manytomanyrelationships.modelKeyId":[122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1409":{"hasMany":{"foreigns.fieldId":[338],"manytomanyrelationships.modelKeyId":[121],"manytomanyrelationships.localModelKeyId":[122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1410":{"hasMany":{"foreigns.relatedFieldId":[339,340,341],"basicrelationships.parentKeyId":[453,454,455,456]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1411":{"hasMany":{"inputs.fieldId":[3602]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1412":{"hasMany":{"inputs.fieldId":[3603]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1413":{"hasMany":{"inputs.fieldId":[3604]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1414":{"hasMany":{"inputs.fieldId":[3605]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1415":{"hasMany":{"inputs.fieldId":[3606]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1416":{"hasMany":{"inputs.fieldId":[3607]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1417":{"hasMany":{"inputs.fieldId":[3608]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1418":{"hasMany":{"inputs.fieldId":[3609]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1419":{"hasMany":{"inputs.fieldId":[3610]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1420":{"hasMany":{"inputs.fieldId":[3611]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1421":{"hasMany":{"inputs.fieldId":[3612]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1422":{"hasMany":{"inputs.fieldId":[3613]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1423":{"hasMany":{"inputs.fieldId":[3614]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1424":{"hasMany":{"inputs.fieldId":[3615]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1425":{"hasMany":{"inputs.fieldId":[3616]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1426":{"hasMany":{"inputs.fieldId":[3617]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1427":{"hasMany":{"inputs.fieldId":[3618]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1428":{"hasMany":{"inputs.fieldId":[3619]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1429":{"hasMany":{"inputs.fieldId":[3620]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1430":{"hasMany":{"foreigns.relatedFieldId":[342],"basicrelationships.parentKeyId":[457,458]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1431":{"hasMany":{"inputs.fieldId":[3622]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1432":{"hasMany":{"inputs.fieldId":[3623]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1433":{"hasMany":{"inputs.fieldId":[3624]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1434":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1435":{"hasMany":{"foreigns.fieldId":[343],"basicrelationships.foreignKeyId":[459,460],"inputs.fieldId":[3625]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1436":{"hasMany":{"inputs.fieldId":[3626]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1437":{"hasMany":{"inputs.fieldId":[3627]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1438":{"hasMany":{"foreigns.fieldId":[344],"basicrelationships.foreignKeyId":[461,462],"inputs.fieldId":[3628]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1439":{"hasMany":{"foreigns.fieldId":[342],"basicrelationships.foreignKeyId":[457,458],"inputs.fieldId":[3621]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1440":{"hasMany":{"foreigns.fieldId":[345],"manytomanyrelationships.localModelKeyId":[124],"manytomanyrelationships.modelKeyId":[123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1441":{"hasMany":{"foreigns.fieldId":[341],"manytomanyrelationships.modelKeyId":[124],"manytomanyrelationships.localModelKeyId":[123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1442":{"hasMany":{"foreigns.relatedFieldId":[329,346],"basicrelationships.parentKeyId":[463,464]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1443":{"hasMany":{"inputs.fieldId":[3630]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1444":{"hasMany":{"inputs.fieldId":[3631]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1445":{"hasMany":{"inputs.fieldId":[3632]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1446":{"hasMany":{"foreigns.fieldId":[346],"basicrelationships.foreignKeyId":[463,464],"inputs.fieldId":[3629]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1447":{"hasMany":{"foreigns.relatedFieldId":[345]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1448":{"hasMany":{"inputs.fieldId":[3633]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1449":{"hasMany":{"inputs.fieldId":[3634]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1450":{"hasMany":{"inputs.fieldId":[3635]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1451":{"hasMany":{"foreigns.fieldId":[347],"manytomanyrelationships.localModelKeyId":[125],"manytomanyrelationships.modelKeyId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1452":{"hasMany":{"foreigns.fieldId":[348],"manytomanyrelationships.modelKeyId":[125],"manytomanyrelationships.localModelKeyId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1453":{"hasMany":{"foreigns.relatedFieldId":[349],"basicrelationships.parentKeyId":[465,466]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1454":{"hasMany":{"inputs.fieldId":[3637]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1455":{"hasMany":{"inputs.fieldId":[3638]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1456":{"hasMany":{"inputs.fieldId":[3639]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1457":{"hasMany":{"inputs.fieldId":[3640]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1458":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1459":{"hasMany":{"inputs.fieldId":[3641]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1460":{"hasMany":{"inputs.fieldId":[3642]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1461":{"hasMany":{"inputs.fieldId":[3643]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1462":{"hasMany":{"inputs.fieldId":[3644]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1463":{"hasMany":{"foreigns.fieldId":[340],"basicrelationships.foreignKeyId":[455,456],"inputs.fieldId":[3601]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1464":{"hasMany":{"foreigns.fieldId":[350],"basicrelationships.foreignKeyId":[467,468],"inputs.fieldId":[3645]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1465":{"hasMany":{"foreigns.relatedFieldId":[351],"basicrelationships.parentKeyId":[469,470]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1466":{"hasMany":{"foreigns.fieldId":[352],"basicrelationships.foreignKeyId":[471,472],"inputs.fieldId":[3647]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1467":{"hasMany":{"foreigns.fieldId":[353],"basicrelationships.foreignKeyId":[473,474],"inputs.fieldId":[3648]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1468":{"hasMany":{"inputs.fieldId":[3649]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1469":{"hasMany":{"inputs.fieldId":[3650]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1470":{"hasMany":{"inputs.fieldId":[3651]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1471":{"hasMany":{"foreigns.fieldId":[354],"basicrelationships.foreignKeyId":[475,476],"inputs.fieldId":[3652]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1472":{"hasMany":{"foreigns.relatedFieldId":[347]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1473":{"hasMany":{"inputs.fieldId":[3653]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1474":{"hasMany":{"inputs.fieldId":[3654]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1475":{"hasMany":{"foreigns.fieldId":[355],"basicrelationships.foreignKeyId":[477,478],"inputs.fieldId":[3655]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1476":{"hasMany":{"foreigns.fieldId":[349],"basicrelationships.foreignKeyId":[465,466],"inputs.fieldId":[3636]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1477":{"hasMany":{"inputs.fieldId":[3656]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1478":{"hasMany":{"foreigns.fieldId":[356],"manytomanyrelationships.localModelKeyId":[127],"manytomanyrelationships.modelKeyId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1479":{"hasMany":{"foreigns.fieldId":[357],"manytomanyrelationships.modelKeyId":[127],"manytomanyrelationships.localModelKeyId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1480":{"hasMany":{"foreigns.relatedFieldId":[358],"basicrelationships.parentKeyId":[479,480]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1481":{"hasMany":{"inputs.fieldId":[3658]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1482":{"hasMany":{"inputs.fieldId":[3659]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1483":{"hasMany":{"inputs.fieldId":[3660]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1484":{"hasMany":{"foreigns.fieldId":[359],"basicrelationships.foreignKeyId":[481,482],"inputs.fieldId":[3661]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1485":{"hasMany":{"foreigns.relatedFieldId":[354,360,337,338],"basicrelationships.parentKeyId":[475,476,483,484]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1486":{"hasMany":{"inputs.fieldId":[3663]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1487":{"hasMany":{"inputs.fieldId":[3664]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1488":{"hasMany":{"inputs.fieldId":[3665]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1489":{"hasMany":{"foreigns.fieldId":[361],"basicrelationships.foreignKeyId":[485,486],"inputs.fieldId":[3666]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1490":{"hasMany":{"inputs.fieldId":[3667]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1491":{"hasMany":{"inputs.fieldId":[3668]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1492":{"hasMany":{"inputs.fieldId":[3669]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1493":{"hasMany":{"inputs.fieldId":[3670]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1494":{"hasMany":{"inputs.fieldId":[3671]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1495":{"hasMany":{"foreigns.fieldId":[360],"basicrelationships.foreignKeyId":[483,484],"inputs.fieldId":[3662]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1496":{"hasMany":{"foreigns.fieldId":[334],"basicrelationships.foreignKeyId":[447,448],"inputs.fieldId":[3588]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1497":{"hasMany":{"foreigns.fieldId":[333],"basicrelationships.foreignKeyId":[445,446],"inputs.fieldId":[3587]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1498":{"hasMany":{"inputs.fieldId":[3672]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1499":{"hasMany":{"inputs.fieldId":[3673]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1500":{"hasMany":{"foreigns.fieldId":[336],"basicrelationships.foreignKeyId":[451,452],"inputs.fieldId":[3596]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1501":{"hasMany":{"foreigns.fieldId":[362],"basicrelationships.foreignKeyId":[487,488],"inputs.fieldId":[3674]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1502":{"hasMany":{"inputs.fieldId":[3675]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1503":{"hasMany":{"inputs.fieldId":[3676]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1504":{"hasMany":{"inputs.fieldId":[3677]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1505":{"hasMany":{"inputs.fieldId":[3678]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1506":{"hasMany":{"inputs.fieldId":[3679]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1507":{"hasMany":{"inputs.fieldId":[3680]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1508":{"hasMany":{"inputs.fieldId":[3681]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1509":{"hasMany":{"foreigns.fieldId":[335],"basicrelationships.foreignKeyId":[449,450],"inputs.fieldId":[3592]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1510":{"hasMany":{"inputs.fieldId":[3682]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1511":{"hasMany":{"foreigns.relatedFieldId":[363,364,365],"basicrelationships.parentKeyId":[489,490,491,492,493,494]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1512":{"hasMany":{"inputs.fieldId":[3686]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1513":{"hasMany":{"inputs.fieldId":[3687]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1514":{"hasMany":{"inputs.fieldId":[3688]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1515":{"hasMany":{"inputs.fieldId":[3689]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1516":{"hasMany":{"inputs.fieldId":[3690]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1517":{"hasMany":{"inputs.fieldId":[3691]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1518":{"hasMany":{"inputs.fieldId":[3692]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1519":{"hasMany":{"inputs.fieldId":[3693]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1520":{"hasMany":{"inputs.fieldId":[3694]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1521":{"hasMany":{"inputs.fieldId":[3695]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1522":{"hasMany":{"inputs.fieldId":[3696]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1523":{"hasMany":{"inputs.fieldId":[3697]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1524":{"hasMany":{"inputs.fieldId":[3698]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1525":{"hasMany":{"inputs.fieldId":[3699]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1526":{"hasMany":{"foreigns.relatedFieldId":[366],"basicrelationships.parentKeyId":[495,496]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1527":{"hasMany":{"inputs.fieldId":[3701]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1528":{"hasMany":{"inputs.fieldId":[3702]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1529":{"hasMany":{"inputs.fieldId":[3703]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1530":{"hasMany":{"foreigns.relatedFieldId":[350],"basicrelationships.parentKeyId":[467,468]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1531":{"hasMany":{"inputs.fieldId":[3704]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1532":{"hasMany":{"inputs.fieldId":[3705]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1533":{"hasMany":{"inputs.fieldId":[3706]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1534":{"hasMany":{"inputs.fieldId":[3707]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1535":{"hasMany":{"inputs.fieldId":[3708]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1536":{"hasMany":{"foreigns.fieldId":[367],"basicrelationships.foreignKeyId":[497,498],"inputs.fieldId":[3709]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1537":{"hasMany":{"foreigns.fieldId":[339],"basicrelationships.foreignKeyId":[453,454],"inputs.fieldId":[3600]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1538":{"hasMany":{"foreigns.relatedFieldId":[368],"basicrelationships.parentKeyId":[499,500]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1539":{"hasMany":{"inputs.fieldId":[3711]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1540":{"hasMany":{"inputs.fieldId":[3712]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1541":{"hasMany":{"inputs.fieldId":[3713]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1542":{"hasMany":{"foreigns.relatedFieldId":[369],"basicrelationships.parentKeyId":[501,502]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1543":{"hasMany":{"inputs.fieldId":[3715]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1544":{"hasMany":{"inputs.fieldId":[3716]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1545":{"hasMany":{"inputs.fieldId":[3717]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1546":{"hasMany":{"foreigns.relatedFieldId":[328,352,324,326,343,355,317,331,367],"basicrelationships.parentKeyId":[471,472,459,460,477,478,441,442,497,498]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1547":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1548":{"hasMany":{"foreigns.fieldId":[364],"basicrelationships.foreignKeyId":[491,492],"inputs.fieldId":[3684]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1549":{"hasMany":{"foreigns.fieldId":[332],"basicrelationships.foreignKeyId":[443,444],"inputs.fieldId":[3586]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1550":{"hasMany":{"foreigns.fieldId":[311],"basicrelationships.foreignKeyId":[421,422],"inputs.fieldId":[3512]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1551":{"hasMany":{"inputs.fieldId":[3718]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1552":{"hasMany":{"inputs.fieldId":[3719]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1553":{"hasMany":{"inputs.fieldId":[3720]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1554":{"hasMany":{"foreigns.fieldId":[370],"basicrelationships.foreignKeyId":[503,504],"inputs.fieldId":[3721]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1555":{"hasMany":{"inputs.fieldId":[3722]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1556":{"hasMany":{"inputs.fieldId":[3723]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1557":{"hasMany":{"inputs.fieldId":[3724]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1558":{"hasMany":{"inputs.fieldId":[3725]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1559":{"hasMany":{"inputs.fieldId":[3726]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1560":{"hasMany":{"inputs.fieldId":[3727]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1561":{"hasMany":{"inputs.fieldId":[3728]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1562":{"hasMany":{"foreigns.fieldId":[322],"basicrelationships.foreignKeyId":[437,438],"inputs.fieldId":[3543]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1563":{"hasMany":{"foreigns.fieldId":[368],"basicrelationships.foreignKeyId":[499,500],"inputs.fieldId":[3710]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1564":{"hasMany":{"foreigns.fieldId":[369],"basicrelationships.foreignKeyId":[501,502],"inputs.fieldId":[3714]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1565":{"hasMany":{"inputs.fieldId":[3729]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1566":{"hasMany":{"inputs.fieldId":[3730]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1567":{"hasMany":{"inputs.fieldId":[3731]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1568":{"hasMany":{"inputs.fieldId":[3732]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1569":{"hasMany":{"inputs.fieldId":[3733]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1570":{"hasMany":{"inputs.fieldId":[3734]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1571":{"hasMany":{"inputs.fieldId":[3735]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1572":{"hasMany":{"inputs.fieldId":[3736]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1573":{"hasMany":{"inputs.fieldId":[3737]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1574":{"hasMany":{"foreigns.fieldId":[321],"basicrelationships.foreignKeyId":[435,436],"inputs.fieldId":[3539]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1575":{"hasMany":{"inputs.fieldId":[3738]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1576":{"hasMany":{"foreigns.fieldId":[315],"basicrelationships.foreignKeyId":[427,428],"inputs.fieldId":[3523]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1577":{"hasMany":{"inputs.fieldId":[3739]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1578":{"hasMany":{"inputs.fieldId":[3740]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1579":{"hasMany":{"foreigns.fieldId":[316],"basicrelationships.foreignKeyId":[429,430],"inputs.fieldId":[3524]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1580":{"hasMany":{"inputs.fieldId":[3741]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1581":{"hasMany":{"inputs.fieldId":[3742]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1582":{"hasMany":{"foreigns.fieldId":[314],"basicrelationships.foreignKeyId":[425,426],"inputs.fieldId":[3519]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1583":{"hasMany":{"foreigns.fieldId":[313],"basicrelationships.foreignKeyId":[423,424],"inputs.fieldId":[3518]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1584":{"hasMany":{"inputs.fieldId":[3743]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1585":{"hasMany":{"inputs.fieldId":[3744]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1586":{"hasMany":{"foreigns.fieldId":[366],"basicrelationships.foreignKeyId":[495,496],"inputs.fieldId":[3700]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1587":{"hasMany":{"foreigns.fieldId":[319],"basicrelationships.foreignKeyId":[431,432],"inputs.fieldId":[3531]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1588":{"hasMany":{"foreigns.fieldId":[323],"basicrelationships.foreignKeyId":[439,440],"inputs.fieldId":[3547]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1589":{"hasMany":{"foreigns.fieldId":[365],"basicrelationships.foreignKeyId":[493,494],"inputs.fieldId":[3685]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1590":{"hasMany":{"inputs.fieldId":[3745]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1591":{"hasMany":{"inputs.fieldId":[3746]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1592":{"hasMany":{"inputs.fieldId":[3747]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1593":{"hasMany":{"inputs.fieldId":[3748]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1594":{"hasMany":{"inputs.fieldId":[3749]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1595":{"hasMany":{"inputs.fieldId":[3750]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1596":{"hasMany":{"inputs.fieldId":[3751]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1597":{"hasMany":{"inputs.fieldId":[3752]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1598":{"hasMany":{"inputs.fieldId":[3753]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1599":{"hasMany":{"inputs.fieldId":[3754]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1600":{"hasMany":{"foreigns.relatedFieldId":[361,362,356],"basicrelationships.parentKeyId":[485,486,487,488]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1601":{"hasMany":{"inputs.fieldId":[3755]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1602":{"hasMany":{"foreigns.fieldId":[358],"basicrelationships.foreignKeyId":[479,480],"inputs.fieldId":[3657]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1603":{"hasMany":{"foreigns.fieldId":[371],"basicrelationships.foreignKeyId":[505,506],"inputs.fieldId":[3756]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1604":{"hasMany":{"inputs.fieldId":[3757]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1605":{"hasMany":{"inputs.fieldId":[3758]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1606":{"hasMany":{"inputs.fieldId":[3759]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1607":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1608":{"hasMany":{"inputs.fieldId":[3760]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1609":{"hasMany":{"foreigns.relatedFieldId":[353,344,370,359,371,372,373,357],"basicrelationships.parentKeyId":[473,461,462,503,504,474,481,505,482,507,509,508,510,506]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1610":{"hasMany":{"inputs.fieldId":[3763]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1611":{"hasMany":{"inputs.fieldId":[3764]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1612":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1613":{"hasMany":{"inputs.fieldId":[3765]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1614":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1615":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1616":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1617":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1618":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1619":{"hasMany":{"foreigns.fieldId":[363],"basicrelationships.foreignKeyId":[489,490],"inputs.fieldId":[3683]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1620":{"hasMany":{"inputs.fieldId":[3766]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1621":{"hasMany":{"foreigns.relatedFieldId":[348]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1622":{"hasMany":{"foreigns.fieldId":[372],"basicrelationships.foreignKeyId":[507,508],"inputs.fieldId":[3761]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1623":{"hasMany":{"foreigns.fieldId":[373],"basicrelationships.foreignKeyId":[509,510],"inputs.fieldId":[3762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1624":{"hasMany":{"inputs.fieldId":[3767]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1625":{"hasMany":{"inputs.fieldId":[3768]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1626":{"hasMany":{"foreigns.fieldId":[351],"basicrelationships.foreignKeyId":[469,470],"inputs.fieldId":[3646]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1627":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1628":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1629":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1630":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1631":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1632":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1633":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1634":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1635":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1636":{"hasMany":{"foreigns.relatedFieldId":[377]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1637":{"hasMany":{"inputs.fieldId":[3782]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1638":{"hasMany":{"inputs.fieldId":[3783]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1639":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1640":{"hasMany":{"inputs.fieldId":[3784]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1641":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1642":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1643":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1644":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1645":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1646":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1647":{"hasMany":{"foreigns.relatedFieldId":[376]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1648":{"hasMany":{"inputs.fieldId":[3777]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1649":{"hasMany":{"inputs.fieldId":[3779]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1650":{"hasMany":{"inputs.fieldId":[3778]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1651":{"hasMany":{"inputs.fieldId":[3780]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1654":{"hasMany":{"inputs.fieldId":[3781]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1655":{"hasMany":{"foreigns.fieldId":[376],"manytomanyrelationships.localModelKeyId":[132],"manytomanyrelationships.modelKeyId":[131]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1656":{"hasMany":{"foreigns.fieldId":[377],"manytomanyrelationships.modelKeyId":[132],"manytomanyrelationships.localModelKeyId":[131]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1657":{"hasMany":{"foreigns.relatedFieldId":[409,442,451,455],"basicrelationships.parentKeyId":[556,555,590,589,604,603,612,611]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1658":{"hasMany":{"inputs.fieldId":[3904]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1659":{"hasMany":{"inputs.fieldId":[3905]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1660":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1661":{"hasMany":{"inputs.fieldId":[3906]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1662":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1663":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1664":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1665":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1666":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1667":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1668":{"hasMany":{"basicrelationships.parentKeyId":[537,538,566,572,574,600,565,599,573,571],"foreigns.relatedFieldId":[392,426,429,433,434,448]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1669":{"hasMany":{"foreigns.relatedFieldId":[405,430],"basicrelationships.parentKeyId":[548,547]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1670":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1672":{"hasMany":{"foreigns.relatedFieldId":[444,458],"basicrelationships.parentKeyId":[591,592,614,613]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1676":{"hasMany":{"foreigns.relatedFieldId":[379,386,378],"basicrelationships.parentKeyId":[512,511,514,513,524,523]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1677":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1678":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1679":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1680":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1681":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1682":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1683":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1684":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1685":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1686":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1687":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1688":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1689":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1690":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1692":{"hasMany":{"foreigns.fieldId":[378],"basicrelationships.foreignKeyId":[512,511]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1693":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1694":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1695":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1696":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1698":{"hasMany":{"foreigns.fieldId":[379],"basicrelationships.foreignKeyId":[514,513]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1699":{"hasMany":{"foreigns.relatedFieldId":[385],"basicrelationships.parentKeyId":[522,521]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1700":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1701":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1707":{"hasMany":{"foreigns.fieldId":[385],"basicrelationships.foreignKeyId":[522,521]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1708":{"hasMany":{"foreigns.fieldId":[386],"basicrelationships.foreignKeyId":[524,523]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1709":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1710":{"hasMany":{"foreigns.relatedFieldId":[415],"basicrelationships.parentKeyId":[558,557]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1711":{"hasMany":{"foreigns.relatedFieldId":[408,431,436,445,461],"basicrelationships.parentKeyId":[554,553,568,567,578,577,594,593,618,617]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1712":{"hasMany":{"foreigns.relatedFieldId":[459,460],"basicrelationships.parentKeyId":[616,615]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1713":{"hasMany":{"inputs.fieldId":[3878]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1714":{"hasMany":{"inputs.fieldId":[3879]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1715":{"hasMany":{"inputs.fieldId":[3880]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1720":{"hasMany":{"inputs.fieldId":[3882]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1721":{"hasMany":{"inputs.fieldId":[3877]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1722":{"hasMany":{"inputs.fieldId":[3925]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1723":{"hasMany":{"inputs.fieldId":[3926]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1724":{"hasMany":{"inputs.fieldId":[3927]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1725":{"hasMany":{"inputs.fieldId":[3928]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1726":{"hasMany":{"inputs.fieldId":[3929]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1727":{"hasMany":{"inputs.fieldId":[3930]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1728":{"hasMany":{"inputs.fieldId":[3934]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1729":{"hasMany":{"inputs.fieldId":[3835]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1730":{"hasMany":{"inputs.fieldId":[3836]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1731":{"hasMany":{"inputs.fieldId":[3837]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1732":{"hasMany":{"inputs.fieldId":[3840]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1733":{"hasMany":{"inputs.fieldId":[3841]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1735":{"hasMany":{"foreigns.relatedFieldId":[388,389,391,410,432,435,446],"basicrelationships.parentKeyId":[527,529,535,569,575,595,528,530,536,570,576,596]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1736":{"hasMany":{"foreigns.relatedFieldId":[411,413,418]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1737":{"hasMany":{"foreigns.relatedFieldId":[414]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1738":{"hasMany":{"foreigns.relatedFieldId":[419],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1740":{"hasMany":{"inputs.fieldId":[3918]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1741":{"hasMany":{"inputs.fieldId":[3919]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1743":{"hasMany":{"inputs.fieldId":[3922]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1746":{"hasMany":{"foreigns.fieldId":[388],"basicrelationships.foreignKeyId":[527,528],"inputs.fieldId":[3843]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1748":{"hasMany":{"foreigns.fieldId":[389],"basicrelationships.foreignKeyId":[529,530],"inputs.fieldId":[3885]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1749":{"hasMany":{"inputs.fieldId":[3834]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1750":{"hasMany":{"inputs.fieldId":[3875]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1752":{"hasMany":{"inputs.fieldId":[3881]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1754":{"hasMany":{"inputs.fieldId":[3883]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1755":{"hasMany":{"inputs.fieldId":[3845]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1759":{"hasMany":{"foreigns.fieldId":[391],"basicrelationships.foreignKeyId":[535,536],"inputs.fieldId":[3932]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1760":{"hasMany":{"foreigns.fieldId":[392],"basicrelationships.foreignKeyId":[537,538],"inputs.fieldId":[3933]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1774":{"hasMany":{"inputs.fieldId":[3838]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1775":{"hasMany":{"inputs.fieldId":[3839]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1780":{"hasMany":{"foreigns.fieldId":[405],"basicrelationships.foreignKeyId":[548,547],"inputs.fieldId":[3844]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1781":{"hasMany":{"inputs.fieldId":[3920]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1783":{"hasMany":{"inputs.fieldId":[3923]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1784":{"hasMany":{"inputs.fieldId":[3921]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1786":{"hasMany":{"inputs.fieldId":[3908]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1787":{"hasMany":{"inputs.fieldId":[3909]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1788":{"hasMany":{"inputs.fieldId":[3910]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1791":{"hasMany":{"foreigns.fieldId":[408],"basicrelationships.foreignKeyId":[554,553],"inputs.fieldId":[3884]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1792":{"hasMany":{"foreigns.fieldId":[409],"basicrelationships.foreignKeyId":[556,555],"inputs.fieldId":[3893]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1793":{"hasMany":{"foreigns.fieldId":[410],"manytomanyrelationships.localModelKeyId":[142],"manytomanyrelationships.modelKeyId":[141]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1794":{"hasMany":{"foreigns.fieldId":[411],"manytomanyrelationships.modelKeyId":[142],"manytomanyrelationships.localModelKeyId":[141]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1796":{"hasMany":{"foreigns.fieldId":[413],"manytomanyrelationships.localModelKeyId":[146],"manytomanyrelationships.modelKeyId":[145]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1797":{"hasMany":{"foreigns.fieldId":[414],"manytomanyrelationships.modelKeyId":[146],"manytomanyrelationships.localModelKeyId":[145]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1798":{"hasMany":{"foreigns.fieldId":[415],"basicrelationships.foreignKeyId":[558,557],"inputs.fieldId":[3886]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1800":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1802":{"hasMany":{"foreigns.fieldId":[418],"manytomanyrelationships.localModelKeyId":[148],"manytomanyrelationships.modelKeyId":[147]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1803":{"hasMany":{"foreigns.fieldId":[419],"manytomanyrelationships.modelKeyId":[148],"manytomanyrelationships.localModelKeyId":[147]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1809":{"hasMany":{"foreigns.relatedFieldId":[447],"basicrelationships.parentKeyId":[598,597]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1810":{"hasMany":{"inputs.fieldId":[3924]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1818":{"hasMany":{"foreigns.fieldId":[426],"basicrelationships.foreignKeyId":[566,565],"inputs.fieldId":[3876]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1825":{"hasMany":{"foreigns.fieldId":[429]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1826":{"hasMany":{"morphrelationships.idFieldId":[13,14,15,16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1827":{"hasMany":{"morphrelationships.typeFieldId":[13,14,15,16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1828":{"hasMany":{"foreigns.fieldId":[430]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1829":{"hasMany":{"morphrelationships.idFieldId":[17,18,19,20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1830":{"hasMany":{"morphrelationships.typeFieldId":[17,18,19,20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1831":{"hasMany":{"foreigns.fieldId":[431],"basicrelationships.foreignKeyId":[568,567]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1832":{"hasMany":{"foreigns.fieldId":[432],"basicrelationships.foreignKeyId":[569,570]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1833":{"hasMany":{"foreigns.fieldId":[433],"basicrelationships.foreignKeyId":[572,571]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1834":{"hasMany":{"foreigns.fieldId":[434],"basicrelationships.foreignKeyId":[574,573]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1835":{"hasMany":{"foreigns.fieldId":[435],"basicrelationships.foreignKeyId":[575,576]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1836":{"hasMany":{"foreigns.fieldId":[436],"basicrelationships.foreignKeyId":[578,577]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1838":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1839":{"hasMany":{"foreigns.relatedFieldId":[452],"basicrelationships.parentKeyId":[606,605]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1840":{"hasMany":{"foreigns.relatedFieldId":[438],"basicrelationships.parentKeyId":[582,581]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1841":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1842":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1843":{"hasMany":{"foreigns.fieldId":[438],"basicrelationships.foreignKeyId":[582,581]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1848":{"hasMany":{"foreigns.fieldId":[442],"basicrelationships.foreignKeyId":[590,589]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1849":{"hasMany":{"foreigns.relatedFieldId":[443]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1850":{"hasMany":{"foreigns.fieldId":[443]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1851":{"hasMany":{"morphrelationships.idFieldId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1852":{"hasMany":{"morphrelationships.typeFieldId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1853":{"hasMany":{"foreigns.relatedFieldId":[449]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1854":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1855":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1856":{"hasMany":{"foreigns.fieldId":[444],"basicrelationships.foreignKeyId":[591,592]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1857":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1858":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1859":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1860":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1861":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1862":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1863":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1864":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1865":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1866":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1867":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1868":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1869":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1871":{"hasMany":{"foreigns.fieldId":[445],"basicrelationships.foreignKeyId":[594,593]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1872":{"hasMany":{"foreigns.fieldId":[446],"basicrelationships.foreignKeyId":[595,596]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1873":{"hasMany":{"foreigns.fieldId":[447],"basicrelationships.foreignKeyId":[598,597]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1874":{"hasMany":{"foreigns.fieldId":[448],"basicrelationships.foreignKeyId":[600,599]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1875":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1877":{"hasMany":{"foreigns.relatedFieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1879":{"hasMany":{"foreigns.fieldId":[449]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1880":{"hasMany":{"morphrelationships.idFieldId":[22,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1881":{"hasMany":{"morphrelationships.typeFieldId":[22,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1882":{"hasMany":{"inputs.fieldId":[3863]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1883":{"hasMany":{"inputs.fieldId":[3864]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1884":{"hasMany":{"inputs.fieldId":[3865]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1885":{"hasMany":{"inputs.fieldId":[3866]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1886":{"hasMany":{"inputs.fieldId":[3867]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1887":{"hasMany":{"inputs.fieldId":[3868]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1888":{"hasMany":{"inputs.fieldId":[3869]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1889":{"hasMany":{"inputs.fieldId":[3870]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1890":{"hasMany":{"inputs.fieldId":[3871]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1891":{"hasMany":{"inputs.fieldId":[3872]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1892":{"hasMany":{"inputs.fieldId":[3862]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1893":{"hasMany":{"inputs.fieldId":[3861]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1894":{"hasMany":{"inputs.fieldId":[3873]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1895":{"hasMany":{"inputs.fieldId":[3874]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1897":{"hasMany":{"foreigns.fieldId":[451],"basicrelationships.foreignKeyId":[604,603]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1898":{"hasMany":{"inputs.fieldId":[3896]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1899":{"hasMany":{"inputs.fieldId":[3897]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1900":{"hasMany":{"inputs.fieldId":[3898]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1901":{"hasMany":{"inputs.fieldId":[3899]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1902":{"hasMany":{"inputs.fieldId":[3894]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1903":{"hasMany":{"inputs.fieldId":[3895]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1904":{"hasMany":{"inputs.fieldId":[3901]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1905":{"hasMany":{"inputs.fieldId":[3900]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1906":{"hasMany":{"inputs.fieldId":[3902]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1908":{"hasMany":{"inputs.fieldId":[3903]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1909":{"hasMany":{"foreigns.fieldId":[452],"basicrelationships.foreignKeyId":[606,605]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1910":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1911":{"hasMany":{"foreigns.relatedFieldId":[453],"basicrelationships.parentKeyId":[608,607]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1913":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1914":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1915":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1917":{"hasMany":{"foreigns.fieldId":[453],"basicrelationships.foreignKeyId":[608,607],"inputs.fieldId":[3907]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1918":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1920":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1921":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1922":{"hasMany":{"foreigns.fieldId":[455],"basicrelationships.foreignKeyId":[612,611]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1925":{"hasMany":{"foreigns.fieldId":[458],"basicrelationships.foreignKeyId":[614,613]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1926":{"hasMany":{"foreigns.fieldId":[459]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1927":{"hasMany":{"morphrelationships.idFieldId":[23,24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1928":{"hasMany":{"morphrelationships.typeFieldId":[23,24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1929":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1930":{"hasMany":{"inputs.fieldId":[3858]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1931":{"hasMany":{"inputs.fieldId":[3859]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1932":{"hasMany":{"inputs.fieldId":[3860]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1933":{"hasMany":{"inputs.fieldId":[3911]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1935":{"hasMany":{"foreigns.fieldId":[460],"basicrelationships.foreignKeyId":[616,615],"inputs.fieldId":[3912]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1936":{"hasMany":{"inputs.fieldId":[3914]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1938":{"hasMany":{"foreigns.fieldId":[461],"basicrelationships.foreignKeyId":[618,617],"inputs.fieldId":[3913]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1939":{"hasMany":{"inputs.fieldId":[3915]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1940":{"hasMany":{"inputs.fieldId":[3916]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1941":{"hasMany":{"inputs.fieldId":[3917]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_1711":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":306,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1711,"createdAt":"2023-11-24 08:44:59","updatedAt":"2023-12-10 22:43:02","order":0},"item_1792":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"user_id","entityId":306,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1792,"createdAt":"2023-12-09 14:19:16","updatedAt":"2023-12-10 22:43:02","order":1},"item_1902":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"salutation","entityId":306,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":1902,"createdAt":"2023-12-10 22:41:44","updatedAt":"2023-12-10 22:43:02"},"item_1903":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":306,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1903,"createdAt":"2023-12-10 22:42:16","updatedAt":"2023-12-10 22:43:02"},"item_1898":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":306,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1898,"createdAt":"2023-12-10 22:41:03","updatedAt":"2023-12-10 22:43:02"},"item_1899":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"full_name","entityId":306,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":1899,"createdAt":"2023-12-10 22:41:16","updatedAt":"2023-12-10 22:43:02"},"item_1900":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"first_name","entityId":306,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->firstName()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":1900,"createdAt":"2023-12-10 22:41:27","updatedAt":"2023-12-10 22:43:02"},"item_1901":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"last_name","entityId":306,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->lastName()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":1901,"createdAt":"2023-12-10 22:41:37","updatedAt":"2023-12-10 22:43:02"},"item_1905":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"mail_address","entityId":306,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":1905,"createdAt":"2023-12-10 22:42:38","updatedAt":"2023-12-10 22:43:02"},"item_1904":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"website","entityId":306,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":1904,"createdAt":"2023-12-10 22:42:32","updatedAt":"2023-12-10 22:43:02"},"item_1906":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"address","entityId":306,"type":"text","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":1906,"createdAt":"2023-12-10 22:43:05","updatedAt":"2023-12-10 22:43:36"},"item_1908":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"social","entityId":306,"type":"json","pk":false,"fk":false,"params":{"options":null},"faker":"[]","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":11,"id":1908,"createdAt":"2023-12-10 22:44:37","updatedAt":"2023-12-10 22:45:08"},"item_1929":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":346,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1929,"createdAt":"2023-12-11 09:47:12","updatedAt":"2023-12-11 09:47:12","order":0},"item_1918":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":343,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1918,"createdAt":"2023-12-10 23:03:53","updatedAt":"2023-12-10 23:06:37","order":0},"item_1921":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"token","entityId":343,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":1921,"createdAt":"2023-12-10 23:06:29","updatedAt":"2023-12-10 23:06:37"},"item_1922":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"user_id","entityId":343,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1922,"createdAt":"2023-12-10 23:07:18","updatedAt":"2023-12-10 23:07:18","order":2},"item_1842":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":335,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1842,"createdAt":"2023-12-10 01:19:22","updatedAt":"2023-12-10 01:19:22","order":0},"item_1843":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"customer_id","entityId":335,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1843,"createdAt":"2023-12-10 01:20:03","updatedAt":"2023-12-10 01:20:03","order":1},"item_1825":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"category_id","entityId":329,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1825,"createdAt":"2023-12-10 00:38:07","updatedAt":"2023-12-10 00:39:38","order":0},"item_1826":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"categoryable_id","entityId":329,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1826,"createdAt":"2023-12-10 00:38:07","updatedAt":"2023-12-10 00:38:07","order":1},"item_1827":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"categoryable_type","entityId":329,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1827,"createdAt":"2023-12-10 00:38:07","updatedAt":"2023-12-10 00:38:07","order":2},"item_1668":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":292,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1668,"createdAt":"2023-09-10 01:16:18","updatedAt":"2023-12-09 23:41:39","order":0},"item_1810":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"uid","entityId":292,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":1810,"createdAt":"2023-12-09 23:41:20","updatedAt":"2023-12-09 23:41:39"},"item_1722":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":292,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":1722,"createdAt":"2023-12-08 00:27:17","updatedAt":"2023-12-09 23:41:39"},"item_1723":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":292,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1723,"createdAt":"2023-12-08 00:27:25","updatedAt":"2023-12-09 23:41:39"},"item_1724":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content","entityId":292,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1724,"createdAt":"2023-12-08 00:27:37","updatedAt":"2023-12-09 23:41:39"},"item_1725":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"data","entityId":292,"type":"json","pk":false,"fk":false,"params":{},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":1725,"createdAt":"2023-12-08 00:27:59","updatedAt":"2023-12-09 23:41:39"},"item_1726":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"image","entityId":292,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":1726,"createdAt":"2023-12-08 00:28:07","updatedAt":"2023-12-09 23:41:39"},"item_1727":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"thumbnail","entityId":292,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":1727,"createdAt":"2023-12-08 00:28:19","updatedAt":"2023-12-09 23:41:39"},"item_1728":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"model","entityId":292,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":1728,"createdAt":"2023-12-08 00:29:06","updatedAt":"2023-12-09 23:41:39"},"item_1759":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":292,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1759,"createdAt":"2023-12-08 14:20:30","updatedAt":"2023-12-11 16:52:59","order":9,"suggestedName":"language_id"},"item_1760":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"translation_id","entityId":292,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1760,"createdAt":"2023-12-08 14:22:20","updatedAt":"2023-12-09 23:41:39","order":10},"item_1712":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":307,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1712,"createdAt":"2023-11-26 19:40:26","updatedAt":"2023-12-11 10:43:46","order":0},"item_1786":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":307,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":1786,"createdAt":"2023-12-09 14:08:38","updatedAt":"2023-12-11 10:43:46"},"item_1787":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":307,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":1787,"createdAt":"2023-12-09 14:08:42","updatedAt":"2023-12-11 10:43:46"},"item_1788":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content","entityId":307,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1788,"createdAt":"2023-12-09 14:08:45","updatedAt":"2023-12-11 10:43:46"},"item_1933":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"translations","entityId":307,"type":"json","pk":false,"fk":false,"params":{"options":null},"faker":"[]","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1933,"createdAt":"2023-12-11 10:29:09","updatedAt":"2023-12-11 10:43:46"},"item_1935":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"parent_id","entityId":307,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1935,"createdAt":"2023-12-11 10:42:52","updatedAt":"2023-12-11 10:43:46","order":5},"item_1938":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"author_id","entityId":307,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1938,"createdAt":"2023-12-11 10:43:42","updatedAt":"2023-12-11 10:43:51","order":6},"item_1936":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_from_author","entityId":307,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":1936,"createdAt":"2023-12-11 10:43:11","updatedAt":"2023-12-11 10:43:46"},"item_1939":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":307,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":1939,"createdAt":"2023-12-11 10:44:03","updatedAt":"2023-12-11 10:44:08"},"item_1940":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email","entityId":307,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->email()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":1940,"createdAt":"2023-12-11 10:44:08","updatedAt":"2023-12-11 10:44:13"},"item_1941":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"avatar","entityId":307,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":1941,"createdAt":"2023-12-11 10:44:13","updatedAt":"2023-12-11 10:44:17"},"item_1926":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"comment_id","entityId":345,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1926,"createdAt":"2023-12-11 09:14:03","updatedAt":"2023-12-11 09:20:41","order":0},"item_1927":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"commentable_id","entityId":345,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1927,"createdAt":"2023-12-11 09:14:03","updatedAt":"2023-12-11 09:14:03","order":1},"item_1928":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"commentable_type","entityId":345,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1928,"createdAt":"2023-12-11 09:14:03","updatedAt":"2023-12-11 09:14:03","order":2},"item_1839":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":332,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1839,"createdAt":"2023-12-10 01:13:42","updatedAt":"2023-12-10 01:13:42","order":0},"item_1736":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":309,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1736,"createdAt":"2023-12-08 00:55:53","updatedAt":"2023-12-08 00:55:53","order":0},"item_1909":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"continent_id","entityId":309,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1909,"createdAt":"2023-12-10 22:49:04","updatedAt":"2023-12-10 22:49:04","order":1},"item_1796":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"country_id","entityId":319,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1796,"createdAt":"2023-12-09 14:22:37","updatedAt":"2023-12-09 14:22:37","order":0},"item_1797":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"currency_id","entityId":319,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1797,"createdAt":"2023-12-09 14:22:37","updatedAt":"2023-12-09 14:22:37","order":1},"item_1793":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":317,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1793,"createdAt":"2023-12-09 14:20:24","updatedAt":"2023-12-09 14:20:24","order":0},"item_1794":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"country_id","entityId":317,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1794,"createdAt":"2023-12-09 14:20:24","updatedAt":"2023-12-09 14:20:24","order":1},"item_1802":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"country_id","entityId":321,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1802,"createdAt":"2023-12-09 23:20:58","updatedAt":"2023-12-09 23:20:58","order":0},"item_1803":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"timezone_id","entityId":321,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1803,"createdAt":"2023-12-09 23:20:58","updatedAt":"2023-12-09 23:20:58","order":1},"item_1737":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":310,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1737,"createdAt":"2023-12-08 00:56:07","updatedAt":"2023-12-08 00:56:07","order":0},"item_1840":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":333,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1840,"createdAt":"2023-12-10 01:18:45","updatedAt":"2023-12-10 01:18:45","order":0},"item_1848":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"user_id","entityId":333,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1848,"createdAt":"2023-12-10 01:22:56","updatedAt":"2023-12-10 01:23:06","order":1},"item_1809":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":324,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1809,"createdAt":"2023-12-09 23:28:27","updatedAt":"2023-12-10 22:21:12","order":0},"item_1875":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"uid","entityId":324,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"order":1,"id":1875,"createdAt":"2023-12-10 22:21:00","updatedAt":"2023-12-10 22:21:33"},"item_1874":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"main_category_id","entityId":324,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1874,"createdAt":"2023-12-10 22:20:45","updatedAt":"2023-12-11 10:16:25","order":2},"item_1863":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":324,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1863,"createdAt":"2023-12-10 22:17:13","updatedAt":"2023-12-10 22:21:12"},"item_1864":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":324,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1864,"createdAt":"2023-12-10 22:17:18","updatedAt":"2023-12-10 22:21:12"},"item_1865":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"short","entityId":324,"type":"text","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":1865,"createdAt":"2023-12-10 22:17:21","updatedAt":"2023-12-10 22:21:12"},"item_1866":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content","entityId":324,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":1866,"createdAt":"2023-12-10 22:17:47","updatedAt":"2023-12-10 22:21:12"},"item_1867":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"data","entityId":324,"type":"json","pk":false,"fk":false,"params":{},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":1867,"createdAt":"2023-12-10 22:17:52","updatedAt":"2023-12-10 22:21:12"},"item_1868":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"image","entityId":324,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":1868,"createdAt":"2023-12-10 22:17:57","updatedAt":"2023-12-10 22:21:12"},"item_1869":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"thumbnail","entityId":324,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":1869,"createdAt":"2023-12-10 22:18:10","updatedAt":"2023-12-10 22:21:12"},"item_1871":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"author_id","entityId":324,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1871,"createdAt":"2023-12-10 22:18:37","updatedAt":"2023-12-10 22:21:12","order":10},"item_1872":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":324,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1872,"createdAt":"2023-12-10 22:18:50","updatedAt":"2023-12-11 16:52:59","order":11,"suggestedName":"language_id"},"item_1873":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"translation_id","entityId":324,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1873,"createdAt":"2023-12-10 22:19:14","updatedAt":"2023-12-10 22:21:12","order":12},"item_1735":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":308,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1735,"createdAt":"2023-12-08 00:54:51","updatedAt":"2023-12-09 14:07:26","order":0},"item_1740":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":308,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":1740,"createdAt":"2023-12-08 11:56:04","updatedAt":"2023-12-09 14:07:26"},"item_1741":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":308,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":1741,"createdAt":"2023-12-08 11:56:11","updatedAt":"2023-12-09 14:07:26"},"item_1781":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"isocode","entityId":308,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1781,"createdAt":"2023-12-09 14:05:31","updatedAt":"2023-12-09 14:07:26"},"item_1784":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"flag","entityId":308,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1784,"createdAt":"2023-12-09 14:06:50","updatedAt":"2023-12-09 14:07:26"},"item_1743":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"active","entityId":308,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":"0","index":false,"unique":false,"order":5,"id":1743,"createdAt":"2023-12-08 12:30:56","updatedAt":"2023-12-11 11:16:09"},"item_1783":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"published","entityId":308,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":1783,"createdAt":"2023-12-09 14:06:30","updatedAt":"2023-12-09 14:07:26"},"item_1910":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":341,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1910,"createdAt":"2023-12-10 22:58:50","updatedAt":"2023-12-10 22:58:50","order":0},"item_1672":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":296,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1672,"createdAt":"2023-09-10 01:26:22","updatedAt":"2023-12-10 22:15:14","order":0},"item_1859":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"uid","entityId":296,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"order":1,"id":1859,"createdAt":"2023-12-10 22:12:12","updatedAt":"2023-12-10 22:15:14"},"item_1833":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"main_category_id","entityId":296,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1833,"createdAt":"2023-12-10 01:00:55","updatedAt":"2023-12-11 10:16:17","order":2},"item_1854":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":296,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1854,"createdAt":"2023-12-10 22:09:49","updatedAt":"2023-12-10 22:15:14"},"item_1855":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":296,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1855,"createdAt":"2023-12-10 22:09:58","updatedAt":"2023-12-10 22:15:14"},"item_1862":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"short","entityId":296,"type":"text","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":1862,"createdAt":"2023-12-10 22:15:02","updatedAt":"2023-12-10 22:15:17"},"item_1857":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content","entityId":296,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":1857,"createdAt":"2023-12-10 22:11:28","updatedAt":"2023-12-10 22:15:14"},"item_1858":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"data","entityId":296,"type":"json","pk":false,"fk":false,"params":{},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":1858,"createdAt":"2023-12-10 22:11:34","updatedAt":"2023-12-10 22:15:14"},"item_1860":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"image","entityId":296,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":1860,"createdAt":"2023-12-10 22:13:58","updatedAt":"2023-12-10 22:15:14"},"item_1861":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"thumbnail","entityId":296,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":1861,"createdAt":"2023-12-10 22:14:04","updatedAt":"2023-12-10 22:15:14"},"item_1831":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"author_id","entityId":296,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1831,"createdAt":"2023-12-10 00:55:33","updatedAt":"2023-12-10 22:15:34","order":10},"item_1832":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":296,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1832,"createdAt":"2023-12-10 00:55:41","updatedAt":"2023-12-11 16:52:59","order":11,"suggestedName":"language_id"},"item_1856":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"translation_id","entityId":296,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1856,"createdAt":"2023-12-10 22:10:45","updatedAt":"2023-12-10 22:15:14","order":12},"item_1877":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":339,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1877,"createdAt":"2023-12-10 22:25:35","updatedAt":"2023-12-10 22:25:35","order":0},"item_1925":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"page_id","entityId":339,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1925,"createdAt":"2023-12-11 09:13:20","updatedAt":"2023-12-11 09:13:20","order":1},"item_1849":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":336,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1849,"createdAt":"2023-12-10 01:58:21","updatedAt":"2023-12-10 01:58:21","order":0},"item_1710":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":305,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1710,"createdAt":"2023-11-24 08:44:30","updatedAt":"2023-12-10 22:12:06","order":0},"item_1750":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"uid","entityId":305,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"order":1,"id":1750,"createdAt":"2023-12-08 13:31:29","updatedAt":"2023-12-10 22:12:48"},"item_1818":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"main_category_id","entityId":305,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1818,"createdAt":"2023-12-10 00:34:22","updatedAt":"2023-12-11 10:16:12","order":2},"item_1721":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":305,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1721,"createdAt":"2023-11-29 10:09:33","updatedAt":"2023-12-10 22:12:06"},"item_1713":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":305,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1713,"createdAt":"2023-11-27 12:22:27","updatedAt":"2023-12-10 22:12:06"},"item_1714":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"short","entityId":305,"type":"text","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":1714,"createdAt":"2023-11-27 12:22:39","updatedAt":"2023-12-10 22:12:06"},"item_1715":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content","entityId":305,"type":"text","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":1715,"createdAt":"2023-11-27 12:22:56","updatedAt":"2023-12-10 22:12:06"},"item_1752":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"data","entityId":305,"type":"json","pk":false,"fk":false,"params":{},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":1752,"createdAt":"2023-12-08 13:32:46","updatedAt":"2023-12-10 22:12:06"},"item_1720":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"image","entityId":305,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":1720,"createdAt":"2023-11-29 10:00:57","updatedAt":"2023-12-10 22:12:06"},"item_1754":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"thumbnail","entityId":305,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":1754,"createdAt":"2023-12-08 13:33:10","updatedAt":"2023-12-10 22:12:06"},"item_1791":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"author_id","entityId":305,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1791,"createdAt":"2023-12-09 14:12:25","updatedAt":"2023-12-10 22:12:06","order":10},"item_1748":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":305,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1748,"createdAt":"2023-12-08 13:30:14","updatedAt":"2023-12-11 16:52:59","order":11,"suggestedName":"language_id"},"item_1798":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"translation_id","entityId":305,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1798,"createdAt":"2023-12-09 23:17:27","updatedAt":"2023-12-10 22:12:06","order":12},"item_1838":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":331,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1838,"createdAt":"2023-12-10 01:05:02","updatedAt":"2023-12-10 01:05:02","order":0},"item_1800":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":320,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1800,"createdAt":"2023-12-09 23:20:07","updatedAt":"2023-12-09 23:20:07","order":0},"item_1834":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"main_category_id","entityId":320,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1834,"createdAt":"2023-12-10 01:01:29","updatedAt":"2023-12-11 10:16:30","order":1},"item_1835":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":320,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1835,"createdAt":"2023-12-10 01:02:05","updatedAt":"2023-12-11 16:52:59","order":2,"suggestedName":"language_id"},"item_1836":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"author_id","entityId":320,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1836,"createdAt":"2023-12-10 01:02:18","updatedAt":"2023-12-10 01:02:18","order":3},"item_1853":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":338,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1853,"createdAt":"2023-12-10 02:13:58","updatedAt":"2023-12-11 10:19:07","order":0},"item_1930":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"revname","entityId":338,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":1930,"createdAt":"2023-12-11 10:11:03","updatedAt":"2023-12-11 10:19:07"},"item_1931":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"revcomment","entityId":338,"type":"text","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":1931,"createdAt":"2023-12-11 10:11:43","updatedAt":"2023-12-11 10:19:07"},"item_1932":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"revretention","entityId":338,"type":"dateTime","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->dateTime()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1932,"createdAt":"2023-12-11 10:17:57","updatedAt":"2023-12-11 10:19:07"},"item_1893":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"uid","entityId":338,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"order":4,"id":1893,"createdAt":"2023-12-10 22:31:01","updatedAt":"2023-12-11 10:19:07"},"item_1892":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"main_category_id","entityId":338,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":1892,"createdAt":"2023-12-10 22:30:45","updatedAt":"2023-12-11 10:19:07"},"item_1882":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":338,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":1882,"createdAt":"2023-12-10 22:28:22","updatedAt":"2023-12-11 10:19:07"},"item_1883":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":338,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":1883,"createdAt":"2023-12-10 22:28:28","updatedAt":"2023-12-11 10:19:07"},"item_1884":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"short","entityId":338,"type":"text","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":1884,"createdAt":"2023-12-10 22:28:31","updatedAt":"2023-12-11 10:19:07"},"item_1885":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content","entityId":338,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":1885,"createdAt":"2023-12-10 22:28:39","updatedAt":"2023-12-11 10:19:07"},"item_1886":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"data","entityId":338,"type":"json","pk":false,"fk":false,"params":{},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":1886,"createdAt":"2023-12-10 22:28:45","updatedAt":"2023-12-11 10:19:07"},"item_1887":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"image","entityId":338,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":11,"id":1887,"createdAt":"2023-12-10 22:29:05","updatedAt":"2023-12-11 10:19:07"},"item_1888":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"thumbnail","entityId":338,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":12,"id":1888,"createdAt":"2023-12-10 22:29:10","updatedAt":"2023-12-11 10:19:07"},"item_1889":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"author_id","entityId":338,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":13,"id":1889,"createdAt":"2023-12-10 22:29:18","updatedAt":"2023-12-11 10:19:07"},"item_1890":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":338,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":14,"id":1890,"createdAt":"2023-12-10 22:29:40","updatedAt":"2023-12-11 10:19:07"},"item_1891":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"translation_id","entityId":338,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":15,"id":1891,"createdAt":"2023-12-10 22:29:54","updatedAt":"2023-12-11 10:19:07"},"item_1894":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"categories","entityId":338,"type":"json","pk":false,"fk":false,"params":{"options":null},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":16,"id":1894,"createdAt":"2023-12-10 22:31:21","updatedAt":"2023-12-11 10:19:07"},"item_1895":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"tags","entityId":338,"type":"json","pk":false,"fk":false,"params":{"options":null},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":17,"id":1895,"createdAt":"2023-12-10 22:31:38","updatedAt":"2023-12-11 10:19:07"},"item_1879":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"revision_id","entityId":340,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1879,"createdAt":"2023-12-10 22:27:33","updatedAt":"2023-12-11 09:57:35","order":0},"item_1880":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"revisionable_id","entityId":340,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1880,"createdAt":"2023-12-10 22:27:33","updatedAt":"2023-12-10 22:27:33","order":1},"item_1881":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"revisionable_type","entityId":340,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1881,"createdAt":"2023-12-10 22:27:33","updatedAt":"2023-12-10 22:27:33","order":2},"item_1670":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":294,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1670,"createdAt":"2023-09-10 01:16:35","updatedAt":"2023-09-10 01:16:35","order":0},"item_1841":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":334,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1841,"createdAt":"2023-12-10 01:19:04","updatedAt":"2023-12-10 01:19:04","order":0},"item_1897":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"user_id","entityId":334,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1897,"createdAt":"2023-12-10 22:38:03","updatedAt":"2023-12-10 22:38:03","order":1},"item_1850":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"platform_id","entityId":337,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1850,"createdAt":"2023-12-10 02:11:36","updatedAt":"2023-12-10 02:11:36","order":0},"item_1851":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"platformable_id","entityId":337,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1851,"createdAt":"2023-12-10 02:11:36","updatedAt":"2023-12-10 02:11:36","order":1},"item_1852":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"platformable_type","entityId":337,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1852,"createdAt":"2023-12-10 02:11:36","updatedAt":"2023-12-10 02:11:36","order":2},"item_1669":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":293,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1669,"createdAt":"2023-09-10 01:16:25","updatedAt":"2023-12-09 14:00:32","order":0},"item_1749":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"uid","entityId":293,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":1749,"createdAt":"2023-12-08 13:31:11","updatedAt":"2023-12-09 14:00:32"},"item_1729":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":293,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":1729,"createdAt":"2023-12-08 00:33:04","updatedAt":"2023-12-09 14:00:32"},"item_1730":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":293,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1730,"createdAt":"2023-12-08 00:33:09","updatedAt":"2023-12-09 14:00:32"},"item_1731":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"content","entityId":293,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->text()","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1731,"createdAt":"2023-12-08 00:33:14","updatedAt":"2023-12-09 14:00:32"},"item_1774":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"data","entityId":293,"type":"json","pk":false,"fk":false,"params":{},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":1774,"createdAt":"2023-12-09 13:59:36","updatedAt":"2023-12-09 14:00:32"},"item_1775":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"image","entityId":293,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":1775,"createdAt":"2023-12-09 13:59:48","updatedAt":"2023-12-09 14:00:32"},"item_1732":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"thumbnail","entityId":293,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":1732,"createdAt":"2023-12-08 00:33:17","updatedAt":"2023-12-09 14:00:32"},"item_1733":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"weight","entityId":293,"type":"integer","pk":false,"fk":false,"params":{},"faker":"0","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":1733,"createdAt":"2023-12-08 00:33:34","updatedAt":"2023-12-09 14:00:32"},"item_1755":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"model","entityId":293,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":1755,"createdAt":"2023-12-08 13:33:34","updatedAt":"2023-12-09 14:00:32"},"item_1746":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"language_id","entityId":293,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1746,"createdAt":"2023-12-08 13:29:50","updatedAt":"2023-12-11 16:52:59","order":10,"suggestedName":"language_id"},"item_1780":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"translation_id","entityId":293,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1780,"createdAt":"2023-12-09 14:02:37","updatedAt":"2023-12-09 23:41:07","order":11},"item_1828":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"tag_id","entityId":330,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1828,"createdAt":"2023-12-10 00:46:01","updatedAt":"2023-12-10 00:48:39","order":0},"item_1829":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"taggable_id","entityId":330,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1829,"createdAt":"2023-12-10 00:46:01","updatedAt":"2023-12-10 00:46:01","order":1},"item_1830":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"taggable_type","entityId":330,"type":"string","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":true,"unique":false,"id":1830,"createdAt":"2023-12-10 00:46:01","updatedAt":"2023-12-11 09:19:39","order":2},"item_1738":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":311,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1738,"createdAt":"2023-12-08 00:56:28","updatedAt":"2023-12-08 00:56:28","order":0},"item_1657":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":291,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1657,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":0},"item_1658":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":291,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1658,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":1},"item_1659":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email","entityId":291,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->unique->email()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":true,"id":1659,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":2},"item_1660":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email_verified_at","entityId":291,"type":"timestamp","pk":false,"fk":false,"params":{},"faker":"now()","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1660,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":3},"item_1661":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"password","entityId":291,"type":"string","pk":false,"fk":false,"params":{},"faker":"\\Hash::make('password')","nullable":false,"hidden":true,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1661,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":4},"item_1662":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"remember_token","entityId":291,"type":"string","pk":false,"fk":false,"params":{"size":100},"faker":"Str::random(10)","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1662,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":5},"item_1663":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_secret","entityId":291,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1663,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":6},"item_1664":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_recovery_codes","entityId":291,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1664,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":7},"item_1665":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"two_factor_confirmed_at","entityId":291,"type":"timestamp","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1665,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":8},"item_1666":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"current_team_id","entityId":291,"type":"foreignId","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1666,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":9},"item_1667":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"profile_photo_path","entityId":291,"type":"text","pk":false,"fk":false,"params":{},"faker":"","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1667,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-09-10 01:09:36","order":10},"item_1917":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"whitelist_id","entityId":291,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":1917,"createdAt":"2023-12-10 23:02:51","updatedAt":"2023-12-10 23:02:51","order":11},"item_1911":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":342,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1911,"createdAt":"2023-12-10 23:01:16","updatedAt":"2023-12-10 23:05:11","order":0},"item_1913":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"comment","entityId":342,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->text()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":1913,"createdAt":"2023-12-10 23:01:32","updatedAt":"2023-12-10 23:05:20"},"item_1914":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"ip-address","entityId":342,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":1914,"createdAt":"2023-12-10 23:01:35","updatedAt":"2023-12-10 23:05:11"},"item_1920":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"lookup","entityId":342,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":1920,"createdAt":"2023-12-10 23:04:45","updatedAt":"2023-12-10 23:05:30"},"item_1915":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"expires","entityId":342,"type":"dateTime","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->dateTime()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":1915,"createdAt":"2023-12-10 23:02:09","updatedAt":"2023-12-10 23:05:11"}},"foreigns":{"foreigns":{"count":248,"lastPrimaryKey":461,"index":{"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"inputs.foreignId":[83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"inputs.foreignId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"162":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"164":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"169":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"177":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"178":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"179":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"180":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"181":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"186":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"187":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"188":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"189":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"191":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"207":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"209":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"210":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"211":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"214":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"215":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"216":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"217":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"219":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"223":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"224":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"225":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"226":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"227":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"228":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"229":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"268":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"275":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"276":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"277":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"278":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"279":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"281":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"282":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"283":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"289":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"290":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"291":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"292":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"293":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"298":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"299":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"301":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"304":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"305":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"306":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"307":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"308":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"309":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"310":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"311":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"312":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"313":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"314":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"315":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"316":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"317":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"318":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"319":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"320":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"321":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"322":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"323":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"324":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"325":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"326":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"327":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"328":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"329":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"330":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"331":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"332":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"333":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"334":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"335":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"336":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"337":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"338":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"339":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"340":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"341":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"342":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"343":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"344":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"345":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"346":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"347":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"348":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"349":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"350":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"351":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"352":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"353":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"354":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"355":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"356":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"357":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"358":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"359":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"360":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"361":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"362":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"363":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"364":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"365":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"366":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"367":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"368":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"369":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"370":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"371":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"372":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"373":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"376":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"377":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"378":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"379":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"385":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"386":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"388":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"389":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"391":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"392":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"405":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"408":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"409":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"410":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"411":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"413":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"414":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"415":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"418":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"419":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"426":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"429":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"430":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"431":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"432":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"433":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"434":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"435":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"436":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"438":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"442":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"443":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"444":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"445":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"446":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"447":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"448":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"449":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"451":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"452":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"453":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"455":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"458":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"459":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"460":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"461":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_408":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1791,"relatedEntityId":306,"relatedFieldId":1711,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"post_author_id_foreign","defaultIndexName":"post_author_id_foreign","id":408,"createdAt":"2023-12-09 14:12:25","updatedAt":"2023-12-09 14:12:25"},"item_431":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1831,"relatedEntityId":306,"relatedFieldId":1711,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"page_author_id_foreign","defaultIndexName":"page_author_id_foreign","id":431,"createdAt":"2023-12-10 00:55:33","updatedAt":"2023-12-10 00:55:33"},"item_436":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1836,"relatedEntityId":306,"relatedFieldId":1711,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"product_author_id_foreign","defaultIndexName":"product_author_id_foreign","id":436,"createdAt":"2023-12-10 01:02:18","updatedAt":"2023-12-10 01:02:18"},"item_445":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1871,"relatedEntityId":306,"relatedFieldId":1711,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_author_id_foreign","defaultIndexName":"item_author_id_foreign","id":445,"createdAt":"2023-12-10 22:18:37","updatedAt":"2023-12-10 22:18:37"},"item_461":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1938,"relatedEntityId":306,"relatedFieldId":1711,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"comment_author_id_foreign","defaultIndexName":"comment_author_id_foreign","id":461,"createdAt":"2023-12-11 10:43:42","updatedAt":"2023-12-11 10:43:42"},"item_409":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1792,"relatedEntityId":291,"relatedFieldId":1657,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"author_user_id_foreign","defaultIndexName":"author_user_id_foreign","id":409,"createdAt":"2023-12-09 14:19:16","updatedAt":"2023-12-09 14:19:16"},"item_455":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1922,"relatedEntityId":291,"relatedFieldId":1657,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"bypass_token_user_id_foreign","defaultIndexName":"bypass_token_user_id_foreign","id":455,"createdAt":"2023-12-10 23:07:18","updatedAt":"2023-12-10 23:07:18"},"item_438":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1843,"relatedEntityId":333,"relatedFieldId":1840,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"cart_customer_id_foreign","defaultIndexName":"cart_customer_id_foreign","id":438,"createdAt":"2023-12-10 01:20:03","updatedAt":"2023-12-10 01:20:03"},"item_429":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1825,"relatedEntityId":292,"relatedFieldId":1668,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"categoryables_category_id_foreign","defaultIndexName":"categoryables_category_id_foreign","id":429,"createdAt":"2023-12-10 00:38:07","updatedAt":"2023-12-10 00:39:38"},"item_392":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1760,"relatedEntityId":292,"relatedFieldId":1668,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"category_category_translration_id_foreign","defaultIndexName":"category_category_translration_id_foreign","id":392,"createdAt":"2023-12-08 14:22:20","updatedAt":"2023-12-08 14:22:20"},"item_426":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1818,"relatedEntityId":292,"relatedFieldId":1668,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"post_category_id_foreign","defaultIndexName":"post_category_id_foreign","id":426,"createdAt":"2023-12-10 00:34:22","updatedAt":"2023-12-10 00:34:22"},"item_433":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1833,"relatedEntityId":292,"relatedFieldId":1668,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"page_main_category_id_foreign","defaultIndexName":"page_main_category_id_foreign","id":433,"createdAt":"2023-12-10 01:00:55","updatedAt":"2023-12-10 01:00:55"},"item_434":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1834,"relatedEntityId":292,"relatedFieldId":1668,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"product_main_category_id_foreign","defaultIndexName":"product_main_category_id_foreign","id":434,"createdAt":"2023-12-10 01:01:29","updatedAt":"2023-12-10 01:01:29"},"item_448":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1874,"relatedEntityId":292,"relatedFieldId":1668,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_main_category_id_foreign","defaultIndexName":"item_main_category_id_foreign","id":448,"createdAt":"2023-12-10 22:20:45","updatedAt":"2023-12-10 22:20:45"},"item_391":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1759,"relatedEntityId":308,"relatedFieldId":1735,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"category_language_id_foreign","defaultIndexName":"category_language_id_foreign","id":391,"createdAt":"2023-12-08 14:20:30","updatedAt":"2023-12-08 14:20:30"},"item_459":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1926,"relatedEntityId":307,"relatedFieldId":1712,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"commentables_comment_id_foreign","defaultIndexName":"commentables_comment_id_foreign","id":459,"createdAt":"2023-12-11 09:14:03","updatedAt":"2023-12-11 09:20:41"},"item_460":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1935,"relatedEntityId":307,"relatedFieldId":1712,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"comment_parent_id_foreign","defaultIndexName":"comment_parent_id_foreign","id":460,"createdAt":"2023-12-11 10:42:52","updatedAt":"2023-12-11 10:42:52"},"item_452":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1909,"relatedEntityId":332,"relatedFieldId":1839,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"country_continent_id_foreign","defaultIndexName":"country_continent_id_foreign","id":452,"createdAt":"2023-12-10 22:49:04","updatedAt":"2023-12-10 22:49:04"},"item_411":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1794,"relatedEntityId":309,"relatedFieldId":1736,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"country_language_country_id_foreign","defaultIndexName":"country_language_country_id_foreign","id":411,"createdAt":"2023-12-09 14:20:24","updatedAt":"2023-12-09 14:20:24"},"item_413":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1796,"relatedEntityId":309,"relatedFieldId":1736,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"country_currency_country_id_foreign","defaultIndexName":"country_currency_country_id_foreign","id":413,"createdAt":"2023-12-09 14:22:37","updatedAt":"2023-12-09 14:22:37"},"item_418":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1802,"relatedEntityId":309,"relatedFieldId":1736,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"country_timezone_country_id_foreign","defaultIndexName":"country_timezone_country_id_foreign","id":418,"createdAt":"2023-12-09 23:20:58","updatedAt":"2023-12-09 23:20:58"},"item_414":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1797,"relatedEntityId":310,"relatedFieldId":1737,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"country_currency_currency_id_foreign","defaultIndexName":"country_currency_currency_id_foreign","id":414,"createdAt":"2023-12-09 14:22:37","updatedAt":"2023-12-09 14:22:37"},"item_410":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1793,"relatedEntityId":308,"relatedFieldId":1735,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"country_language_language_id_foreign","defaultIndexName":"country_language_language_id_foreign","id":410,"createdAt":"2023-12-09 14:20:24","updatedAt":"2023-12-09 14:20:24"},"item_419":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1803,"relatedEntityId":311,"relatedFieldId":1738,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"country_timezone_timezone_id_foreign","defaultIndexName":"country_timezone_timezone_id_foreign","id":419,"createdAt":"2023-12-09 23:20:58","updatedAt":"2023-12-09 23:20:58"},"item_442":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1848,"relatedEntityId":291,"relatedFieldId":1657,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"customer_user_id_foreign","defaultIndexName":"customer_user_id_foreign","id":442,"createdAt":"2023-12-10 01:22:56","updatedAt":"2023-12-10 01:22:56"},"item_447":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1873,"relatedEntityId":324,"relatedFieldId":1809,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_translation_id_foreign","defaultIndexName":"item_translation_id_foreign","id":447,"createdAt":"2023-12-10 22:19:14","updatedAt":"2023-12-10 22:19:14"},"item_446":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1872,"relatedEntityId":308,"relatedFieldId":1735,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_language_id_foreign","defaultIndexName":"item_language_id_foreign","id":446,"createdAt":"2023-12-10 22:18:50","updatedAt":"2023-12-10 22:18:50"},"item_388":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1746,"relatedEntityId":308,"relatedFieldId":1735,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"tag_language_id_foreign","defaultIndexName":"tag_language_id_foreign","id":388,"createdAt":"2023-12-08 13:29:50","updatedAt":"2023-12-08 13:29:50"},"item_389":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1748,"relatedEntityId":308,"relatedFieldId":1735,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"post_language_id_foreign","defaultIndexName":"post_language_id_foreign","id":389,"createdAt":"2023-12-08 13:30:14","updatedAt":"2023-12-08 13:30:14"},"item_432":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1832,"relatedEntityId":308,"relatedFieldId":1735,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"page_language_id_foreign","defaultIndexName":"page_language_id_foreign","id":432,"createdAt":"2023-12-10 00:55:41","updatedAt":"2023-12-10 00:55:41"},"item_435":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1835,"relatedEntityId":308,"relatedFieldId":1735,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"product_language_id_foreign","defaultIndexName":"product_language_id_foreign","id":435,"createdAt":"2023-12-10 01:02:05","updatedAt":"2023-12-10 01:02:05"},"item_444":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1856,"relatedEntityId":296,"relatedFieldId":1672,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"page_page_id_foreign","defaultIndexName":"page_page_id_foreign","id":444,"createdAt":"2023-12-10 22:10:45","updatedAt":"2023-12-10 22:10:45"},"item_458":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1925,"relatedEntityId":296,"relatedFieldId":1672,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"page_template_page_id_foreign","defaultIndexName":"page_template_page_id_foreign","id":458,"createdAt":"2023-12-11 09:13:20","updatedAt":"2023-12-11 09:13:20"},"item_443":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1850,"relatedEntityId":336,"relatedFieldId":1849,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"platformables_platform_id_foreign","defaultIndexName":"platformables_platform_id_foreign","id":443,"createdAt":"2023-12-10 02:11:36","updatedAt":"2023-12-10 02:11:36"},"item_415":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1798,"relatedEntityId":305,"relatedFieldId":1710,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"post_post_id_foreign","defaultIndexName":"post_post_id_foreign","id":415,"createdAt":"2023-12-09 23:17:27","updatedAt":"2023-12-09 23:17:27"},"item_449":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1879,"relatedEntityId":338,"relatedFieldId":1853,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"revisionables_revision_id_foreign","defaultIndexName":"revisionables_revision_id_foreign","id":449,"createdAt":"2023-12-10 22:27:33","updatedAt":"2023-12-11 09:57:35"},"item_451":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1897,"relatedEntityId":291,"relatedFieldId":1657,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"subscriber_user_id_foreign","defaultIndexName":"subscriber_user_id_foreign","id":451,"createdAt":"2023-12-10 22:38:03","updatedAt":"2023-12-10 22:38:03"},"item_405":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1780,"relatedEntityId":293,"relatedFieldId":1669,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"tag_tag_id_foreign","defaultIndexName":"tag_tag_id_foreign","id":405,"createdAt":"2023-12-09 14:02:37","updatedAt":"2023-12-09 14:02:37"},"item_430":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1828,"relatedEntityId":293,"relatedFieldId":1669,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"taggables_tag_id_foreign","defaultIndexName":"taggables_tag_id_foreign","id":430,"createdAt":"2023-12-10 00:46:01","updatedAt":"2023-12-10 00:48:39"},"item_453":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":1917,"relatedEntityId":342,"relatedFieldId":1911,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"user_whitelist_id_foreign","defaultIndexName":"user_whitelist_id_foreign","id":453,"createdAt":"2023-12-10 23:02:51","updatedAt":"2023-12-10 23:02:51"}},"inputs":{"inputs":{"count":887,"lastPrimaryKey":3934,"index":{"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1725":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1726":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1727":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1728":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1729":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1730":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1731":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1732":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1733":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1734":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1735":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1736":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1737":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1738":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1739":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1740":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1741":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1742":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1743":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1744":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1745":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1746":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1747":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1748":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1749":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1750":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1751":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1752":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1753":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1754":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1755":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1756":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1757":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1758":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1759":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1760":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1761":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1762":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1763":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1764":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1765":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1766":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1767":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1768":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1769":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1770":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1771":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1774":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1775":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1776":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1777":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1778":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1779":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1780":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1781":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1782":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1783":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1784":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1785":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1786":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1787":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1791":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1792":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1793":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1794":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1795":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1796":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1810":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1811":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1812":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1813":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1814":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1815":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1816":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1817":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1818":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1819":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1820":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1821":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1822":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1823":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1824":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1825":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1826":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1827":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1828":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1829":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1830":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1831":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1832":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1833":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1834":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1835":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1836":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1837":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1838":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1839":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1840":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1841":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1842":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1843":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1844":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1845":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1846":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1847":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1848":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1849":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1850":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1851":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1852":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1853":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1854":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1855":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1856":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1857":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1858":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1859":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1860":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1861":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1862":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1863":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1864":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1865":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1866":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1867":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1868":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1869":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1870":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1871":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1872":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1873":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1874":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1875":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1876":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1877":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1878":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1879":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1880":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1881":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1882":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1883":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1884":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1885":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1886":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1887":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1888":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1889":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1890":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1891":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1892":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1893":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1894":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1895":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1896":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1897":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1898":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1899":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1900":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1901":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1902":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1903":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1904":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1905":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1906":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1907":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1908":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1909":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1910":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1911":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1912":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1913":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1914":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1915":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1916":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1917":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1918":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1919":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1920":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1921":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1922":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1923":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1924":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1925":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1926":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1927":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1928":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1929":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1930":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1931":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1932":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1933":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1934":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1935":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1936":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1937":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1938":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1939":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1940":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1941":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1942":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1943":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1944":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1945":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1946":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1947":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1948":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1949":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1950":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1951":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1952":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1953":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1954":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1955":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1956":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1957":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1958":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2008":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2009":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2010":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2011":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2012":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2013":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2014":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2015":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2016":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2017":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2018":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2019":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2020":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2021":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2022":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2023":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2024":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2025":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2026":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2027":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2028":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2029":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2030":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2031":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2032":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2033":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2034":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2035":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2036":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2037":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2038":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2039":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2040":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2041":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2042":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2043":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2044":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2045":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2046":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2047":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2048":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2866":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2867":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2868":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2869":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2870":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2871":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2872":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2873":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2874":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2875":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2876":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2877":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2878":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2879":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2880":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2881":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2882":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2883":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2884":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2885":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2886":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2887":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2888":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2889":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2890":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2891":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2892":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2893":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2894":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2895":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2896":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2897":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2898":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2899":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2900":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2901":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2902":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2903":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2904":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2905":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2906":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2907":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2908":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2909":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2910":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2911":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2912":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2913":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2914":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2915":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2916":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2917":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2918":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2919":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2920":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2921":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2922":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2923":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2924":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2925":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2926":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2927":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2928":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2929":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2930":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2931":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2932":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2933":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2934":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2935":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2936":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2937":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2938":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2939":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2940":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2941":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2942":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2943":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2944":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2945":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2946":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2947":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2948":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2949":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2950":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2951":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2952":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2953":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2954":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3330":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3331":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3332":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3370":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3371":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3372":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3373":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3374":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3375":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3376":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3377":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3378":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3379":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3380":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3381":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3382":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3383":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3384":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3385":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3386":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3387":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3388":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3389":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3390":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3391":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3392":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3393":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3394":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3395":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3396":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3397":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3398":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3399":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3400":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3401":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3402":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3422":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3423":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3431":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3432":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3433":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3434":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3435":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3436":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3437":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3438":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3439":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3440":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3441":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3442":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3443":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3444":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3445":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3446":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3447":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3448":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3449":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3450":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3451":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3452":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3453":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3454":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3455":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3456":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3457":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3458":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3459":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3460":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3461":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3462":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3463":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3464":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3465":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3466":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3467":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3468":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3469":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3470":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3471":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3472":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3473":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3474":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3475":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3476":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3477":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3478":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3479":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3480":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3481":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3482":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3483":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3484":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3485":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3486":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3487":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3488":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3489":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3490":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3491":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3492":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3493":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3494":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3495":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3496":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3497":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3498":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3499":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3500":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3501":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3502":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3503":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3504":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3505":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3506":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3507":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3508":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3509":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3510":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3511":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3512":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3513":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3514":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3515":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3516":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3517":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3518":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3519":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3520":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3521":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3522":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3523":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3524":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3525":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3526":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3527":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3528":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3529":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3530":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3531":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3532":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3533":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3534":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3535":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3536":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3537":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3538":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3539":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3540":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3541":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3542":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3543":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3544":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3545":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3546":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3547":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3548":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3549":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3550":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3551":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3552":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3553":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3554":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3555":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3556":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3557":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3558":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3559":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3560":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3561":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3562":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3563":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3564":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3565":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3566":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3567":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3568":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3569":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3570":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3571":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3572":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3573":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3574":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3575":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3576":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3577":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3578":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3579":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3580":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3581":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3582":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3583":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3584":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3585":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3586":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3587":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3588":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3589":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3590":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3591":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3592":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3593":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3594":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3595":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3596":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3597":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3598":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3599":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3600":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3601":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3602":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3603":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3604":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3605":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3606":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3607":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3608":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3609":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3610":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3611":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3612":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3613":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3614":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3615":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3616":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3617":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3618":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3619":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3620":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3621":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3622":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3623":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3624":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3625":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3626":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3627":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3628":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3629":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3630":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3631":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3632":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3633":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3634":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3635":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3636":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3637":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3638":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3639":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3640":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3641":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3642":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3643":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3644":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3645":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3646":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3647":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3648":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3649":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3650":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3651":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3652":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3653":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3654":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3655":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3656":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3657":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3658":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3659":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3660":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3661":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3662":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3663":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3664":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3665":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3666":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3667":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3668":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3669":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3670":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3671":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3672":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3673":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3674":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3675":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3676":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3677":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3678":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3679":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3680":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3681":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3682":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3683":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3684":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3685":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3686":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3687":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3688":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3689":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3690":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3691":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3692":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3693":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3694":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3695":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3696":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3697":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3698":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3699":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3700":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3701":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3702":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3703":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3704":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3705":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3706":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3707":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3708":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3709":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3710":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3711":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3712":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3713":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3714":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3715":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3716":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3717":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3718":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3719":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3720":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3721":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3722":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3723":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3724":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3725":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3726":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3727":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3728":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3729":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3730":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3731":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3732":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3733":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3734":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3735":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3736":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3737":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3738":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3739":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3740":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3741":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3742":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3743":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3744":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3745":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3746":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3747":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3748":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3749":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3750":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3751":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3752":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3753":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3754":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3755":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3756":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3757":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3758":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3759":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3760":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3761":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3762":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3763":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3764":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3765":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3766":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3767":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3768":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3777":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3778":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3779":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3780":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3781":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3782":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3783":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3784":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3834":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3835":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3836":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3837":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3838":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3839":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3840":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3841":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3843":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3844":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3845":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3858":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3859":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3860":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3861":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3862":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3863":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3864":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3865":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3866":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3867":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3868":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3869":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3870":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3871":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3872":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3873":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3874":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3875":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3876":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3877":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3878":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3879":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3880":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3881":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3882":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3883":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3884":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3885":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3886":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3893":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3894":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3895":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3896":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3897":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3898":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3899":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3900":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3901":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3902":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3903":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3904":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3905":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3906":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3907":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3908":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3909":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3910":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3911":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3912":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3913":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3914":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3915":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3916":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3917":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3918":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3919":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3920":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3921":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3922":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3923":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3924":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3925":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3926":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3927":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3928":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3929":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3930":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3932":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3933":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3934":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_3834":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1749,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"uid","label":"Uid","placeholder":"Uid","order":0,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255"],"updateValidation":["required","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3834,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3835":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1729,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3835,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3836":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1730,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3836,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3837":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1731,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"content","label":"Content","placeholder":"Content","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3837,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3838":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1774,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"data","label":"Data","placeholder":"Data","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","json"],"updateValidation":["nullable","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3838,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3839":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1775,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"image","label":"Image","placeholder":"Image","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","image","max:1024"],"updateValidation":["nullable","image","max:1024"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3839,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3840":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1732,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"thumbnail","label":"Thumbnail","placeholder":"Thumbnail","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","file"],"updateValidation":["nullable","file"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3840,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3841":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1733,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"weight","label":"Weight","placeholder":"Weight","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"number","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","numeric"],"updateValidation":["nullable","numeric"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3841,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3845":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1755,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"model","label":"Model","placeholder":"Model","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"page","label":"Page"},{"value":"post","label":"Blog"}],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3845,"createdAt":"2023-12-11 09:58:09","updatedAt":"2023-12-11 09:58:39"},"item_3843":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1746,"relationshipId":528,"relationshipCollectionName":"languages","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"languagesForSelect","name":"language_id","label":"Language","placeholder":"Language","order":10,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Language","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","exists:languages,id"],"updateValidation":["nullable","exists:languages,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3843,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 16:52:59"},"item_3844":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":564,"fieldId":1780,"relationshipId":547,"relationshipCollectionName":"tags","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"tagsForSelect","name":"translation_id","label":"Translation","placeholder":"Translation","order":11,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Tag","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","exists:tags,id"],"updateValidation":["nullable","exists:tags,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3844,"createdAt":"2023-12-11 09:56:55","updatedAt":"2023-12-11 09:58:39"},"item_3858":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1930,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"revname","label":"Revname","placeholder":"Revname","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3858,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3859":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1931,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"revcomment","label":"Revcomment","placeholder":"Revcomment","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3859,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3860":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1932,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"revretention","label":"Revretention","placeholder":"Revretention","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"datetime","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","date"],"updateValidation":["nullable","date"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3860,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3861":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1893,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"uid","label":"Uid","placeholder":"Uid","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255"],"updateValidation":["required","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3861,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3862":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1892,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"main_category_id","label":"Main Category Id","placeholder":"Main Category Id","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255"],"updateValidation":["nullable","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3862,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3863":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1882,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3863,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3864":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1883,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3864,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3865":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1884,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"short","label":"Short","placeholder":"Short","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3865,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3866":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1885,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"content","label":"Content","placeholder":"Content","order":9,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3866,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3867":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1886,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"data","label":"Data","placeholder":"Data","order":10,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","json"],"updateValidation":["nullable","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3867,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3868":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1887,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"image","label":"Image","placeholder":"Image","order":11,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","image","max:1024"],"updateValidation":["nullable","image","max:1024"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3868,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3869":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1888,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"thumbnail","label":"Thumbnail","placeholder":"Thumbnail","order":12,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","file"],"updateValidation":["nullable","file"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3869,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3870":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1889,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"author_id","label":"Author Id","placeholder":"Author Id","order":13,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255"],"updateValidation":["required","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3870,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3871":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1890,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"language_id","label":"Language Id","placeholder":"Language Id","order":14,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255"],"updateValidation":["nullable","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3871,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:26"},"item_3872":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1891,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"translation_id","label":"Translation Id","placeholder":"Translation Id","order":15,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255"],"updateValidation":["nullable","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3872,"createdAt":"2023-12-11 10:26:26","updatedAt":"2023-12-11 10:26:27"},"item_3873":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1894,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"categories","label":"Categories","placeholder":"Categories","order":16,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","json"],"updateValidation":["nullable","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3873,"createdAt":"2023-12-11 10:26:27","updatedAt":"2023-12-11 10:26:27"},"item_3874":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":566,"fieldId":1895,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"tags","label":"Tags","placeholder":"Tags","order":17,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","json"],"updateValidation":["nullable","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3874,"createdAt":"2023-12-11 10:26:27","updatedAt":"2023-12-11 10:26:27"},"item_3875":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1750,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"uid","label":"Uid","placeholder":"Uid","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255"],"updateValidation":["required","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3875,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3876":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1818,"relationshipId":566,"relationshipCollectionName":"categories","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"categoriesForSelect","name":"main_category_id","label":"Main Category","placeholder":"Main Category","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Category","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","exists:categories,id"],"updateValidation":["nullable","exists:categories,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3876,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3877":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1721,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3877,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3878":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1713,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3878,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3879":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1714,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"short","label":"Short","placeholder":"Short","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3879,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3880":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1715,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"content","label":"Content","placeholder":"Content","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3880,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3881":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1752,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"data","label":"Data","placeholder":"Data","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","json"],"updateValidation":["nullable","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3881,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3882":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1720,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"image","label":"Image","placeholder":"Image","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","image","max:1024"],"updateValidation":["nullable","image","max:1024"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3882,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3883":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1754,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"thumbnail","label":"Thumbnail","placeholder":"Thumbnail","order":9,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","file"],"updateValidation":["nullable","file"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3883,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3884":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1791,"relationshipId":554,"relationshipCollectionName":"authors","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"authorsForSelect","name":"author_id","label":"Author","placeholder":"Author","order":10,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Author","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:authors,id"],"updateValidation":["required","exists:authors,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3884,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3885":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1748,"relationshipId":530,"relationshipCollectionName":"languages","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"languagesForSelect","name":"language_id","label":"Language","placeholder":"Language","order":11,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Language","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","exists:languages,id"],"updateValidation":["nullable","exists:languages,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3885,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 16:52:59"},"item_3886":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":567,"fieldId":1798,"relationshipId":557,"relationshipCollectionName":"posts","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"postsForSelect","name":"translation_id","label":"Translation","placeholder":"Translation","order":12,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Post","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","exists:posts,id"],"updateValidation":["nullable","exists:posts,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3886,"createdAt":"2023-12-11 10:27:02","updatedAt":"2023-12-11 10:27:02"},"item_3893":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1792,"relationshipId":556,"relationshipCollectionName":"users","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"usersForSelect","name":"user_id","label":"User","placeholder":"User","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the User","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:users,id"],"updateValidation":["required","exists:users,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3893,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3894":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1902,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"salutation","label":"Salutation","placeholder":"Salutation","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3894,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3895":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1903,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3895,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3896":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1898,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3896,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3897":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1899,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"full_name","label":"Full Name","placeholder":"Full Name","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3897,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3898":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1900,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"first_name","label":"First Name","placeholder":"First Name","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3898,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3899":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1901,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"last_name","label":"Last Name","placeholder":"Last Name","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3899,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3900":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1905,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"mail_address","label":"Mail Address","placeholder":"Mail Address","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3900,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3901":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1904,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"website","label":"Website","placeholder":"Website","order":9,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3901,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3902":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1906,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"address","label":"Address","placeholder":"Address","order":10,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3902,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3903":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":569,"fieldId":1908,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"social","label":"Social","placeholder":"Social","order":11,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","json"],"updateValidation":["required","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3903,"createdAt":"2023-12-11 10:27:22","updatedAt":"2023-12-11 10:27:22"},"item_3904":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":570,"fieldId":1658,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3904,"createdAt":"2023-12-11 10:28:15","updatedAt":"2023-12-11 10:28:15"},"item_3905":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":570,"fieldId":1659,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"email","label":"Email","placeholder":"Email","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"email","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","unique:users,email","email"],"updateValidation":["required","unique:users,email","email"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3905,"createdAt":"2023-12-11 10:28:15","updatedAt":"2023-12-11 10:28:15"},"item_3906":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":570,"fieldId":1661,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"password","label":"Password","placeholder":"Password","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"password","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required"],"updateValidation":["nullable"],"onCreate":true,"onUpdate":true,"onShow":false,"onIndex":false,"onForms":true,"dependentSelectId":null,"id":3906,"createdAt":"2023-12-11 10:28:15","updatedAt":"2023-12-11 10:28:15"},"item_3907":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":570,"fieldId":1917,"relationshipId":607,"relationshipCollectionName":"whitelists","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"whitelistsForSelect","name":"whitelist_id","label":"Whitelist","placeholder":"Whitelist","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Whitelist","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:whitelists,id"],"updateValidation":["required","exists:whitelists,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3907,"createdAt":"2023-12-11 10:28:15","updatedAt":"2023-12-11 10:28:15"},"item_3908":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1786,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3908,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3909":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1787,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3909,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3910":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1788,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"content","label":"Content","placeholder":"Content","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3910,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3911":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1933,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"translations","label":"Translations","placeholder":"Translations","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","json"],"updateValidation":["required","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3911,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3912":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1935,"relationshipId":615,"relationshipCollectionName":"comments","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"commentsForSelect","name":"parent_id","label":"Comment","placeholder":"Comment","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Comment","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","exists:comments,id"],"updateValidation":["nullable","exists:comments,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3912,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3913":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1938,"relationshipId":618,"relationshipCollectionName":"authors","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"authorsForSelect","name":"author_id","label":"Author","placeholder":"Author","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Author","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","exists:authors,id"],"updateValidation":["nullable","exists:authors,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3913,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3914":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1936,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"is_from_author","label":"Is From Author","placeholder":"Is From Author","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","boolean"],"updateValidation":["nullable","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3914,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3915":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1939,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3915,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3916":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1940,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"email","label":"Email","placeholder":"Email","order":9,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"email","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","email"],"updateValidation":["required","email"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3916,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3917":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":571,"fieldId":1941,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"avatar","label":"Avatar","placeholder":"Avatar","order":10,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","file"],"updateValidation":["nullable","file"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3917,"createdAt":"2023-12-11 10:45:31","updatedAt":"2023-12-11 10:45:31"},"item_3918":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":572,"fieldId":1740,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3918,"createdAt":"2023-12-11 11:16:58","updatedAt":"2023-12-11 11:16:58"},"item_3919":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":572,"fieldId":1741,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3919,"createdAt":"2023-12-11 11:16:58","updatedAt":"2023-12-11 11:16:58"},"item_3920":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":572,"fieldId":1781,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"isocode","label":"Isocode","placeholder":"Isocode","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3920,"createdAt":"2023-12-11 11:16:58","updatedAt":"2023-12-11 11:16:58"},"item_3921":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":572,"fieldId":1784,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"flag","label":"Flag","placeholder":"Flag","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3921,"createdAt":"2023-12-11 11:16:58","updatedAt":"2023-12-11 11:16:58"},"item_3922":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":572,"fieldId":1743,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"active","label":"Active","placeholder":"Active","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":"0","starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","boolean"],"updateValidation":["required","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3922,"createdAt":"2023-12-11 11:16:58","updatedAt":"2023-12-11 11:16:58"},"item_3923":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":572,"fieldId":1783,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"published","label":"Published","placeholder":"Published","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","boolean"],"updateValidation":["required","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3923,"createdAt":"2023-12-11 11:16:58","updatedAt":"2023-12-11 11:16:58"},"item_3924":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1810,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"uid","label":"Uid","placeholder":"Uid","order":0,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255"],"updateValidation":["required","max:255"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3924,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:50:06"},"item_3925":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1722,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3925,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:50:06"},"item_3926":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1723,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3926,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:50:06"},"item_3927":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1724,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"content","label":"Content","placeholder":"Content","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3927,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:50:06"},"item_3928":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1725,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"data","label":"Data","placeholder":"Data","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","json"],"updateValidation":["nullable","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3928,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:50:06"},"item_3929":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1726,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"image","label":"Image","placeholder":"Image","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","image","max:1024"],"updateValidation":["nullable","image","max:1024"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3929,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:50:06"},"item_3930":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1727,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"thumbnail","label":"Thumbnail","placeholder":"Thumbnail","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"image","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","file"],"updateValidation":["nullable","file"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3930,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:50:06"},"item_3934":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1728,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"model","label":"Limited to","placeholder":"Model","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":255,"min":null,"step":null,"items":[{"value":"posts","label":"Blog"},{"value":"pages","label":"Page"}],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3934,"createdAt":"2023-12-11 11:49:56","updatedAt":"2023-12-11 11:50:55"},"item_3932":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1759,"relationshipId":536,"relationshipCollectionName":"languages","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"languagesForSelect","name":"language_id","label":"Language","placeholder":"Language","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Language","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:languages,id"],"updateValidation":["required","exists:languages,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3932,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 16:52:59"},"item_3933":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":573,"fieldId":1760,"relationshipId":537,"relationshipCollectionName":"categories","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"categoriesForSelect","name":"translation_id","label":"Translation","placeholder":"Translation","order":9,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Category","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","exists:categories,id"],"updateValidation":["nullable","exists:categories,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":3933,"createdAt":"2023-12-11 11:49:38","updatedAt":"2023-12-11 11:50:06"}},"manytomanycomponents":{"manytomanycomponents":{"count":2,"lastPrimaryKey":4,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"manytomanydetails":{"manytomanydetails":{"count":1,"lastPrimaryKey":4,"index":{"1":{"hasMany":{"cruds.manyToManyDetailId":[27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"manytomanyrelationships":{"manytomanyrelationships":{"count":74,"lastPrimaryKey":152,"index":{"1":{"hasMany":{"manytomanyrelationships.inverseId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"manytomanyrelationships.inverseId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"manytomanyrelationships.inverseId":[4],"manytomanycomponents.relationshipId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"manytomanyrelationships.inverseId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"manytomanyrelationships.inverseId":[6],"manytomanycomponents.relationshipId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"manytomanyrelationships.inverseId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"manytomanyrelationships.inverseId":[8],"manytomanydetails.relationshipId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"manytomanyrelationships.inverseId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"manytomanyrelationships.inverseId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"manytomanyrelationships.inverseId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"manytomanyrelationships.inverseId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"manytomanyrelationships.inverseId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"manytomanyrelationships.inverseId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"manytomanyrelationships.inverseId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"manytomanyrelationships.inverseId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"manytomanyrelationships.inverseId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"manytomanyrelationships.inverseId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"manytomanyrelationships.inverseId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"manytomanyrelationships.inverseId":[44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"manytomanyrelationships.inverseId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"manytomanyrelationships.inverseId":[50]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"manytomanyrelationships.inverseId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"manytomanyrelationships.inverseId":[58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"manytomanyrelationships.inverseId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"manytomanyrelationships.inverseId":[60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"manytomanyrelationships.inverseId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"manytomanyrelationships.inverseId":[62]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"manytomanyrelationships.inverseId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"manytomanyrelationships.inverseId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"manytomanyrelationships.inverseId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"manytomanyrelationships.inverseId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"manytomanyrelationships.inverseId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{"manytomanyrelationships.inverseId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"manytomanyrelationships.inverseId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{"manytomanyrelationships.inverseId":[78]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{"manytomanyrelationships.inverseId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{"manytomanyrelationships.inverseId":[82]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{"manytomanyrelationships.inverseId":[81]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"manytomanyrelationships.inverseId":[100]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{"manytomanyrelationships.inverseId":[99]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"manytomanyrelationships.inverseId":[102]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"manytomanyrelationships.inverseId":[101]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"manytomanyrelationships.inverseId":[104]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"manytomanyrelationships.inverseId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{"manytomanyrelationships.inverseId":[106]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{"manytomanyrelationships.inverseId":[105]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"109":{"hasMany":{"manytomanyrelationships.inverseId":[110]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"manytomanyrelationships.inverseId":[109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{"manytomanyrelationships.inverseId":[112]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"112":{"hasMany":{"manytomanyrelationships.inverseId":[111]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"113":{"hasMany":{"manytomanyrelationships.inverseId":[114]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{"manytomanyrelationships.inverseId":[113]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"115":{"hasMany":{"manytomanyrelationships.inverseId":[116]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{"manytomanyrelationships.inverseId":[115]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{"manytomanyrelationships.inverseId":[118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{"manytomanyrelationships.inverseId":[117]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"manytomanyrelationships.inverseId":[120]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"manytomanyrelationships.inverseId":[119]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"manytomanyrelationships.inverseId":[122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{"manytomanyrelationships.inverseId":[121]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"manytomanyrelationships.inverseId":[124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{"manytomanyrelationships.inverseId":[123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"manytomanyrelationships.inverseId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{"manytomanyrelationships.inverseId":[125]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"manytomanyrelationships.inverseId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"manytomanyrelationships.inverseId":[127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"manytomanyrelationships.inverseId":[132]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"manytomanyrelationships.inverseId":[131]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"manytomanyrelationships.inverseId":[142]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{"manytomanyrelationships.inverseId":[141]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{"manytomanyrelationships.inverseId":[146]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{"manytomanyrelationships.inverseId":[145]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"manytomanyrelationships.inverseId":[148]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{"manytomanyrelationships.inverseId":[147]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_146":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":310,"pivotId":319,"inverseId":145,"localModelId":309,"modelKeyId":1797,"localModelKeyId":1796,"name":"currencies","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"defaultName":"currencies","usingFirstDefaultName":true,"id":146,"createdAt":"2023-12-09 14:22:37","updatedAt":"2023-12-09 14:22:37"},"item_145":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":309,"pivotId":319,"inverseId":146,"localModelId":310,"modelKeyId":1796,"localModelKeyId":1797,"name":"countries","type":"belongsToMany","pivotOriginalName":"country_currency","modelKeyOriginalName":"country_id","localModelKeyOriginalName":"currency_id","hasApi":true,"defaultName":"countries2","usingFirstDefaultName":false,"id":145,"createdAt":"2023-12-09 14:22:37","updatedAt":"2023-12-09 14:22:37"},"item_148":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":311,"pivotId":321,"inverseId":147,"localModelId":309,"modelKeyId":1803,"localModelKeyId":1802,"name":"timezones","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"defaultName":"timezones","usingFirstDefaultName":true,"id":148,"createdAt":"2023-12-09 23:20:58","updatedAt":"2023-12-09 23:20:58"},"item_147":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":309,"pivotId":321,"inverseId":148,"localModelId":311,"modelKeyId":1802,"localModelKeyId":1803,"name":"countries","type":"belongsToMany","pivotOriginalName":"country_timezone","modelKeyOriginalName":"country_id","localModelKeyOriginalName":"timezone_id","hasApi":true,"defaultName":"countries2","usingFirstDefaultName":false,"id":147,"createdAt":"2023-12-09 23:20:58","updatedAt":"2023-12-09 23:20:58"},"item_141":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":308,"pivotId":317,"inverseId":142,"localModelId":309,"modelKeyId":1793,"localModelKeyId":1794,"name":"languages","type":"belongsToMany","pivotOriginalName":"country_language","modelKeyOriginalName":"language_id","localModelKeyOriginalName":"country_id","hasApi":true,"defaultName":"languages2","usingFirstDefaultName":false,"id":141,"createdAt":"2023-12-09 14:20:24","updatedAt":"2023-12-11 16:52:59","suggestedInverseName":"languages"},"item_142":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":309,"pivotId":317,"inverseId":141,"localModelId":308,"modelKeyId":1794,"localModelKeyId":1793,"name":"countries","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"defaultName":"countries","usingFirstDefaultName":true,"id":142,"createdAt":"2023-12-09 14:20:24","updatedAt":"2023-12-09 14:20:24"}},"morphrelationships":{"morphrelationships":{"count":13,"lastPrimaryKey":25,"index":{"13":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_13":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"localModelId":305,"name":"categories","type":"morphToMany","morphTo":"categoryable","idFieldId":1826,"typeFieldId":1827,"pivotId":329,"hasApi":false,"defaultName":"categories","usingFirstDefaultName":true,"id":13,"createdAt":"2023-12-10 00:38:07","updatedAt":"2023-12-10 00:38:07"},"item_14":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"localModelId":320,"name":"categories","type":"morphToMany","morphTo":"categoryable","idFieldId":1826,"typeFieldId":1827,"pivotId":329,"hasApi":false,"defaultName":"categories","usingFirstDefaultName":true,"id":14,"createdAt":"2023-12-10 00:38:32","updatedAt":"2023-12-10 00:38:32"},"item_15":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"localModelId":296,"name":"categories","type":"morphToMany","morphTo":"categoryable","idFieldId":1826,"typeFieldId":1827,"pivotId":329,"hasApi":false,"defaultName":"categories","usingFirstDefaultName":true,"id":15,"createdAt":"2023-12-10 00:38:50","updatedAt":"2023-12-10 00:38:50"},"item_16":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":292,"localModelId":324,"name":"categories","type":"morphToMany","morphTo":"categoryable","idFieldId":1826,"typeFieldId":1827,"pivotId":329,"hasApi":false,"defaultName":"categories","usingFirstDefaultName":true,"id":16,"createdAt":"2023-12-10 00:39:38","updatedAt":"2023-12-10 00:39:38"},"item_23":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":307,"localModelId":305,"name":"comments","type":"morphToMany","morphTo":"commentable","idFieldId":1927,"typeFieldId":1928,"pivotId":345,"hasApi":false,"defaultName":"comments","usingFirstDefaultName":true,"id":23,"createdAt":"2023-12-11 09:14:03","updatedAt":"2023-12-11 09:14:03"},"item_24":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":307,"localModelId":296,"name":"comments","type":"morphToMany","morphTo":"commentable","idFieldId":1927,"typeFieldId":1928,"pivotId":345,"hasApi":false,"defaultName":"comments","usingFirstDefaultName":true,"id":24,"createdAt":"2023-12-11 09:20:41","updatedAt":"2023-12-11 09:20:41"},"item_20":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":293,"localModelId":324,"name":"tags","type":"morphToMany","morphTo":"taggable","idFieldId":1829,"typeFieldId":1830,"pivotId":330,"hasApi":false,"defaultName":"tags","usingFirstDefaultName":true,"id":20,"createdAt":"2023-12-10 00:48:39","updatedAt":"2023-12-10 00:48:39"},"item_22":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":338,"localModelId":324,"name":"revisions","type":"morphToMany","morphTo":"revisionable","idFieldId":1880,"typeFieldId":1881,"pivotId":340,"hasApi":false,"defaultName":"revisions","usingFirstDefaultName":true,"id":22,"createdAt":"2023-12-10 22:27:33","updatedAt":"2023-12-10 22:27:33"},"item_18":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":293,"localModelId":296,"name":"tags","type":"morphToMany","morphTo":"taggable","idFieldId":1829,"typeFieldId":1830,"pivotId":330,"hasApi":false,"defaultName":"tags","usingFirstDefaultName":true,"id":18,"createdAt":"2023-12-10 00:48:16","updatedAt":"2023-12-10 00:48:16"},"item_21":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":336,"localModelId":291,"name":"platforms","type":"morphToMany","morphTo":"platformable","idFieldId":1851,"typeFieldId":1852,"pivotId":337,"hasApi":false,"defaultName":"platforms","usingFirstDefaultName":true,"id":21,"createdAt":"2023-12-10 02:11:36","updatedAt":"2023-12-10 02:11:36"},"item_17":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":293,"localModelId":305,"name":"tags","type":"morphToMany","morphTo":"taggable","idFieldId":1829,"typeFieldId":1830,"pivotId":330,"hasApi":false,"defaultName":"tags","usingFirstDefaultName":true,"id":17,"createdAt":"2023-12-10 00:46:01","updatedAt":"2023-12-10 00:46:01"},"item_25":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":338,"localModelId":305,"name":"revisions","type":"morphToMany","morphTo":"revisionable","idFieldId":1880,"typeFieldId":1881,"pivotId":340,"hasApi":false,"defaultName":"revisions","usingFirstDefaultName":true,"id":25,"createdAt":"2023-12-11 09:57:35","updatedAt":"2023-12-11 09:57:35"},"item_19":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":293,"localModelId":320,"name":"tags","type":"morphToMany","morphTo":"taggable","idFieldId":1829,"typeFieldId":1830,"pivotId":330,"hasApi":false,"defaultName":"tags","usingFirstDefaultName":true,"id":19,"createdAt":"2023-12-10 00:48:28","updatedAt":"2023-12-10 00:48:28"}},"projects":{"projects":{"count":9,"lastPrimaryKey":15,"index":{"4":{"hasMany":{"entities.projectId":[15,16,18,17,19,20,22,21,14,28,27,26,8,25,13,6,12,33,30,31,11,34,7,35,36,37,29,23,24,9,38],"cruds.projectId":[5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,10,27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"entities.projectId":[46,92,91,90,95,45,40,99,89,44,42,70,39,71,41,52,108,98,68,104,103,101,69,81,79,110,67,64,87,84,57,61,83,111,102,59,53,93,56,43,88,51,55,54,86],"cruds.projectId":[266,267,268,269,270,271,272,273,274,275,277,278,279,280,282,283,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,304,305,306,307]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"entities.projectId":[134,141,128,118,120,130,131,212,132,119,213,140,116,133,121,138,137,136,139,142,117,208,214,215,216],"cruds.projectId":[494,497,498,499,500,501,502,503,504,508,510,511,512,513,514,515,516,517,518]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"entities.projectId":[193,199,205,203,207,204,202,198,200,201,194,197,192,195,196],"cruds.projectId":[421,422,423,424,425,426,427,428,429,430,431]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"entities.projectId":[217,218,220,225,224,226,227,230,229,228,231,221,219,222,223,232],"comments.projectId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"entities.projectId":[233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,258,259,260,263,264,268,269,270,271,272,273,274,276,267,278,279,275,266,261,277,257,256,265,262,284,280,283,286,281,282,285],"cruds.projectId":[537,536,520,522,529,546,524,544,540,543,530,526,521,554,523,547,535,539,525,551,532,519,531,528,538,550,549,527,542,552,533,553,534,545,548,541],"comments.projectId":[4,5,6,3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"entities.projectId":[287,290,288],"cruds.projectId":[557,558]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"entities.projectId":[311,310,294,346,332,341,336,331,342,306,343,335,329,345,309,319,317,321,333,334,291,307,337,308,330,292,293,296,324,320,305,339,340,338],"comments.projectId":[],"cruds.projectId":[564,566,567,569,570,571,572,573]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"entities.projectId":[301,300,302,303],"comments.projectId":[15,16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_14":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"mooxbuild","url":"https://mooxbuild.test","mode":"draft","folder":"/Users/alfdrollinger/Herd","authModelId":291,"tenancyModelId":null,"settings":{"cssFramework":"tailwind","theme":"default","uiTemplate":"jetstream","mutateDatesToCarbon":true,"authModel":null,"massAssignment":"fillable","validationMode":"array","routesMode":"resource","viewsFormMode":"blade","modelsFolder":"/Models","policiesFolder":"/Policies","servicesFolder":"/Services","requestsFolder":"/Http/Requests","controllersFolder":"/Http/Controllers","apiControllersFolder":"/Http/Controllers/Api","viewsFolder":"/resources/views/app","controllerNameMode":"singular","schemaZoom":1,"schemaScrollTop":4391.63916015625,"schemaScrollLeft":3736.563232421875,"turbolinks":false,"modules":[]},"codeSettings":{"options":{"forceGeneration":false,"deleteRemovedModules":true},"base":{"migrations":true,"models":true,"policies":true,"factories":true,"seeders":true,"routes":true,"apiRoutes":true,"apiSanctumAuth":true},"cruds":{"564":{"crudId":564,"name":"Tags","requests":true,"controller":true,"views":true,"tests":true,"api":true},"566":{"crudId":566,"name":"Revisions","requests":true,"controller":true,"views":true,"tests":true,"api":true},"567":{"crudId":567,"name":"Posts","requests":true,"controller":true,"views":true,"tests":true,"api":true},"569":{"crudId":569,"name":"Authors","requests":true,"controller":true,"views":true,"tests":true,"api":true},"570":{"crudId":570,"name":"Users","requests":true,"controller":true,"views":true,"tests":true,"api":true},"571":{"crudId":571,"name":"Comments","requests":true,"controller":true,"views":true,"tests":true,"api":true},"572":{"crudId":572,"name":"Languages","requests":true,"controller":true,"views":true,"tests":true,"api":true},"573":{"crudId":573,"name":"Categories","requests":true,"controller":true,"views":true,"tests":true,"api":true}},"modules":{"permissionsApi":false,"permissions":false,"uiTemplate":true},"generationCommands":{"checkDependencies":true,"gitClone":true,"composerInstall":true,"storageLink":true,"npmInstall":true,"compileAssets":true},"runCommands":{"compileAssets":true,"migrate":true,"serve":true,"openBrowser":true}},"connection":{"type":"mysql","host":"127.0.0.1","port":3306,"database":"mooxbuild","username":"root","password":""},"modules":["auth","permissions","multiTenancy"],"version":"1.3.3","laravelVersion":10,"repositoryUrl":null,"repositoryBranch":null,"files":{".env":{"deleteOnGeneration":true,"content":"APP_NAME=\"mooxbuild\"\nAPP_ENV=local\nAPP_KEY=base64:vrIDW5P7Q+aQmRV1WXd6V8LotxGF4EQJ+GCDlzxQNhY=\nAPP_DEBUG=true\nAPP_URL=https://mooxbuild.test\n\nLOG_CHANNEL=stack\nLOG_DEPRECATIONS_CHANNEL=null\nLOG_LEVEL=debug\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=mooxbuild\nDB_USERNAME=root\nDB_PASSWORD=\"\"\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nFILESYSTEM_DISK=local\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=database\nSESSION_LIFETIME=120\nMEMCACHED_HOST=127.0.0.1\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=smtp\nMAIL_HOST=mailpit\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=hello@example.com\nMAIL_FROM_NAME=${APP_NAME}\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\nAWS_USE_PATH_STYLE_ENDPOINT=false\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_HOST=\nPUSHER_PORT=443\nPUSHER_SCHEME=https\nPUSHER_APP_CLUSTER=mt1\nVITE_APP_NAME=${APP_NAME}\nVITE_PUSHER_APP_KEY=${PUSHER_APP_KEY}\nVITE_PUSHER_HOST=${PUSHER_HOST}\nVITE_PUSHER_PORT=${PUSHER_PORT}\nVITE_PUSHER_SCHEME=${PUSHER_SCHEME}\nVITE_PUSHER_APP_CLUSTER=${PUSHER_APP_CLUSTER}\n","module":"base","path":".env"},"/app/Providers/AuthServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\Facades\\Gate;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    /**\n     * The policy mappings for the application.\n     *\n     * @var array<class-string, class-string>\n     */\n    protected $policies = [\n        // 'App\\Models\\Model' => 'App\\Policies\\ModelPolicy',\n    ];\n\n    /**\n     * Register any authentication / authorization services.\n     */\n    public function boot(): void\n    {\n        // Automatically finding the Policies\n        Gate::guessPolicyNamesUsing(function ($modelClass) {\n            return 'App\\\\Policies\\\\' . class_basename($modelClass) . 'Policy';\n        });\n\n        $this->registerPolicies();\n    }\n}\n","module":"base","path":"/app/Providers/AuthServiceProvider.php"},"/app/Providers/AppServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     */\n    public function register(): void\n    {\n    }\n\n    /**\n     * Bootstrap any application services.\n     */\n    public function boot(): void\n    {\n        //\n    }\n}\n","module":"base","path":"/app/Providers/AppServiceProvider.php"},"/config/auth.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'super_admins' => ['admin@admin.com'],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default authentication \"guard\" and password\n    | reset options for your application. You may change these defaults\n    | as required, but they're a perfect start for most applications.\n    |\n    */\n\n    'defaults' => [\n        'guard' => 'web',\n        'passwords' => 'users',\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | here which uses session storage and the Eloquent user provider.\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | Supported: \"session\", \"token\"\n    |\n    */\n\n    'guards' => [\n        'web' => [\n            'driver' => 'session',\n            'provider' => 'users',\n        ],\n\n        'api' => [\n            'driver' => 'token',\n            'provider' => 'users',\n            'hash' => false,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | sources which represent each model / table. These sources may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    */\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => App\\Models\\User::class,\n        ],\n\n        // 'users' => [\n        //     'driver' => 'database',\n        //     'table' => 'users',\n        // ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | You may specify multiple password reset configurations if you have more\n    | than one user table or model in the application and you want to have\n    | separate password reset settings based on the specific user types.\n    |\n    | The expire time is the number of minutes that the reset token should be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    */\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table' => 'password_reset_tokens',\n            'expire' => 60,\n            'throttle' => 60,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Confirmation Timeout\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define the amount of seconds before a password confirmation\n    | times out and the user is prompted to re-enter their password via the\n    | confirmation screen. By default, the timeout lasts for three hours.\n    |\n    */\n\n    'password_timeout' => 10800,\n];\n","module":"base","path":"/config/auth.php"},"/app/Http/Controllers/Controller.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Routing\\Controller as BaseController;\nuse Illuminate\\Foundation\\Validation\\ValidatesRequests;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, ValidatesRequests;\n}\n","module":"base","path":"/app/Http/Controllers/Controller.php"},"/app/Http/Requests/TagStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass TagStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'weight' => ['nullable', 'numeric'],\n            'model' => ['nullable', 'max:255', 'string'],\n            'language_id' => ['nullable', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:tags,id'],\n        ];\n    }\n}\n","module":"crud:564","path":"/app/Http/Requests/TagStoreRequest.php"},"/app/Http/Requests/TagUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass TagUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'weight' => ['nullable', 'numeric'],\n            'model' => ['nullable', 'max:255', 'string'],\n            'language_id' => ['nullable', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:tags,id'],\n        ];\n    }\n}\n","module":"crud:564","path":"/app/Http/Requests/TagUpdateRequest.php"},"/app/Http/Controllers/TagController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Tag;\nuse App\\Models\\Language;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\TagStoreRequest;\nuse App\\Http\\Requests\\TagUpdateRequest;\nuse Illuminate\\Support\\Facades\\Storage;\n\nclass TagController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Tag::class);\n\n        $search = $request->get('search', '');\n\n        $tags = Tag::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.tags.index', compact('tags', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Tag::class);\n\n        $languages = Language::pluck('title', 'id');\n        $tags = Tag::pluck('title', 'id');\n\n        return view('app.tags.create', compact('languages', 'tags'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(TagStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Tag::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $tag = Tag::create($validated);\n\n        return redirect()\n            ->route('tags.edit', $tag)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Tag $tag): View\n    {\n        $this->authorize('view', $tag);\n\n        return view('app.tags.show', compact('tag'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Tag $tag): View\n    {\n        $this->authorize('update', $tag);\n\n        $languages = Language::pluck('title', 'id');\n        $tags = Tag::pluck('title', 'id');\n\n        return view('app.tags.edit', compact('tag', 'languages', 'tags'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        TagUpdateRequest $request,\n        Tag $tag\n    ): RedirectResponse {\n        $this->authorize('update', $tag);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            if ($tag->image) {\n                Storage::delete($tag->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($tag->thumbnail) {\n                Storage::delete($tag->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $tag->update($validated);\n\n        return redirect()\n            ->route('tags.edit', $tag)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Tag $tag): RedirectResponse\n    {\n        $this->authorize('delete', $tag);\n\n        if ($tag->image) {\n            Storage::delete($tag->image);\n        }\n\n        if ($tag->thumbnail) {\n            Storage::delete($tag->thumbnail);\n        }\n\n        $tag->delete();\n\n        return redirect()\n            ->route('tags.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:564","path":"/app/Http/Controllers/TagController.php"},"/tests/Feature/Controllers/TagControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\n\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TagControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_tags(): void\n    {\n        $tags = Tag::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('tags.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.index')\n            ->assertViewHas('tags');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_tag(): void\n    {\n        $response = $this->get(route('tags.create'));\n\n        $response->assertOk()->assertViewIs('app.tags.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_tag(): void\n    {\n        $data = Tag::factory()\n            ->make()\n            ->toArray();\n\n        $data['data'] = json_encode($data['data']);\n\n        $response = $this->post(route('tags.store'), $data);\n\n        $data['data'] = $this->castToJson($data['data']);\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $tag = Tag::latest('id')->first();\n\n        $response->assertRedirect(route('tags.edit', $tag));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->get(route('tags.show', $tag));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.show')\n            ->assertViewHas('tag');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->get(route('tags.edit', $tag));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.edit')\n            ->assertViewHas('tag');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $language = Language::factory()->create();\n        $tag = Tag::factory()->create();\n\n        $data = [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'weight' => 0,\n            'model' => $this->faker->text(255),\n            'language_id' => $language->id,\n            'translation_id' => $tag->id,\n        ];\n\n        $data['data'] = json_encode($data['data']);\n\n        $response = $this->put(route('tags.update', $tag), $data);\n\n        $data['id'] = $tag->id;\n\n        $data['data'] = $this->castToJson($data['data']);\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertRedirect(route('tags.edit', $tag));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->delete(route('tags.destroy', $tag));\n\n        $response->assertRedirect(route('tags.index'));\n\n        $this->assertSoftDeleted($tag);\n    }\n}\n","module":"crud:564","path":"/tests/Feature/Controllers/TagControllerTest.php"},"/resources/views/app/tags/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('tags.store') }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.tags.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:564","path":"/resources/views/app/tags/create.blade.php"},"/resources/views/app/tags/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('tags.update', $tag) }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.tags.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('tags.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:564","path":"/resources/views/app/tags/edit.blade.php"},"/resources/views/app/tags/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($tag) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"uid\"\n            label=\"Uid\"\n            :value=\"old('uid', ($editing ? $tag->uid : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Uid\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $tag->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $tag->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"content\" label=\"Content\" maxlength=\"255\"\n            >{{ old('content', ($editing ? $tag->content : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"data\" label=\"Data\" maxlength=\"255\"\n            >{{ old('data', ($editing ? json_encode($tag->data) : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $tag->image ? \\Storage::url($tag->image) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"image\"\n                label=\"Image\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"image\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('image') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $tag->thumbnail ? \\Storage::url($tag->thumbnail) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"thumbnail\"\n                label=\"Thumbnail\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"thumbnail\"\n                    id=\"thumbnail\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('thumbnail') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.number\n            name=\"weight\"\n            label=\"Weight\"\n            :value=\"old('weight', ($editing ? $tag->weight : ''))\"\n            max=\"255\"\n            placeholder=\"Weight\"\n        ></x-inputs.number>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"model\" label=\"Model\">\n            @php $selected = old('model', ($editing ? $tag->model : '')) @endphp\n            <option value=\"page\" {{ $selected == 'page' ? 'selected' : '' }} >Page</option>\n            <option value=\"post\" {{ $selected == 'post' ? 'selected' : '' }} >Blog</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"language_id\" label=\"Language\">\n            @php $selected = old('language_id', ($editing ? $tag->language_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Language</option>\n            @foreach($languages as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"translation_id\" label=\"Translation\">\n            @php $selected = old('translation_id', ($editing ? $tag->translation_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Tag</option>\n            @foreach($tags as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n</div>\n","module":"crud:564","path":"/resources/views/app/tags/form-inputs.blade.php"},"/resources/views/app/tags/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.uid')\n                        </h5>\n                        <span>{{ $tag->uid ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.title')\n                        </h5>\n                        <span>{{ $tag->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.slug')\n                        </h5>\n                        <span>{{ $tag->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.content')\n                        </h5>\n                        <span>{{ $tag->content ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.data')\n                        </h5>\n                        <pre>{{ json_encode($tag->data) ?? '-' }}</pre>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.image')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $tag->image ? \\Storage::url($tag->image) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.thumbnail')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $tag->thumbnail ? \\Storage::url($tag->thumbnail) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.weight')\n                        </h5>\n                        <span>{{ $tag->weight ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.model')\n                        </h5>\n                        <span>{{ $tag->model ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.language_id')\n                        </h5>\n                        <span\n                            >{{ optional($tag->language)->title ?? '-' }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.translation_id')\n                        </h5>\n                        <span\n                            >{{ optional($tag->translation)->title ?? '-'\n                            }}</span\n                        >\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Tag::class)\n                    <a href=\"{{ route('tags.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:564","path":"/resources/views/app/tags/show.blade.php"},"/resources/views/app/tags/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Tag::class)\n                            <a\n                                href=\"{{ route('tags.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.uid')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.content')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.data')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.image')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.thumbnail')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.tags.inputs.weight')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.model')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.language_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.translation_id')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($tags as $tag)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->uid ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->content ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($tag->data) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $tag->image ? \\Storage::url($tag->image) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $tag->thumbnail ? \\Storage::url($tag->thumbnail) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $tag->weight ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->model ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($tag->language)->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($tag->translation)->title ?? '-'\n                                    }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $tag)\n                                        <a\n                                            href=\"{{ route('tags.edit', $tag) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $tag)\n                                        <a\n                                            href=\"{{ route('tags.show', $tag) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $tag)\n                                        <form\n                                            action=\"{{ route('tags.destroy', $tag) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"12\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"12\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $tags->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:564","path":"/resources/views/app/tags/index.blade.php"},"/app/Http/Requests/RevisionStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass RevisionStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'revname' => ['nullable', 'max:255', 'string'],\n            'revcomment' => ['nullable', 'max:255', 'string'],\n            'revretention' => ['nullable', 'date'],\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'max:255'],\n            'language_id' => ['nullable', 'max:255'],\n            'translation_id' => ['nullable', 'max:255'],\n            'categories' => ['nullable', 'max:255', 'json'],\n            'tags' => ['nullable', 'max:255', 'json'],\n        ];\n    }\n}\n","module":"crud:566","path":"/app/Http/Requests/RevisionStoreRequest.php"},"/app/Http/Requests/RevisionUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass RevisionUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'revname' => ['nullable', 'max:255', 'string'],\n            'revcomment' => ['nullable', 'max:255', 'string'],\n            'revretention' => ['nullable', 'date'],\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'max:255'],\n            'language_id' => ['nullable', 'max:255'],\n            'translation_id' => ['nullable', 'max:255'],\n            'categories' => ['nullable', 'max:255', 'json'],\n            'tags' => ['nullable', 'max:255', 'json'],\n        ];\n    }\n}\n","module":"crud:566","path":"/app/Http/Requests/RevisionUpdateRequest.php"},"/app/Http/Controllers/RevisionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Revision;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\RevisionStoreRequest;\nuse App\\Http\\Requests\\RevisionUpdateRequest;\n\nclass RevisionController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Revision::class);\n\n        $search = $request->get('search', '');\n\n        $revisions = Revision::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.revisions.index', compact('revisions', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Revision::class);\n\n        return view('app.revisions.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(RevisionStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Revision::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $validated['categories'] = json_decode($validated['categories'], true);\n\n        $validated['tags'] = json_decode($validated['tags'], true);\n\n        $revision = Revision::create($validated);\n\n        return redirect()\n            ->route('revisions.edit', $revision)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Revision $revision): View\n    {\n        $this->authorize('view', $revision);\n\n        return view('app.revisions.show', compact('revision'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Revision $revision): View\n    {\n        $this->authorize('update', $revision);\n\n        return view('app.revisions.edit', compact('revision'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        RevisionUpdateRequest $request,\n        Revision $revision\n    ): RedirectResponse {\n        $this->authorize('update', $revision);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            if ($revision->image) {\n                Storage::delete($revision->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($revision->thumbnail) {\n                Storage::delete($revision->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $validated['categories'] = json_decode($validated['categories'], true);\n\n        $validated['tags'] = json_decode($validated['tags'], true);\n\n        $revision->update($validated);\n\n        return redirect()\n            ->route('revisions.edit', $revision)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Revision $revision\n    ): RedirectResponse {\n        $this->authorize('delete', $revision);\n\n        if ($revision->image) {\n            Storage::delete($revision->image);\n        }\n\n        if ($revision->thumbnail) {\n            Storage::delete($revision->thumbnail);\n        }\n\n        $revision->delete();\n\n        return redirect()\n            ->route('revisions.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:566","path":"/app/Http/Controllers/RevisionController.php"},"/tests/Feature/Controllers/RevisionControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Revision;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass RevisionControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_revisions(): void\n    {\n        $revisions = Revision::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('revisions.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.revisions.index')\n            ->assertViewHas('revisions');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_revision(): void\n    {\n        $response = $this->get(route('revisions.create'));\n\n        $response->assertOk()->assertViewIs('app.revisions.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_revision(): void\n    {\n        $data = Revision::factory()\n            ->make()\n            ->toArray();\n\n        $data['data'] = json_encode($data['data']);\n        $data['categories'] = json_encode($data['categories']);\n        $data['tags'] = json_encode($data['tags']);\n\n        $response = $this->post(route('revisions.store'), $data);\n\n        $data['data'] = $this->castToJson($data['data']);\n        $data['categories'] = $this->castToJson($data['categories']);\n        $data['tags'] = $this->castToJson($data['tags']);\n\n        $this->assertDatabaseHas('revisions', $data);\n\n        $revision = Revision::latest('id')->first();\n\n        $response->assertRedirect(route('revisions.edit', $revision));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_revision(): void\n    {\n        $revision = Revision::factory()->create();\n\n        $response = $this->get(route('revisions.show', $revision));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.revisions.show')\n            ->assertViewHas('revision');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_revision(): void\n    {\n        $revision = Revision::factory()->create();\n\n        $response = $this->get(route('revisions.edit', $revision));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.revisions.edit')\n            ->assertViewHas('revision');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_revision(): void\n    {\n        $revision = Revision::factory()->create();\n\n        $data = [\n            'revname' => $this->faker->text(255),\n            'revcomment' => $this->faker->text(),\n            'revretention' => $this->faker->dateTime(),\n            'uid' => $this->faker->randomNumber(),\n            'main_category_id' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'short' => $this->faker->text(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'author_id' => $this->faker->randomNumber(),\n            'language_id' => $this->faker->randomNumber(),\n            'translation_id' => $this->faker->randomNumber(),\n            'categories' => [],\n            'tags' => [],\n        ];\n\n        $data['data'] = json_encode($data['data']);\n        $data['categories'] = json_encode($data['categories']);\n        $data['tags'] = json_encode($data['tags']);\n\n        $response = $this->put(route('revisions.update', $revision), $data);\n\n        $data['id'] = $revision->id;\n\n        $data['data'] = $this->castToJson($data['data']);\n        $data['categories'] = $this->castToJson($data['categories']);\n        $data['tags'] = $this->castToJson($data['tags']);\n\n        $this->assertDatabaseHas('revisions', $data);\n\n        $response->assertRedirect(route('revisions.edit', $revision));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_revision(): void\n    {\n        $revision = Revision::factory()->create();\n\n        $response = $this->delete(route('revisions.destroy', $revision));\n\n        $response->assertRedirect(route('revisions.index'));\n\n        $this->assertSoftDeleted($revision);\n    }\n}\n","module":"crud:566","path":"/tests/Feature/Controllers/RevisionControllerTest.php"},"/resources/views/app/revisions/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.revisions.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('revisions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('revisions.store') }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.revisions.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('revisions.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:566","path":"/resources/views/app/revisions/create.blade.php"},"/resources/views/app/revisions/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.revisions.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('revisions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('revisions.update', $revision) }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.revisions.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('revisions.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('revisions.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:566","path":"/resources/views/app/revisions/edit.blade.php"},"/resources/views/app/revisions/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($revision) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"revname\"\n            label=\"Revname\"\n            :value=\"old('revname', ($editing ? $revision->revname : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Revname\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"revcomment\" label=\"Revcomment\" maxlength=\"255\"\n            >{{ old('revcomment', ($editing ? $revision->revcomment : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.datetime\n            name=\"revretention\"\n            label=\"Revretention\"\n            value=\"{{ old('revretention', ($editing ? optional($revision->revretention)->format('Y-m-d\\TH:i:s') : '')) }}\"\n            max=\"255\"\n        ></x-inputs.datetime>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"uid\"\n            label=\"Uid\"\n            :value=\"old('uid', ($editing ? $revision->uid : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Uid\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"main_category_id\"\n            label=\"Main Category Id\"\n            :value=\"old('main_category_id', ($editing ? $revision->main_category_id : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Main Category Id\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $revision->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $revision->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"short\" label=\"Short\" maxlength=\"255\"\n            >{{ old('short', ($editing ? $revision->short : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"content\" label=\"Content\" maxlength=\"255\"\n            >{{ old('content', ($editing ? $revision->content : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"data\" label=\"Data\" maxlength=\"255\"\n            >{{ old('data', ($editing ? json_encode($revision->data) : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $revision->image ? \\Storage::url($revision->image) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"image\"\n                label=\"Image\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"image\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('image') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $revision->thumbnail ? \\Storage::url($revision->thumbnail) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"thumbnail\"\n                label=\"Thumbnail\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"thumbnail\"\n                    id=\"thumbnail\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('thumbnail') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"author_id\"\n            label=\"Author Id\"\n            :value=\"old('author_id', ($editing ? $revision->author_id : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Author Id\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"language_id\"\n            label=\"Language Id\"\n            :value=\"old('language_id', ($editing ? $revision->language_id : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Language Id\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"translation_id\"\n            label=\"Translation Id\"\n            :value=\"old('translation_id', ($editing ? $revision->translation_id : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Translation Id\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"categories\" label=\"Categories\" maxlength=\"255\"\n            >{{ old('categories', ($editing ? json_encode($revision->categories)\n            : '')) }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"tags\" label=\"Tags\" maxlength=\"255\"\n            >{{ old('tags', ($editing ? json_encode($revision->tags) : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:566","path":"/resources/views/app/revisions/form-inputs.blade.php"},"/resources/views/app/revisions/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.revisions.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('revisions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.revname')\n                        </h5>\n                        <span>{{ $revision->revname ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.revcomment')\n                        </h5>\n                        <span>{{ $revision->revcomment ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.revretention')\n                        </h5>\n                        <span>{{ $revision->revretention ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.uid')\n                        </h5>\n                        <span>{{ $revision->uid ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.main_category_id')\n                        </h5>\n                        <span>{{ $revision->main_category_id ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.title')\n                        </h5>\n                        <span>{{ $revision->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.slug')\n                        </h5>\n                        <span>{{ $revision->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.short')\n                        </h5>\n                        <span>{{ $revision->short ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.content')\n                        </h5>\n                        <span>{{ $revision->content ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.data')\n                        </h5>\n                        <pre>{{ json_encode($revision->data) ?? '-' }}</pre>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.image')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $revision->image ? \\Storage::url($revision->image) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.thumbnail')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $revision->thumbnail ? \\Storage::url($revision->thumbnail) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.author_id')\n                        </h5>\n                        <span>{{ $revision->author_id ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.language_id')\n                        </h5>\n                        <span>{{ $revision->language_id ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.translation_id')\n                        </h5>\n                        <span>{{ $revision->translation_id ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.categories')\n                        </h5>\n                        <pre>\n{{ json_encode($revision->categories) ?? '-' }}</pre\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.revisions.inputs.tags')\n                        </h5>\n                        <pre>{{ json_encode($revision->tags) ?? '-' }}</pre>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('revisions.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Revision::class)\n                    <a href=\"{{ route('revisions.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:566","path":"/resources/views/app/revisions/show.blade.php"},"/resources/views/app/revisions/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.revisions.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Revision::class)\n                            <a\n                                href=\"{{ route('revisions.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.revname')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.revcomment')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.revretention')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.uid')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.main_category_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.short')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.content')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.data')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.image')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.thumbnail')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.author_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.language_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.translation_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.categories')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.revisions.inputs.tags')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($revisions as $revision)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->revname ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->revcomment ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->revretention ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->uid ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->main_category_id ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->short ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->content ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($revision->data) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $revision->image ? \\Storage::url($revision->image) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $revision->thumbnail ? \\Storage::url($revision->thumbnail) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->author_id ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->language_id ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $revision->translation_id ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($revision->categories) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($revision->tags) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $revision)\n                                        <a\n                                            href=\"{{ route('revisions.edit', $revision) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $revision)\n                                        <a\n                                            href=\"{{ route('revisions.show', $revision) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $revision)\n                                        <form\n                                            action=\"{{ route('revisions.destroy', $revision) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"18\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"18\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $revisions->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:566","path":"/resources/views/app/revisions/index.blade.php"},"/app/Http/Requests/PostStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass PostStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'exists:authors,id'],\n            'language_id' => ['nullable', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:posts,id'],\n        ];\n    }\n}\n","module":"crud:567","path":"/app/Http/Requests/PostStoreRequest.php"},"/app/Http/Requests/PostUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass PostUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'exists:authors,id'],\n            'language_id' => ['nullable', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:posts,id'],\n        ];\n    }\n}\n","module":"crud:567","path":"/app/Http/Requests/PostUpdateRequest.php"},"/app/Http/Controllers/PostController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Post;\nuse App\\Models\\Author;\nuse App\\Models\\Category;\nuse App\\Models\\Language;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\PostStoreRequest;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\PostUpdateRequest;\n\nclass PostController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Post::class);\n\n        $search = $request->get('search', '');\n\n        $posts = Post::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.posts.index', compact('posts', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Post::class);\n\n        $categories = Category::pluck('title', 'id');\n        $authors = Author::pluck('title', 'id');\n        $languages = Language::pluck('title', 'id');\n        $posts = Post::pluck('title', 'id');\n\n        return view(\n            'app.posts.create',\n            compact('categories', 'authors', 'languages', 'posts')\n        );\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(PostStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Post::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $post = Post::create($validated);\n\n        return redirect()\n            ->route('posts.edit', $post)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Post $post): View\n    {\n        $this->authorize('view', $post);\n\n        return view('app.posts.show', compact('post'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Post $post): View\n    {\n        $this->authorize('update', $post);\n\n        $categories = Category::pluck('title', 'id');\n        $authors = Author::pluck('title', 'id');\n        $languages = Language::pluck('title', 'id');\n        $posts = Post::pluck('title', 'id');\n\n        return view(\n            'app.posts.edit',\n            compact('post', 'categories', 'authors', 'languages', 'posts')\n        );\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        PostUpdateRequest $request,\n        Post $post\n    ): RedirectResponse {\n        $this->authorize('update', $post);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            if ($post->image) {\n                Storage::delete($post->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($post->thumbnail) {\n                Storage::delete($post->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $post->update($validated);\n\n        return redirect()\n            ->route('posts.edit', $post)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Post $post): RedirectResponse\n    {\n        $this->authorize('delete', $post);\n\n        if ($post->image) {\n            Storage::delete($post->image);\n        }\n\n        if ($post->thumbnail) {\n            Storage::delete($post->thumbnail);\n        }\n\n        $post->delete();\n\n        return redirect()\n            ->route('posts.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:567","path":"/app/Http/Controllers/PostController.php"},"/tests/Feature/Controllers/PostControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Post;\n\nuse App\\Models\\Author;\nuse App\\Models\\Language;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass PostControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_posts(): void\n    {\n        $posts = Post::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('posts.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.posts.index')\n            ->assertViewHas('posts');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_post(): void\n    {\n        $response = $this->get(route('posts.create'));\n\n        $response->assertOk()->assertViewIs('app.posts.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_post(): void\n    {\n        $data = Post::factory()\n            ->make()\n            ->toArray();\n\n        $data['data'] = json_encode($data['data']);\n\n        $response = $this->post(route('posts.store'), $data);\n\n        $data['data'] = $this->castToJson($data['data']);\n\n        $this->assertDatabaseHas('posts', $data);\n\n        $post = Post::latest('id')->first();\n\n        $response->assertRedirect(route('posts.edit', $post));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_post(): void\n    {\n        $post = Post::factory()->create();\n\n        $response = $this->get(route('posts.show', $post));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.posts.show')\n            ->assertViewHas('post');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_post(): void\n    {\n        $post = Post::factory()->create();\n\n        $response = $this->get(route('posts.edit', $post));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.posts.edit')\n            ->assertViewHas('post');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_post(): void\n    {\n        $post = Post::factory()->create();\n\n        $language = Language::factory()->create();\n        $author = Author::factory()->create();\n        $post = Post::factory()->create();\n        $category = Category::factory()->create();\n\n        $data = [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'short' => $this->faker->text(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'image' => $this->faker->text(255),\n            'language_id' => $language->id,\n            'author_id' => $author->id,\n            'translation_id' => $post->id,\n            'main_category_id' => $category->id,\n        ];\n\n        $data['data'] = json_encode($data['data']);\n\n        $response = $this->put(route('posts.update', $post), $data);\n\n        $data['id'] = $post->id;\n\n        $data['data'] = $this->castToJson($data['data']);\n\n        $this->assertDatabaseHas('posts', $data);\n\n        $response->assertRedirect(route('posts.edit', $post));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_post(): void\n    {\n        $post = Post::factory()->create();\n\n        $response = $this->delete(route('posts.destroy', $post));\n\n        $response->assertRedirect(route('posts.index'));\n\n        $this->assertSoftDeleted($post);\n    }\n}\n","module":"crud:567","path":"/tests/Feature/Controllers/PostControllerTest.php"},"/resources/views/app/posts/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.posts.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('posts.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('posts.store') }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.posts.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('posts.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:567","path":"/resources/views/app/posts/create.blade.php"},"/resources/views/app/posts/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.posts.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('posts.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('posts.update', $post) }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.posts.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('posts.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('posts.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:567","path":"/resources/views/app/posts/edit.blade.php"},"/resources/views/app/posts/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($post) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"uid\"\n            label=\"Uid\"\n            :value=\"old('uid', ($editing ? $post->uid : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Uid\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"main_category_id\" label=\"Main Category\">\n            @php $selected = old('main_category_id', ($editing ? $post->main_category_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Category</option>\n            @foreach($categories as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $post->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $post->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"short\" label=\"Short\" maxlength=\"255\"\n            >{{ old('short', ($editing ? $post->short : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"content\" label=\"Content\" maxlength=\"255\"\n            >{{ old('content', ($editing ? $post->content : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"data\" label=\"Data\" maxlength=\"255\"\n            >{{ old('data', ($editing ? json_encode($post->data) : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $post->image ? \\Storage::url($post->image) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"image\"\n                label=\"Image\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"image\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('image') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $post->thumbnail ? \\Storage::url($post->thumbnail) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"thumbnail\"\n                label=\"Thumbnail\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"thumbnail\"\n                    id=\"thumbnail\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('thumbnail') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"author_id\" label=\"Author\" required>\n            @php $selected = old('author_id', ($editing ? $post->author_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Author</option>\n            @foreach($authors as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"language_id\" label=\"Language\">\n            @php $selected = old('language_id', ($editing ? $post->language_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Language</option>\n            @foreach($languages as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"translation_id\" label=\"Translation\">\n            @php $selected = old('translation_id', ($editing ? $post->translation_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Post</option>\n            @foreach($posts as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n</div>\n","module":"crud:567","path":"/resources/views/app/posts/form-inputs.blade.php"},"/resources/views/app/posts/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.posts.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('posts.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.uid')\n                        </h5>\n                        <span>{{ $post->uid ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.main_category_id')\n                        </h5>\n                        <span\n                            >{{ optional($post->mainCategory)->title ?? '-'\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.title')\n                        </h5>\n                        <span>{{ $post->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.slug')\n                        </h5>\n                        <span>{{ $post->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.short')\n                        </h5>\n                        <span>{{ $post->short ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.content')\n                        </h5>\n                        <span>{{ $post->content ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.data')\n                        </h5>\n                        <pre>{{ json_encode($post->data) ?? '-' }}</pre>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.image')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $post->image ? \\Storage::url($post->image) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.thumbnail')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $post->thumbnail ? \\Storage::url($post->thumbnail) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.author_id')\n                        </h5>\n                        <span>{{ optional($post->author)->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.language_id')\n                        </h5>\n                        <span\n                            >{{ optional($post->language)->title ?? '-' }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.posts.inputs.translation_id')\n                        </h5>\n                        <span\n                            >{{ optional($post->translation)->title ?? '-'\n                            }}</span\n                        >\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('posts.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Post::class)\n                    <a href=\"{{ route('posts.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:567","path":"/resources/views/app/posts/show.blade.php"},"/resources/views/app/posts/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.posts.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Post::class)\n                            <a\n                                href=\"{{ route('posts.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.uid')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.main_category_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.short')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.content')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.data')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.image')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.thumbnail')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.author_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.language_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.posts.inputs.translation_id')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($posts as $post)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $post->uid ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($post->mainCategory)->title ??\n                                    '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $post->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $post->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $post->short ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $post->content ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($post->data) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $post->image ? \\Storage::url($post->image) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $post->thumbnail ? \\Storage::url($post->thumbnail) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($post->author)->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($post->language)->title ?? '-'\n                                    }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($post->translation)->title ??\n                                    '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $post)\n                                        <a\n                                            href=\"{{ route('posts.edit', $post) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $post)\n                                        <a\n                                            href=\"{{ route('posts.show', $post) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $post)\n                                        <form\n                                            action=\"{{ route('posts.destroy', $post) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"13\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"13\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $posts->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:567","path":"/resources/views/app/posts/index.blade.php"},"/app/Http/Requests/AuthorStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass AuthorStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required', 'exists:users,id'],\n            'salutation' => ['required', 'max:255', 'string'],\n            'title' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'full_name' => ['required', 'max:255', 'string'],\n            'first_name' => ['required', 'max:255', 'string'],\n            'last_name' => ['required', 'max:255', 'string'],\n            'mail_address' => ['required', 'max:255', 'string'],\n            'website' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'social' => ['required', 'max:255', 'json'],\n        ];\n    }\n}\n","module":"crud:569","path":"/app/Http/Requests/AuthorStoreRequest.php"},"/app/Http/Requests/AuthorUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass AuthorUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required', 'exists:users,id'],\n            'salutation' => ['required', 'max:255', 'string'],\n            'title' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'full_name' => ['required', 'max:255', 'string'],\n            'first_name' => ['required', 'max:255', 'string'],\n            'last_name' => ['required', 'max:255', 'string'],\n            'mail_address' => ['required', 'max:255', 'string'],\n            'website' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'social' => ['required', 'max:255', 'json'],\n        ];\n    }\n}\n","module":"crud:569","path":"/app/Http/Requests/AuthorUpdateRequest.php"},"/app/Http/Controllers/AuthorController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Author;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\AuthorStoreRequest;\nuse App\\Http\\Requests\\AuthorUpdateRequest;\n\nclass AuthorController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Author::class);\n\n        $search = $request->get('search', '');\n\n        $authors = Author::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.authors.index', compact('authors', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Author::class);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.authors.create', compact('users'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(AuthorStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Author::class);\n\n        $validated = $request->validated();\n        $validated['social'] = json_decode($validated['social'], true);\n\n        $author = Author::create($validated);\n\n        return redirect()\n            ->route('authors.edit', $author)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Author $author): View\n    {\n        $this->authorize('view', $author);\n\n        return view('app.authors.show', compact('author'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Author $author): View\n    {\n        $this->authorize('update', $author);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.authors.edit', compact('author', 'users'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        AuthorUpdateRequest $request,\n        Author $author\n    ): RedirectResponse {\n        $this->authorize('update', $author);\n\n        $validated = $request->validated();\n        $validated['social'] = json_decode($validated['social'], true);\n\n        $author->update($validated);\n\n        return redirect()\n            ->route('authors.edit', $author)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Author $author): RedirectResponse\n    {\n        $this->authorize('delete', $author);\n\n        $author->delete();\n\n        return redirect()\n            ->route('authors.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:569","path":"/app/Http/Controllers/AuthorController.php"},"/tests/Feature/Controllers/AuthorControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Author;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AuthorControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_authors(): void\n    {\n        $authors = Author::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('authors.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.authors.index')\n            ->assertViewHas('authors');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_author(): void\n    {\n        $response = $this->get(route('authors.create'));\n\n        $response->assertOk()->assertViewIs('app.authors.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_author(): void\n    {\n        $data = Author::factory()\n            ->make()\n            ->toArray();\n\n        $data['social'] = json_encode($data['social']);\n\n        $response = $this->post(route('authors.store'), $data);\n\n        $data['social'] = $this->castToJson($data['social']);\n\n        $this->assertDatabaseHas('authors', $data);\n\n        $author = Author::latest('id')->first();\n\n        $response->assertRedirect(route('authors.edit', $author));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_author(): void\n    {\n        $author = Author::factory()->create();\n\n        $response = $this->get(route('authors.show', $author));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.authors.show')\n            ->assertViewHas('author');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_author(): void\n    {\n        $author = Author::factory()->create();\n\n        $response = $this->get(route('authors.edit', $author));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.authors.edit')\n            ->assertViewHas('author');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_author(): void\n    {\n        $author = Author::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'salutation' => $this->faker->text(255),\n            'title' => $this->faker->sentence(10),\n            'name' => $this->faker->name(),\n            'full_name' => $this->faker->text(255),\n            'first_name' => $this->faker->firstName(),\n            'last_name' => $this->faker->lastName(),\n            'mail_address' => $this->faker->text(255),\n            'website' => $this->faker->text(255),\n            'address' => $this->faker->text(),\n            'social' => [],\n            'user_id' => $user->id,\n        ];\n\n        $data['social'] = json_encode($data['social']);\n\n        $response = $this->put(route('authors.update', $author), $data);\n\n        $data['id'] = $author->id;\n\n        $data['social'] = $this->castToJson($data['social']);\n\n        $this->assertDatabaseHas('authors', $data);\n\n        $response->assertRedirect(route('authors.edit', $author));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_author(): void\n    {\n        $author = Author::factory()->create();\n\n        $response = $this->delete(route('authors.destroy', $author));\n\n        $response->assertRedirect(route('authors.index'));\n\n        $this->assertSoftDeleted($author);\n    }\n}\n","module":"crud:569","path":"/tests/Feature/Controllers/AuthorControllerTest.php"},"/resources/views/app/authors/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.authors.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('authors.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('authors.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.authors.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('authors.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:569","path":"/resources/views/app/authors/create.blade.php"},"/resources/views/app/authors/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.authors.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('authors.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('authors.update', $author) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.authors.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('authors.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('authors.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:569","path":"/resources/views/app/authors/edit.blade.php"},"/resources/views/app/authors/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($author) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"user_id\" label=\"User\" required>\n            @php $selected = old('user_id', ($editing ? $author->user_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the User</option>\n            @foreach($users as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"salutation\"\n            label=\"Salutation\"\n            :value=\"old('salutation', ($editing ? $author->salutation : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Salutation\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $author->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $author->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"full_name\"\n            label=\"Full Name\"\n            :value=\"old('full_name', ($editing ? $author->full_name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Full Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"first_name\"\n            label=\"First Name\"\n            :value=\"old('first_name', ($editing ? $author->first_name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"First Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"last_name\"\n            label=\"Last Name\"\n            :value=\"old('last_name', ($editing ? $author->last_name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Last Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"mail_address\"\n            label=\"Mail Address\"\n            :value=\"old('mail_address', ($editing ? $author->mail_address : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Mail Address\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"website\"\n            label=\"Website\"\n            :value=\"old('website', ($editing ? $author->website : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Website\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"address\"\n            label=\"Address\"\n            maxlength=\"255\"\n            required\n            >{{ old('address', ($editing ? $author->address : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"social\" label=\"Social\" maxlength=\"255\" required\n            >{{ old('social', ($editing ? json_encode($author->social) : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:569","path":"/resources/views/app/authors/form-inputs.blade.php"},"/resources/views/app/authors/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.authors.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('authors.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.user_id')\n                        </h5>\n                        <span>{{ optional($author->user)->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.salutation')\n                        </h5>\n                        <span>{{ $author->salutation ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.title')\n                        </h5>\n                        <span>{{ $author->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.name')\n                        </h5>\n                        <span>{{ $author->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.full_name')\n                        </h5>\n                        <span>{{ $author->full_name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.first_name')\n                        </h5>\n                        <span>{{ $author->first_name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.last_name')\n                        </h5>\n                        <span>{{ $author->last_name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.mail_address')\n                        </h5>\n                        <span>{{ $author->mail_address ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.website')\n                        </h5>\n                        <span>{{ $author->website ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.address')\n                        </h5>\n                        <span>{{ $author->address ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.authors.inputs.social')\n                        </h5>\n                        <pre>{{ json_encode($author->social) ?? '-' }}</pre>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('authors.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Author::class)\n                    <a href=\"{{ route('authors.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:569","path":"/resources/views/app/authors/show.blade.php"},"/resources/views/app/authors/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.authors.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Author::class)\n                            <a\n                                href=\"{{ route('authors.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.user_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.salutation')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.full_name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.first_name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.last_name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.mail_address')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.website')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.address')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.authors.inputs.social')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($authors as $author)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($author->user)->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->salutation ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->full_name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->first_name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->last_name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->mail_address ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->website ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $author->address ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($author->social) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $author)\n                                        <a\n                                            href=\"{{ route('authors.edit', $author) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $author)\n                                        <a\n                                            href=\"{{ route('authors.show', $author) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $author)\n                                        <form\n                                            action=\"{{ route('authors.destroy', $author) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"12\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"12\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $authors->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:569","path":"/resources/views/app/authors/index.blade.php"},"/app/Http/Requests/UserStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users,email', 'email'],\n            'password' => ['required'],\n            'whitelist_id' => ['required', 'exists:whitelists,id'],\n        ];\n    }\n}\n","module":"crud:570","path":"/app/Http/Requests/UserStoreRequest.php"},"/app/Http/Requests/UserUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => [\n                'required',\n                Rule::unique('users', 'email')->ignore($this->user),\n                'email',\n            ],\n            'password' => ['nullable'],\n            'whitelist_id' => ['required', 'exists:whitelists,id'],\n        ];\n    }\n}\n","module":"crud:570","path":"/app/Http/Requests/UserUpdateRequest.php"},"/app/Http/Controllers/UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\View\\View;\nuse App\\Models\\Whitelist;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.users.index', compact('users', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', User::class);\n\n        $whitelists = Whitelist::pluck('comment', 'id');\n\n        return view('app.users.create', compact('whitelists'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(UserStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, User $user): View\n    {\n        $this->authorize('view', $user);\n\n        return view('app.users.show', compact('user'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, User $user): View\n    {\n        $this->authorize('update', $user);\n\n        $whitelists = Whitelist::pluck('comment', 'id');\n\n        return view('app.users.edit', compact('user', 'whitelists'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        UserUpdateRequest $request,\n        User $user\n    ): RedirectResponse {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, User $user): RedirectResponse\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return redirect()\n            ->route('users.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:570","path":"/app/Http/Controllers/UserController.php"},"/tests/Feature/Controllers/UserControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\n\nuse App\\Models\\Whitelist;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_users(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('users.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.index')\n            ->assertViewHas('users');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user(): void\n    {\n        $response = $this->get(route('users.create'));\n\n        $response->assertOk()->assertViewIs('app.users.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->post(route('users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $user = User::latest('id')->first();\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.show', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.show')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.edit', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.edit')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $whitelist = Whitelist::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'whitelist_id' => $whitelist->id,\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->put(route('users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->delete(route('users.destroy', $user));\n\n        $response->assertRedirect(route('users.index'));\n\n        $this->assertModelMissing($user);\n    }\n}\n","module":"crud:570","path":"/tests/Feature/Controllers/UserControllerTest.php"},"/resources/views/app/users/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('users.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:570","path":"/resources/views/app/users/create.blade.php"},"/resources/views/app/users/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('users.update', $user) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('users.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:570","path":"/resources/views/app/users/edit.blade.php"},"/resources/views/app/users/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($user) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $user->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.email\n            name=\"email\"\n            label=\"Email\"\n            :value=\"old('email', ($editing ? $user->email : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Email\"\n            required\n        ></x-inputs.email>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.password\n            name=\"password\"\n            label=\"Password\"\n            maxlength=\"255\"\n            placeholder=\"Password\"\n            :required=\"!$editing\"\n        ></x-inputs.password>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"whitelist_id\" label=\"Whitelist\" required>\n            @php $selected = old('whitelist_id', ($editing ? $user->whitelist_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Whitelist</option>\n            @foreach($whitelists as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n</div>\n","module":"crud:570","path":"/resources/views/app/users/form-inputs.blade.php"},"/resources/views/app/users/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.name')\n                        </h5>\n                        <span>{{ $user->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.email')\n                        </h5>\n                        <span>{{ $user->email ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.whitelist_id')\n                        </h5>\n                        <span\n                            >{{ optional($user->whitelist)->comment ?? '-'\n                            }}</span\n                        >\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('users.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\User::class)\n                    <a href=\"{{ route('users.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:570","path":"/resources/views/app/users/show.blade.php"},"/resources/views/app/users/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\User::class)\n                            <a\n                                href=\"{{ route('users.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.email')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.whitelist_id')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($users as $user)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->email ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($user->whitelist)->comment ??\n                                    '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $user)\n                                        <a\n                                            href=\"{{ route('users.edit', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $user)\n                                        <a\n                                            href=\"{{ route('users.show', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $user)\n                                        <form\n                                            action=\"{{ route('users.destroy', $user) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $users->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:570","path":"/resources/views/app/users/index.blade.php"},"/app/Http/Requests/CommentStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CommentStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['required', 'max:255', 'string'],\n            'translations' => ['required', 'max:255', 'json'],\n            'parent_id' => ['nullable', 'exists:comments,id'],\n            'author_id' => ['nullable', 'exists:authors,id'],\n            'is_from_author' => ['nullable', 'boolean'],\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'email'],\n            'avatar' => ['nullable', 'file'],\n        ];\n    }\n}\n","module":"crud:571","path":"/app/Http/Requests/CommentStoreRequest.php"},"/app/Http/Requests/CommentUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CommentUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['required', 'max:255', 'string'],\n            'translations' => ['required', 'max:255', 'json'],\n            'parent_id' => ['nullable', 'exists:comments,id'],\n            'author_id' => ['nullable', 'exists:authors,id'],\n            'is_from_author' => ['nullable', 'boolean'],\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'email'],\n            'avatar' => ['nullable', 'file'],\n        ];\n    }\n}\n","module":"crud:571","path":"/app/Http/Requests/CommentUpdateRequest.php"},"/app/Http/Controllers/CommentController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Author;\nuse App\\Models\\Comment;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\CommentStoreRequest;\nuse App\\Http\\Requests\\CommentUpdateRequest;\n\nclass CommentController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Comment::class);\n\n        $search = $request->get('search', '');\n\n        $comments = Comment::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.comments.index', compact('comments', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Comment::class);\n\n        $comments = Comment::pluck('title', 'id');\n        $authors = Author::pluck('title', 'id');\n\n        return view('app.comments.create', compact('comments', 'authors'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(CommentStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Comment::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('avatar')) {\n            $validated['avatar'] = $request->file('avatar')->store('public');\n        }\n\n        $validated['translations'] = json_decode(\n            $validated['translations'],\n            true\n        );\n\n        $comment = Comment::create($validated);\n\n        return redirect()\n            ->route('comments.edit', $comment)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Comment $comment): View\n    {\n        $this->authorize('view', $comment);\n\n        return view('app.comments.show', compact('comment'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Comment $comment): View\n    {\n        $this->authorize('update', $comment);\n\n        $comments = Comment::pluck('title', 'id');\n        $authors = Author::pluck('title', 'id');\n\n        return view(\n            'app.comments.edit',\n            compact('comment', 'comments', 'authors')\n        );\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        CommentUpdateRequest $request,\n        Comment $comment\n    ): RedirectResponse {\n        $this->authorize('update', $comment);\n\n        $validated = $request->validated();\n        if ($request->hasFile('avatar')) {\n            if ($comment->avatar) {\n                Storage::delete($comment->avatar);\n            }\n\n            $validated['avatar'] = $request->file('avatar')->store('public');\n        }\n\n        $validated['translations'] = json_decode(\n            $validated['translations'],\n            true\n        );\n\n        $comment->update($validated);\n\n        return redirect()\n            ->route('comments.edit', $comment)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Comment $comment\n    ): RedirectResponse {\n        $this->authorize('delete', $comment);\n\n        if ($comment->avatar) {\n            Storage::delete($comment->avatar);\n        }\n\n        $comment->delete();\n\n        return redirect()\n            ->route('comments.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:571","path":"/app/Http/Controllers/CommentController.php"},"/tests/Feature/Controllers/CommentControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Comment;\n\nuse App\\Models\\Author;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CommentControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_comments(): void\n    {\n        $comments = Comment::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('comments.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.comments.index')\n            ->assertViewHas('comments');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_comment(): void\n    {\n        $response = $this->get(route('comments.create'));\n\n        $response->assertOk()->assertViewIs('app.comments.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_comment(): void\n    {\n        $data = Comment::factory()\n            ->make()\n            ->toArray();\n\n        $data['translations'] = json_encode($data['translations']);\n\n        $response = $this->post(route('comments.store'), $data);\n\n        $data['translations'] = $this->castToJson($data['translations']);\n\n        $this->assertDatabaseHas('comments', $data);\n\n        $comment = Comment::latest('id')->first();\n\n        $response->assertRedirect(route('comments.edit', $comment));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_comment(): void\n    {\n        $comment = Comment::factory()->create();\n\n        $response = $this->get(route('comments.show', $comment));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.comments.show')\n            ->assertViewHas('comment');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_comment(): void\n    {\n        $comment = Comment::factory()->create();\n\n        $response = $this->get(route('comments.edit', $comment));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.comments.edit')\n            ->assertViewHas('comment');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_comment(): void\n    {\n        $comment = Comment::factory()->create();\n\n        $comment = Comment::factory()->create();\n        $author = Author::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'translations' => [],\n            'is_from_author' => $this->faker->boolean(),\n            'name' => $this->faker->name(),\n            'email' => $this->faker->email(),\n            'parent_id' => $comment->id,\n            'author_id' => $author->id,\n        ];\n\n        $data['translations'] = json_encode($data['translations']);\n\n        $response = $this->put(route('comments.update', $comment), $data);\n\n        $data['id'] = $comment->id;\n\n        $data['translations'] = $this->castToJson($data['translations']);\n\n        $this->assertDatabaseHas('comments', $data);\n\n        $response->assertRedirect(route('comments.edit', $comment));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_comment(): void\n    {\n        $comment = Comment::factory()->create();\n\n        $response = $this->delete(route('comments.destroy', $comment));\n\n        $response->assertRedirect(route('comments.index'));\n\n        $this->assertModelMissing($comment);\n    }\n}\n","module":"crud:571","path":"/tests/Feature/Controllers/CommentControllerTest.php"},"/resources/views/app/comments/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.comments.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('comments.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('comments.store') }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.comments.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('comments.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:571","path":"/resources/views/app/comments/create.blade.php"},"/resources/views/app/comments/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.comments.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('comments.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('comments.update', $comment) }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.comments.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('comments.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('comments.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:571","path":"/resources/views/app/comments/edit.blade.php"},"/resources/views/app/comments/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($comment) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $comment->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $comment->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"content\"\n            label=\"Content\"\n            maxlength=\"255\"\n            required\n            >{{ old('content', ($editing ? $comment->content : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"translations\"\n            label=\"Translations\"\n            maxlength=\"255\"\n            required\n            >{{ old('translations', ($editing ?\n            json_encode($comment->translations) : '')) }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"parent_id\" label=\"Comment\">\n            @php $selected = old('parent_id', ($editing ? $comment->parent_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Comment</option>\n            @foreach($comments as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"author_id\" label=\"Author\">\n            @php $selected = old('author_id', ($editing ? $comment->author_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Author</option>\n            @foreach($authors as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"is_from_author\"\n            label=\"Is From Author\"\n            :checked=\"old('is_from_author', ($editing ? $comment->is_from_author : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $comment->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.email\n            name=\"email\"\n            label=\"Email\"\n            :value=\"old('email', ($editing ? $comment->email : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Email\"\n            required\n        ></x-inputs.email>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $comment->avatar ? \\Storage::url($comment->avatar) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"avatar\"\n                label=\"Avatar\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"avatar\"\n                    id=\"avatar\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('avatar') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n</div>\n","module":"crud:571","path":"/resources/views/app/comments/form-inputs.blade.php"},"/resources/views/app/comments/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.comments.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('comments.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.title')\n                        </h5>\n                        <span>{{ $comment->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.slug')\n                        </h5>\n                        <span>{{ $comment->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.content')\n                        </h5>\n                        <span>{{ $comment->content ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.translations')\n                        </h5>\n                        <pre>\n{{ json_encode($comment->translations) ?? '-' }}</pre\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.parent_id')\n                        </h5>\n                        <span\n                            >{{ optional($comment->comment)->title ?? '-'\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.author_id')\n                        </h5>\n                        <span\n                            >{{ optional($comment->author)->title ?? '-'\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.is_from_author')\n                        </h5>\n                        <span>{{ $comment->is_from_author ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.name')\n                        </h5>\n                        <span>{{ $comment->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.email')\n                        </h5>\n                        <span>{{ $comment->email ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.comments.inputs.avatar')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $comment->avatar ? \\Storage::url($comment->avatar) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('comments.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Comment::class)\n                    <a href=\"{{ route('comments.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:571","path":"/resources/views/app/comments/show.blade.php"},"/resources/views/app/comments/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.comments.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Comment::class)\n                            <a\n                                href=\"{{ route('comments.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.content')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.translations')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.parent_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.author_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.is_from_author')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.email')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.comments.inputs.avatar')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($comments as $comment)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $comment->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $comment->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $comment->content ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($comment->translations) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($comment->comment)->title ?? '-'\n                                    }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($comment->author)->title ?? '-'\n                                    }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $comment->is_from_author ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $comment->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $comment->email ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $comment->avatar ? \\Storage::url($comment->avatar) : '' }}\"\n                                    />\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $comment)\n                                        <a\n                                            href=\"{{ route('comments.edit', $comment) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $comment)\n                                        <a\n                                            href=\"{{ route('comments.show', $comment) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $comment)\n                                        <form\n                                            action=\"{{ route('comments.destroy', $comment) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"11\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"11\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $comments->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:571","path":"/resources/views/app/comments/index.blade.php"},"/app/Http/Requests/LanguageStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass LanguageStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'isocode' => ['required', 'max:255', 'string'],\n            'flag' => ['nullable', 'max:255', 'string'],\n            'active' => ['required', 'boolean'],\n            'published' => ['required', 'boolean'],\n        ];\n    }\n}\n","module":"crud:572","path":"/app/Http/Requests/LanguageStoreRequest.php"},"/app/Http/Requests/LanguageUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass LanguageUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'isocode' => ['required', 'max:255', 'string'],\n            'flag' => ['nullable', 'max:255', 'string'],\n            'active' => ['required', 'boolean'],\n            'published' => ['required', 'boolean'],\n        ];\n    }\n}\n","module":"crud:572","path":"/app/Http/Requests/LanguageUpdateRequest.php"},"/app/Http/Controllers/LanguageController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Language;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\LanguageStoreRequest;\nuse App\\Http\\Requests\\LanguageUpdateRequest;\n\nclass LanguageController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Language::class);\n\n        $search = $request->get('search', '');\n\n        $languages = Language::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.languages.index', compact('languages', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Language::class);\n\n        return view('app.languages.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(LanguageStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Language::class);\n\n        $validated = $request->validated();\n\n        $language = Language::create($validated);\n\n        return redirect()\n            ->route('languages.edit', $language)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Language $language): View\n    {\n        $this->authorize('view', $language);\n\n        return view('app.languages.show', compact('language'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Language $language): View\n    {\n        $this->authorize('update', $language);\n\n        return view('app.languages.edit', compact('language'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        LanguageUpdateRequest $request,\n        Language $language\n    ): RedirectResponse {\n        $this->authorize('update', $language);\n\n        $validated = $request->validated();\n\n        $language->update($validated);\n\n        return redirect()\n            ->route('languages.edit', $language)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Language $language\n    ): RedirectResponse {\n        $this->authorize('delete', $language);\n\n        $language->delete();\n\n        return redirect()\n            ->route('languages.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/LanguageController.php"},"/tests/Feature/Controllers/LanguageControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_languages(): void\n    {\n        $languages = Language::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('languages.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.languages.index')\n            ->assertViewHas('languages');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_language(): void\n    {\n        $response = $this->get(route('languages.create'));\n\n        $response->assertOk()->assertViewIs('app.languages.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language(): void\n    {\n        $data = Language::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('languages.store'), $data);\n\n        $this->assertDatabaseHas('languages', $data);\n\n        $language = Language::latest('id')->first();\n\n        $response->assertRedirect(route('languages.edit', $language));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_language(): void\n    {\n        $language = Language::factory()->create();\n\n        $response = $this->get(route('languages.show', $language));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.languages.show')\n            ->assertViewHas('language');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_language(): void\n    {\n        $language = Language::factory()->create();\n\n        $response = $this->get(route('languages.edit', $language));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.languages.edit')\n            ->assertViewHas('language');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_language(): void\n    {\n        $language = Language::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'isocode' => $this->faker->text(255),\n            'active' => $this->faker->boolean(),\n            'published' => $this->faker->boolean(),\n        ];\n\n        $response = $this->put(route('languages.update', $language), $data);\n\n        $data['id'] = $language->id;\n\n        $this->assertDatabaseHas('languages', $data);\n\n        $response->assertRedirect(route('languages.edit', $language));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_language(): void\n    {\n        $language = Language::factory()->create();\n\n        $response = $this->delete(route('languages.destroy', $language));\n\n        $response->assertRedirect(route('languages.index'));\n\n        $this->assertSoftDeleted($language);\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Controllers/LanguageControllerTest.php"},"/resources/views/app/languages/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.languages.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('languages.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('languages.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.languages.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('languages.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:572","path":"/resources/views/app/languages/create.blade.php"},"/resources/views/app/languages/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.languages.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('languages.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('languages.update', $language) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.languages.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('languages.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('languages.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:572","path":"/resources/views/app/languages/edit.blade.php"},"/resources/views/app/languages/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($language) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $language->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $language->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"isocode\"\n            label=\"Isocode\"\n            :value=\"old('isocode', ($editing ? $language->isocode : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Isocode\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"flag\"\n            label=\"Flag\"\n            :value=\"old('flag', ($editing ? $language->flag : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Flag\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"active\"\n            label=\"Active\"\n            :checked=\"old('active', ($editing ? $language->active : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"published\"\n            label=\"Published\"\n            :checked=\"old('published', ($editing ? $language->published : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n</div>\n","module":"crud:572","path":"/resources/views/app/languages/form-inputs.blade.php"},"/resources/views/app/languages/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.languages.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('languages.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.languages.inputs.title')\n                        </h5>\n                        <span>{{ $language->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.languages.inputs.slug')\n                        </h5>\n                        <span>{{ $language->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.languages.inputs.isocode')\n                        </h5>\n                        <span>{{ $language->isocode ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.languages.inputs.flag')\n                        </h5>\n                        <span>{{ $language->flag ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.languages.inputs.active')\n                        </h5>\n                        <span>{{ $language->active ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.languages.inputs.published')\n                        </h5>\n                        <span>{{ $language->published ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('languages.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Language::class)\n                    <a href=\"{{ route('languages.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:572","path":"/resources/views/app/languages/show.blade.php"},"/resources/views/app/languages/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.languages.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Language::class)\n                            <a\n                                href=\"{{ route('languages.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.languages.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.languages.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.languages.inputs.isocode')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.languages.inputs.flag')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.languages.inputs.active')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.languages.inputs.published')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($languages as $language)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $language->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $language->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $language->isocode ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $language->flag ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $language->active ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $language->published ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $language)\n                                        <a\n                                            href=\"{{ route('languages.edit', $language) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $language)\n                                        <a\n                                            href=\"{{ route('languages.show', $language) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $language)\n                                        <form\n                                            action=\"{{ route('languages.destroy', $language) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"7\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"7\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $languages->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:572","path":"/resources/views/app/languages/index.blade.php"},"/app/Http/Requests/CategoryStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CategoryStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'model' => ['nullable', 'max:255', 'string'],\n            'language_id' => ['required', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:categories,id'],\n        ];\n    }\n}\n","module":"crud:573","path":"/app/Http/Requests/CategoryStoreRequest.php"},"/app/Http/Requests/CategoryUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CategoryUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'model' => ['nullable', 'max:255', 'string'],\n            'language_id' => ['required', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:categories,id'],\n        ];\n    }\n}\n","module":"crud:573","path":"/app/Http/Requests/CategoryUpdateRequest.php"},"/app/Http/Controllers/CategoryController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Category;\nuse App\\Models\\Language;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\CategoryStoreRequest;\nuse App\\Http\\Requests\\CategoryUpdateRequest;\n\nclass CategoryController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Category::class);\n\n        $search = $request->get('search', '');\n\n        $categories = Category::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.categories.index', compact('categories', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Category::class);\n\n        $languages = Language::pluck('title', 'id');\n        $categories = Category::pluck('title', 'id');\n\n        return view(\n            'app.categories.create',\n            compact('languages', 'categories')\n        );\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(CategoryStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Category::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $category = Category::create($validated);\n\n        return redirect()\n            ->route('categories.edit', $category)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Category $category): View\n    {\n        $this->authorize('view', $category);\n\n        return view('app.categories.show', compact('category'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Category $category): View\n    {\n        $this->authorize('update', $category);\n\n        $languages = Language::pluck('title', 'id');\n        $categories = Category::pluck('title', 'id');\n\n        return view(\n            'app.categories.edit',\n            compact('category', 'languages', 'categories')\n        );\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        CategoryUpdateRequest $request,\n        Category $category\n    ): RedirectResponse {\n        $this->authorize('update', $category);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            if ($category->image) {\n                Storage::delete($category->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($category->thumbnail) {\n                Storage::delete($category->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $category->update($validated);\n\n        return redirect()\n            ->route('categories.edit', $category)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Category $category\n    ): RedirectResponse {\n        $this->authorize('delete', $category);\n\n        if ($category->image) {\n            Storage::delete($category->image);\n        }\n\n        if ($category->thumbnail) {\n            Storage::delete($category->thumbnail);\n        }\n\n        $category->delete();\n\n        return redirect()\n            ->route('categories.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:573","path":"/app/Http/Controllers/CategoryController.php"},"/tests/Feature/Controllers/CategoryControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Category;\n\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_categories(): void\n    {\n        $categories = Category::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('categories.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.categories.index')\n            ->assertViewHas('categories');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_category(): void\n    {\n        $response = $this->get(route('categories.create'));\n\n        $response->assertOk()->assertViewIs('app.categories.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_category(): void\n    {\n        $data = Category::factory()\n            ->make()\n            ->toArray();\n\n        $data['data'] = json_encode($data['data']);\n\n        $response = $this->post(route('categories.store'), $data);\n\n        $data['data'] = $this->castToJson($data['data']);\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $category = Category::latest('id')->first();\n\n        $response->assertRedirect(route('categories.edit', $category));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $response = $this->get(route('categories.show', $category));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.categories.show')\n            ->assertViewHas('category');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $response = $this->get(route('categories.edit', $category));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.categories.edit')\n            ->assertViewHas('category');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $language = Language::factory()->create();\n        $category = Category::factory()->create();\n\n        $data = [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'model' => $this->faker->text(255),\n            'language_id' => $language->id,\n            'translation_id' => $category->id,\n        ];\n\n        $data['data'] = json_encode($data['data']);\n\n        $response = $this->put(route('categories.update', $category), $data);\n\n        $data['id'] = $category->id;\n\n        $data['data'] = $this->castToJson($data['data']);\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $response->assertRedirect(route('categories.edit', $category));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $response = $this->delete(route('categories.destroy', $category));\n\n        $response->assertRedirect(route('categories.index'));\n\n        $this->assertSoftDeleted($category);\n    }\n}\n","module":"crud:573","path":"/tests/Feature/Controllers/CategoryControllerTest.php"},"/resources/views/app/categories/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.categories.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('categories.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('categories.store') }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.categories.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('categories.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:573","path":"/resources/views/app/categories/create.blade.php"},"/resources/views/app/categories/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.categories.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('categories.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('categories.update', $category) }}\"\n                    has-files\n                    class=\"mt-4\"\n                >\n                    @include('app.categories.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('categories.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('categories.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:573","path":"/resources/views/app/categories/edit.blade.php"},"/resources/views/app/categories/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($category) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"uid\"\n            label=\"Uid\"\n            :value=\"old('uid', ($editing ? $category->uid : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Uid\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $category->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $category->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"content\" label=\"Content\" maxlength=\"255\"\n            >{{ old('content', ($editing ? $category->content : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea name=\"data\" label=\"Data\" maxlength=\"255\"\n            >{{ old('data', ($editing ? json_encode($category->data) : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $category->image ? \\Storage::url($category->image) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"image\"\n                label=\"Image\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"image\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('image') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <div\n            x-data=\"imageViewer('{{ $editing && $category->thumbnail ? \\Storage::url($category->thumbnail) : '' }}')\"\n        >\n            <x-inputs.partials.label\n                name=\"thumbnail\"\n                label=\"Thumbnail\"\n            ></x-inputs.partials.label\n            ><br />\n\n            <!-- Show the image -->\n            <template x-if=\"imageUrl\">\n                <img\n                    :src=\"imageUrl\"\n                    class=\"object-cover rounded border border-gray-200\"\n                    style=\"width: 100px; height: 100px;\"\n                />\n            </template>\n\n            <!-- Show the gray box when image is not available -->\n            <template x-if=\"!imageUrl\">\n                <div\n                    class=\"border rounded border-gray-200 bg-gray-100\"\n                    style=\"width: 100px; height: 100px;\"\n                ></div>\n            </template>\n\n            <div class=\"mt-2\">\n                <input\n                    type=\"file\"\n                    name=\"thumbnail\"\n                    id=\"thumbnail\"\n                    @change=\"fileChosen\"\n                />\n            </div>\n\n            @error('thumbnail') @include('components.inputs.partials.error')\n            @enderror\n        </div>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"model\" label=\"Limited to\">\n            @php $selected = old('model', ($editing ? $category->model : '')) @endphp\n            <option value=\"posts\" {{ $selected == 'posts' ? 'selected' : '' }} >Blog</option>\n            <option value=\"pages\" {{ $selected == 'pages' ? 'selected' : '' }} >Page</option>\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"language_id\" label=\"Language\" required>\n            @php $selected = old('language_id', ($editing ? $category->language_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Language</option>\n            @foreach($languages as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"translation_id\" label=\"Translation\">\n            @php $selected = old('translation_id', ($editing ? $category->translation_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Category</option>\n            @foreach($categories as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n</div>\n","module":"crud:573","path":"/resources/views/app/categories/form-inputs.blade.php"},"/resources/views/app/categories/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.categories.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('categories.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.uid')\n                        </h5>\n                        <span>{{ $category->uid ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.title')\n                        </h5>\n                        <span>{{ $category->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.slug')\n                        </h5>\n                        <span>{{ $category->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.content')\n                        </h5>\n                        <span>{{ $category->content ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.data')\n                        </h5>\n                        <pre>{{ json_encode($category->data) ?? '-' }}</pre>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.image')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $category->image ? \\Storage::url($category->image) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.thumbnail')\n                        </h5>\n                        <x-partials.thumbnail\n                            src=\"{{ $category->thumbnail ? \\Storage::url($category->thumbnail) : '' }}\"\n                            size=\"150\"\n                        />\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.model')\n                        </h5>\n                        <span>{{ $category->model ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.language_id')\n                        </h5>\n                        <span\n                            >{{ optional($category->language)->title ?? '-'\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.translation_id')\n                        </h5>\n                        <span\n                            >{{ optional($category->translation)->title ?? '-'\n                            }}</span\n                        >\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('categories.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Category::class)\n                    <a href=\"{{ route('categories.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:573","path":"/resources/views/app/categories/show.blade.php"},"/resources/views/app/categories/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.categories.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Category::class)\n                            <a\n                                href=\"{{ route('categories.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.uid')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.content')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.data')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.image')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.thumbnail')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.model')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.language_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.translation_id')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($categories as $category)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $category->uid ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $category->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $category->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $category->content ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($category->data) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $category->image ? \\Storage::url($category->image) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    <x-partials.thumbnail\n                                        src=\"{{ $category->thumbnail ? \\Storage::url($category->thumbnail) : '' }}\"\n                                    />\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $category->model ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($category->language)->title ??\n                                    '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($category->translation)->title\n                                    ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $category)\n                                        <a\n                                            href=\"{{ route('categories.edit', $category) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $category)\n                                        <a\n                                            href=\"{{ route('categories.show', $category) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $category)\n                                        <form\n                                            action=\"{{ route('categories.destroy', $category) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"11\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"11\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $categories->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:573","path":"/resources/views/app/categories/index.blade.php"},"/app/Http/Resources/TagResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass TagResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:293","path":"/app/Http/Resources/TagResource.php"},"/app/Http/Resources/TagCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass TagCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:293","path":"/app/Http/Resources/TagCollection.php"},"/app/Http/Controllers/Api/TagController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Tag;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\TagResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\TagCollection;\nuse App\\Http\\Requests\\TagStoreRequest;\nuse App\\Http\\Requests\\TagUpdateRequest;\nuse Illuminate\\Support\\Facades\\Storage;\n\nclass TagController extends Controller\n{\n    public function index(Request $request): TagCollection\n    {\n        $this->authorize('view-any', Tag::class);\n\n        $search = $request->get('search', '');\n\n        $tags = Tag::search($search)\n            ->latest()\n            ->paginate();\n\n        return new TagCollection($tags);\n    }\n\n    public function store(TagStoreRequest $request): TagResource\n    {\n        $this->authorize('create', Tag::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $tag = Tag::create($validated);\n\n        return new TagResource($tag);\n    }\n\n    public function show(Request $request, Tag $tag): TagResource\n    {\n        $this->authorize('view', $tag);\n\n        return new TagResource($tag);\n    }\n\n    public function update(TagUpdateRequest $request, Tag $tag): TagResource\n    {\n        $this->authorize('update', $tag);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('image')) {\n            if ($tag->image) {\n                Storage::delete($tag->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($tag->thumbnail) {\n                Storage::delete($tag->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $tag->update($validated);\n\n        return new TagResource($tag);\n    }\n\n    public function destroy(Request $request, Tag $tag): Response\n    {\n        $this->authorize('delete', $tag);\n\n        if ($tag->image) {\n            Storage::delete($tag->image);\n        }\n\n        if ($tag->thumbnail) {\n            Storage::delete($tag->thumbnail);\n        }\n\n        $tag->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:564","path":"/app/Http/Controllers/Api/TagController.php"},"/tests/Feature/Api/TagTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\n\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TagTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_tags_list(): void\n    {\n        $tags = Tag::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.tags.index'));\n\n        $response->assertOk()->assertSee($tags[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_tag(): void\n    {\n        $data = Tag::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.tags.store'), $data);\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $language = Language::factory()->create();\n        $tag = Tag::factory()->create();\n\n        $data = [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'weight' => 0,\n            'model' => $this->faker->text(255),\n            'language_id' => $language->id,\n            'translation_id' => $tag->id,\n        ];\n\n        $response = $this->putJson(route('api.tags.update', $tag), $data);\n\n        $data['id'] = $tag->id;\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->deleteJson(route('api.tags.destroy', $tag));\n\n        $this->assertSoftDeleted($tag);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:564","path":"/tests/Feature/Api/TagTest.php"},"/app/Http/Resources/RevisionResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass RevisionResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:338","path":"/app/Http/Resources/RevisionResource.php"},"/app/Http/Resources/RevisionCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass RevisionCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:338","path":"/app/Http/Resources/RevisionCollection.php"},"/app/Http/Controllers/Api/RevisionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Revision;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\RevisionResource;\nuse App\\Http\\Resources\\RevisionCollection;\nuse App\\Http\\Requests\\RevisionStoreRequest;\nuse App\\Http\\Requests\\RevisionUpdateRequest;\n\nclass RevisionController extends Controller\n{\n    public function index(Request $request): RevisionCollection\n    {\n        $this->authorize('view-any', Revision::class);\n\n        $search = $request->get('search', '');\n\n        $revisions = Revision::search($search)\n            ->latest()\n            ->paginate();\n\n        return new RevisionCollection($revisions);\n    }\n\n    public function store(RevisionStoreRequest $request): RevisionResource\n    {\n        $this->authorize('create', Revision::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $validated['categories'] = json_decode($validated['categories'], true);\n\n        $validated['tags'] = json_decode($validated['tags'], true);\n\n        $revision = Revision::create($validated);\n\n        return new RevisionResource($revision);\n    }\n\n    public function show(Request $request, Revision $revision): RevisionResource\n    {\n        $this->authorize('view', $revision);\n\n        return new RevisionResource($revision);\n    }\n\n    public function update(\n        RevisionUpdateRequest $request,\n        Revision $revision\n    ): RevisionResource {\n        $this->authorize('update', $revision);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('image')) {\n            if ($revision->image) {\n                Storage::delete($revision->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($revision->thumbnail) {\n                Storage::delete($revision->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $validated['categories'] = json_decode($validated['categories'], true);\n\n        $validated['tags'] = json_decode($validated['tags'], true);\n\n        $revision->update($validated);\n\n        return new RevisionResource($revision);\n    }\n\n    public function destroy(Request $request, Revision $revision): Response\n    {\n        $this->authorize('delete', $revision);\n\n        if ($revision->image) {\n            Storage::delete($revision->image);\n        }\n\n        if ($revision->thumbnail) {\n            Storage::delete($revision->thumbnail);\n        }\n\n        $revision->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:566","path":"/app/Http/Controllers/Api/RevisionController.php"},"/tests/Feature/Api/RevisionTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Revision;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass RevisionTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_revisions_list(): void\n    {\n        $revisions = Revision::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.revisions.index'));\n\n        $response->assertOk()->assertSee($revisions[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_revision(): void\n    {\n        $data = Revision::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.revisions.store'), $data);\n\n        $this->assertDatabaseHas('revisions', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_revision(): void\n    {\n        $revision = Revision::factory()->create();\n\n        $data = [\n            'revname' => $this->faker->text(255),\n            'revcomment' => $this->faker->text(),\n            'revretention' => $this->faker->dateTime(),\n            'uid' => $this->faker->randomNumber(),\n            'main_category_id' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'short' => $this->faker->text(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'author_id' => $this->faker->randomNumber(),\n            'language_id' => $this->faker->randomNumber(),\n            'translation_id' => $this->faker->randomNumber(),\n            'categories' => [],\n            'tags' => [],\n        ];\n\n        $response = $this->putJson(\n            route('api.revisions.update', $revision),\n            $data\n        );\n\n        $data['id'] = $revision->id;\n\n        $this->assertDatabaseHas('revisions', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_revision(): void\n    {\n        $revision = Revision::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.revisions.destroy', $revision)\n        );\n\n        $this->assertSoftDeleted($revision);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:566","path":"/tests/Feature/Api/RevisionTest.php"},"/app/Http/Resources/PostResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass PostResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:305","path":"/app/Http/Resources/PostResource.php"},"/app/Http/Resources/PostCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass PostCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:305","path":"/app/Http/Resources/PostCollection.php"},"/app/Http/Controllers/Api/PostController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Post;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\PostResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PostCollection;\nuse App\\Http\\Requests\\PostStoreRequest;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Requests\\PostUpdateRequest;\n\nclass PostController extends Controller\n{\n    public function index(Request $request): PostCollection\n    {\n        $this->authorize('view-any', Post::class);\n\n        $search = $request->get('search', '');\n\n        $posts = Post::search($search)\n            ->latest()\n            ->paginate();\n\n        return new PostCollection($posts);\n    }\n\n    public function store(PostStoreRequest $request): PostResource\n    {\n        $this->authorize('create', Post::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $post = Post::create($validated);\n\n        return new PostResource($post);\n    }\n\n    public function show(Request $request, Post $post): PostResource\n    {\n        $this->authorize('view', $post);\n\n        return new PostResource($post);\n    }\n\n    public function update(PostUpdateRequest $request, Post $post): PostResource\n    {\n        $this->authorize('update', $post);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('image')) {\n            if ($post->image) {\n                Storage::delete($post->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($post->thumbnail) {\n                Storage::delete($post->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $post->update($validated);\n\n        return new PostResource($post);\n    }\n\n    public function destroy(Request $request, Post $post): Response\n    {\n        $this->authorize('delete', $post);\n\n        if ($post->image) {\n            Storage::delete($post->image);\n        }\n\n        if ($post->thumbnail) {\n            Storage::delete($post->thumbnail);\n        }\n\n        $post->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:567","path":"/app/Http/Controllers/Api/PostController.php"},"/tests/Feature/Api/PostTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Post;\n\nuse App\\Models\\Author;\nuse App\\Models\\Language;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass PostTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_posts_list(): void\n    {\n        $posts = Post::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.posts.index'));\n\n        $response->assertOk()->assertSee($posts[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_post(): void\n    {\n        $data = Post::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.posts.store'), $data);\n\n        $this->assertDatabaseHas('posts', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_post(): void\n    {\n        $post = Post::factory()->create();\n\n        $language = Language::factory()->create();\n        $author = Author::factory()->create();\n        $post = Post::factory()->create();\n        $category = Category::factory()->create();\n\n        $data = [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'short' => $this->faker->text(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'image' => $this->faker->text(255),\n            'language_id' => $language->id,\n            'author_id' => $author->id,\n            'translation_id' => $post->id,\n            'main_category_id' => $category->id,\n        ];\n\n        $response = $this->putJson(route('api.posts.update', $post), $data);\n\n        $data['id'] = $post->id;\n\n        $this->assertDatabaseHas('posts', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_post(): void\n    {\n        $post = Post::factory()->create();\n\n        $response = $this->deleteJson(route('api.posts.destroy', $post));\n\n        $this->assertSoftDeleted($post);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:567","path":"/tests/Feature/Api/PostTest.php"},"/app/Http/Resources/AuthorResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass AuthorResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:306","path":"/app/Http/Resources/AuthorResource.php"},"/app/Http/Resources/AuthorCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass AuthorCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:306","path":"/app/Http/Resources/AuthorCollection.php"},"/app/Http/Controllers/Api/AuthorController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Author;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\AuthorResource;\nuse App\\Http\\Resources\\AuthorCollection;\nuse App\\Http\\Requests\\AuthorStoreRequest;\nuse App\\Http\\Requests\\AuthorUpdateRequest;\n\nclass AuthorController extends Controller\n{\n    public function index(Request $request): AuthorCollection\n    {\n        $this->authorize('view-any', Author::class);\n\n        $search = $request->get('search', '');\n\n        $authors = Author::search($search)\n            ->latest()\n            ->paginate();\n\n        return new AuthorCollection($authors);\n    }\n\n    public function store(AuthorStoreRequest $request): AuthorResource\n    {\n        $this->authorize('create', Author::class);\n\n        $validated = $request->validated();\n        $validated['social'] = json_decode($validated['social'], true);\n\n        $author = Author::create($validated);\n\n        return new AuthorResource($author);\n    }\n\n    public function show(Request $request, Author $author): AuthorResource\n    {\n        $this->authorize('view', $author);\n\n        return new AuthorResource($author);\n    }\n\n    public function update(\n        AuthorUpdateRequest $request,\n        Author $author\n    ): AuthorResource {\n        $this->authorize('update', $author);\n\n        $validated = $request->validated();\n\n        $validated['social'] = json_decode($validated['social'], true);\n\n        $author->update($validated);\n\n        return new AuthorResource($author);\n    }\n\n    public function destroy(Request $request, Author $author): Response\n    {\n        $this->authorize('delete', $author);\n\n        $author->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:569","path":"/app/Http/Controllers/Api/AuthorController.php"},"/tests/Feature/Api/AuthorTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Author;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AuthorTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_authors_list(): void\n    {\n        $authors = Author::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.authors.index'));\n\n        $response->assertOk()->assertSee($authors[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_author(): void\n    {\n        $data = Author::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.authors.store'), $data);\n\n        $this->assertDatabaseHas('authors', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_author(): void\n    {\n        $author = Author::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'salutation' => $this->faker->text(255),\n            'title' => $this->faker->sentence(10),\n            'name' => $this->faker->name(),\n            'full_name' => $this->faker->text(255),\n            'first_name' => $this->faker->firstName(),\n            'last_name' => $this->faker->lastName(),\n            'mail_address' => $this->faker->text(255),\n            'website' => $this->faker->text(255),\n            'address' => $this->faker->text(),\n            'social' => [],\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->putJson(route('api.authors.update', $author), $data);\n\n        $data['id'] = $author->id;\n\n        $this->assertDatabaseHas('authors', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_author(): void\n    {\n        $author = Author::factory()->create();\n\n        $response = $this->deleteJson(route('api.authors.destroy', $author));\n\n        $this->assertSoftDeleted($author);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:569","path":"/tests/Feature/Api/AuthorTest.php"},"/app/Http/Controllers/Api/AuthorPostsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Author;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\PostResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PostCollection;\n\nclass AuthorPostsController extends Controller\n{\n    public function index(Request $request, Author $author): PostCollection\n    {\n        $this->authorize('view', $author);\n\n        $search = $request->get('search', '');\n\n        $posts = $author\n            ->posts()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new PostCollection($posts);\n    }\n\n    public function store(Request $request, Author $author): PostResource\n    {\n        $this->authorize('create', Post::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'language_id' => ['nullable', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:posts,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $post = $author->posts()->create($validated);\n\n        return new PostResource($post);\n    }\n}\n","module":"crud:569","path":"/app/Http/Controllers/Api/AuthorPostsController.php"},"/tests/Feature/Api/AuthorPostsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Post;\nuse App\\Models\\Author;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AuthorPostsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_author_posts(): void\n    {\n        $author = Author::factory()->create();\n        $posts = Post::factory()\n            ->count(2)\n            ->create([\n                'author_id' => $author->id,\n            ]);\n\n        $response = $this->getJson(route('api.authors.posts.index', $author));\n\n        $response->assertOk()->assertSee($posts[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_author_posts(): void\n    {\n        $author = Author::factory()->create();\n        $data = Post::factory()\n            ->make([\n                'author_id' => $author->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.authors.posts.store', $author),\n            $data\n        );\n\n        $this->assertDatabaseHas('posts', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $post = Post::latest('id')->first();\n\n        $this->assertEquals($author->id, $post->author_id);\n    }\n}\n","module":"crud:569","path":"/tests/Feature/Api/AuthorPostsTest.php"},"/app/Http/Resources/PageResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass PageResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:296","path":"/app/Http/Resources/PageResource.php"},"/app/Http/Resources/PageCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass PageCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:296","path":"/app/Http/Resources/PageCollection.php"},"/app/Http/Controllers/Api/AuthorPagesController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Author;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\PageResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PageCollection;\n\nclass AuthorPagesController extends Controller\n{\n    public function index(Request $request, Author $author): PageCollection\n    {\n        $this->authorize('view', $author);\n\n        $search = $request->get('search', '');\n\n        $pages = $author\n            ->pages()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new PageCollection($pages);\n    }\n\n    public function store(Request $request, Author $author): PageResource\n    {\n        $this->authorize('create', Page::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'language_id' => ['nullable', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:pages,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $page = $author->pages()->create($validated);\n\n        return new PageResource($page);\n    }\n}\n","module":"crud:569","path":"/app/Http/Controllers/Api/AuthorPagesController.php"},"/tests/Feature/Api/AuthorPagesTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Page;\nuse App\\Models\\Author;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AuthorPagesTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_author_pages(): void\n    {\n        $author = Author::factory()->create();\n        $pages = Page::factory()\n            ->count(2)\n            ->create([\n                'author_id' => $author->id,\n            ]);\n\n        $response = $this->getJson(route('api.authors.pages.index', $author));\n\n        $response->assertOk()->assertSee($pages[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_author_pages(): void\n    {\n        $author = Author::factory()->create();\n        $data = Page::factory()\n            ->make([\n                'author_id' => $author->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.authors.pages.store', $author),\n            $data\n        );\n\n        unset($data['uid']);\n        unset($data['main_category_id']);\n        unset($data['title']);\n        unset($data['slug']);\n        unset($data['short']);\n        unset($data['content']);\n        unset($data['data']);\n        unset($data['image']);\n        unset($data['thumbnail']);\n        unset($data['author_id']);\n        unset($data['language_id']);\n        unset($data['translation_id']);\n\n        $this->assertDatabaseHas('pages', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $page = Page::latest('id')->first();\n\n        $this->assertEquals($author->id, $page->author_id);\n    }\n}\n","module":"crud:569","path":"/tests/Feature/Api/AuthorPagesTest.php"},"/app/Http/Resources/ProductResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass ProductResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:320","path":"/app/Http/Resources/ProductResource.php"},"/app/Http/Resources/ProductCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass ProductCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:320","path":"/app/Http/Resources/ProductCollection.php"},"/app/Http/Controllers/Api/AuthorProductsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Author;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ProductResource;\nuse App\\Http\\Resources\\ProductCollection;\n\nclass AuthorProductsController extends Controller\n{\n    public function index(Request $request, Author $author): ProductCollection\n    {\n        $this->authorize('view', $author);\n\n        $search = $request->get('search', '');\n\n        $products = $author\n            ->products()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ProductCollection($products);\n    }\n\n    public function store(Request $request, Author $author): ProductResource\n    {\n        $this->authorize('create', Product::class);\n\n        $validated = $request->validate([\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'language_id' => ['required', 'exists:languages,id'],\n        ]);\n\n        $product = $author->products()->create($validated);\n\n        return new ProductResource($product);\n    }\n}\n","module":"crud:569","path":"/app/Http/Controllers/Api/AuthorProductsController.php"},"/tests/Feature/Api/AuthorProductsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Author;\nuse App\\Models\\Product;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AuthorProductsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_author_products(): void\n    {\n        $author = Author::factory()->create();\n        $products = Product::factory()\n            ->count(2)\n            ->create([\n                'author_id' => $author->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.authors.products.index', $author)\n        );\n\n        $response->assertOk()->assertSee($products[0]->id);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_author_products(): void\n    {\n        $author = Author::factory()->create();\n        $data = Product::factory()\n            ->make([\n                'author_id' => $author->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.authors.products.store', $author),\n            $data\n        );\n\n        unset($data['main_category_id']);\n        unset($data['language_id']);\n        unset($data['author_id']);\n\n        $this->assertDatabaseHas('products', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $product = Product::latest('id')->first();\n\n        $this->assertEquals($author->id, $product->author_id);\n    }\n}\n","module":"crud:569","path":"/tests/Feature/Api/AuthorProductsTest.php"},"/app/Http/Resources/ItemResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass ItemResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:324","path":"/app/Http/Resources/ItemResource.php"},"/app/Http/Resources/ItemCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass ItemCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:324","path":"/app/Http/Resources/ItemCollection.php"},"/app/Http/Controllers/Api/AuthorItemsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Author;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\ItemResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass AuthorItemsController extends Controller\n{\n    public function index(Request $request, Author $author): ItemCollection\n    {\n        $this->authorize('view', $author);\n\n        $search = $request->get('search', '');\n\n        $items = $author\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(Request $request, Author $author): ItemResource\n    {\n        $this->authorize('create', Item::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'language_id' => ['required', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:items,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $item = $author->items()->create($validated);\n\n        return new ItemResource($item);\n    }\n}\n","module":"crud:569","path":"/app/Http/Controllers/Api/AuthorItemsController.php"},"/tests/Feature/Api/AuthorItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Author;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AuthorItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_author_items(): void\n    {\n        $author = Author::factory()->create();\n        $items = Item::factory()\n            ->count(2)\n            ->create([\n                'author_id' => $author->id,\n            ]);\n\n        $response = $this->getJson(route('api.authors.items.index', $author));\n\n        $response->assertOk()->assertSee($items[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_author_items(): void\n    {\n        $author = Author::factory()->create();\n        $data = Item::factory()\n            ->make([\n                'author_id' => $author->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.authors.items.store', $author),\n            $data\n        );\n\n        unset($data['uid']);\n        unset($data['main_category_id']);\n        unset($data['title']);\n        unset($data['slug']);\n        unset($data['short']);\n        unset($data['content']);\n        unset($data['data']);\n        unset($data['image']);\n        unset($data['thumbnail']);\n        unset($data['author_id']);\n        unset($data['language_id']);\n        unset($data['translation_id']);\n\n        $this->assertDatabaseHas('items', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $item = Item::latest('id')->first();\n\n        $this->assertEquals($author->id, $item->author_id);\n    }\n}\n","module":"crud:569","path":"/tests/Feature/Api/AuthorItemsTest.php"},"/app/Http/Resources/CommentResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CommentResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:307","path":"/app/Http/Resources/CommentResource.php"},"/app/Http/Resources/CommentCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CommentCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:307","path":"/app/Http/Resources/CommentCollection.php"},"/app/Http/Controllers/Api/AuthorCommentsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Author;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CommentResource;\nuse App\\Http\\Resources\\CommentCollection;\n\nclass AuthorCommentsController extends Controller\n{\n    public function index(Request $request, Author $author): CommentCollection\n    {\n        $this->authorize('view', $author);\n\n        $search = $request->get('search', '');\n\n        $comments = $author\n            ->comments()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CommentCollection($comments);\n    }\n\n    public function store(Request $request, Author $author): CommentResource\n    {\n        $this->authorize('create', Comment::class);\n\n        $validated = $request->validate([\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['required', 'max:255', 'string'],\n            'translations' => ['required', 'max:255', 'json'],\n            'parent_id' => ['nullable', 'exists:comments,id'],\n            'is_from_author' => ['nullable', 'boolean'],\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'email'],\n            'avatar' => ['nullable', 'file'],\n        ]);\n\n        if ($request->hasFile('avatar')) {\n            $validated['avatar'] = $request->file('avatar')->store('public');\n        }\n\n        $comment = $author->comments()->create($validated);\n\n        return new CommentResource($comment);\n    }\n}\n","module":"crud:569","path":"/app/Http/Controllers/Api/AuthorCommentsController.php"},"/tests/Feature/Api/AuthorCommentsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Author;\nuse App\\Models\\Comment;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AuthorCommentsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_author_comments(): void\n    {\n        $author = Author::factory()->create();\n        $comments = Comment::factory()\n            ->count(2)\n            ->create([\n                'author_id' => $author->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.authors.comments.index', $author)\n        );\n\n        $response->assertOk()->assertSee($comments[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_author_comments(): void\n    {\n        $author = Author::factory()->create();\n        $data = Comment::factory()\n            ->make([\n                'author_id' => $author->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.authors.comments.store', $author),\n            $data\n        );\n\n        $this->assertDatabaseHas('comments', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $comment = Comment::latest('id')->first();\n\n        $this->assertEquals($author->id, $comment->author_id);\n    }\n}\n","module":"crud:569","path":"/tests/Feature/Api/AuthorCommentsTest.php"},"/app/Http/Resources/UserResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:291","path":"/app/Http/Resources/UserResource.php"},"/app/Http/Resources/UserCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:291","path":"/app/Http/Resources/UserCollection.php"},"/app/Http/Controllers/Api/UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\UserResource;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Http\\Resources\\UserCollection;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    public function index(Request $request): UserCollection\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate();\n\n        return new UserCollection($users);\n    }\n\n    public function store(UserStoreRequest $request): UserResource\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        return new UserResource($user);\n    }\n\n    public function show(Request $request, User $user): UserResource\n    {\n        $this->authorize('view', $user);\n\n        return new UserResource($user);\n    }\n\n    public function update(UserUpdateRequest $request, User $user): UserResource\n    {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        return new UserResource($user);\n    }\n\n    public function destroy(Request $request, User $user): Response\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:570","path":"/app/Http/Controllers/Api/UserController.php"},"/tests/Feature/Api/UserTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\n\nuse App\\Models\\Whitelist;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_users_list(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.users.index'));\n\n        $response->assertOk()->assertSee($users[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->postJson(route('api.users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $whitelist = Whitelist::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'whitelist_id' => $whitelist->id,\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->putJson(route('api.users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n        unset($data['two_factor_confirmed_at']);\n        unset($data['current_team_id']);\n        unset($data['profile_photo_path']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->deleteJson(route('api.users.destroy', $user));\n\n        $this->assertModelMissing($user);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:570","path":"/tests/Feature/Api/UserTest.php"},"/app/Http/Controllers/Api/UserAuthorsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\AuthorResource;\nuse App\\Http\\Resources\\AuthorCollection;\n\nclass UserAuthorsController extends Controller\n{\n    public function index(Request $request, User $user): AuthorCollection\n    {\n        $this->authorize('view', $user);\n\n        $search = $request->get('search', '');\n\n        $authors = $user\n            ->authors()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new AuthorCollection($authors);\n    }\n\n    public function store(Request $request, User $user): AuthorResource\n    {\n        $this->authorize('create', Author::class);\n\n        $validated = $request->validate([\n            'salutation' => ['required', 'max:255', 'string'],\n            'title' => ['required', 'max:255', 'string'],\n            'name' => ['required', 'max:255', 'string'],\n            'full_name' => ['required', 'max:255', 'string'],\n            'first_name' => ['required', 'max:255', 'string'],\n            'last_name' => ['required', 'max:255', 'string'],\n            'mail_address' => ['required', 'max:255', 'string'],\n            'website' => ['required', 'max:255', 'string'],\n            'address' => ['required', 'max:255', 'string'],\n            'social' => ['required', 'max:255', 'json'],\n        ]);\n\n        $author = $user->authors()->create($validated);\n\n        return new AuthorResource($author);\n    }\n}\n","module":"crud:570","path":"/app/Http/Controllers/Api/UserAuthorsController.php"},"/tests/Feature/Api/UserAuthorsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Author;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserAuthorsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_user_authors(): void\n    {\n        $user = User::factory()->create();\n        $authors = Author::factory()\n            ->count(2)\n            ->create([\n                'user_id' => $user->id,\n            ]);\n\n        $response = $this->getJson(route('api.users.authors.index', $user));\n\n        $response->assertOk()->assertSee($authors[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_authors(): void\n    {\n        $user = User::factory()->create();\n        $data = Author::factory()\n            ->make([\n                'user_id' => $user->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.users.authors.store', $user),\n            $data\n        );\n\n        $this->assertDatabaseHas('authors', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $author = Author::latest('id')->first();\n\n        $this->assertEquals($user->id, $author->user_id);\n    }\n}\n","module":"crud:570","path":"/tests/Feature/Api/UserAuthorsTest.php"},"/app/Http/Resources/BypassTokenResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass BypassTokenResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:343","path":"/app/Http/Resources/BypassTokenResource.php"},"/app/Http/Resources/BypassTokenCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass BypassTokenCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:343","path":"/app/Http/Resources/BypassTokenCollection.php"},"/app/Http/Controllers/Api/UserBypassTokensController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\BypassTokenResource;\nuse App\\Http\\Resources\\BypassTokenCollection;\n\nclass UserBypassTokensController extends Controller\n{\n    public function index(Request $request, User $user): BypassTokenCollection\n    {\n        $this->authorize('view', $user);\n\n        $search = $request->get('search', '');\n\n        $bypassTokens = $user\n            ->bypassTokens()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new BypassTokenCollection($bypassTokens);\n    }\n\n    public function store(Request $request, User $user): BypassTokenResource\n    {\n        $this->authorize('create', BypassToken::class);\n\n        $validated = $request->validate([\n            'token' => ['required', 'max:255', 'string'],\n        ]);\n\n        $bypassToken = $user->bypassTokens()->create($validated);\n\n        return new BypassTokenResource($bypassToken);\n    }\n}\n","module":"crud:570","path":"/app/Http/Controllers/Api/UserBypassTokensController.php"},"/tests/Feature/Api/UserBypassTokensTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\BypassToken;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserBypassTokensTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_user_bypass_tokens(): void\n    {\n        $user = User::factory()->create();\n        $bypassTokens = BypassToken::factory()\n            ->count(2)\n            ->create([\n                'user_id' => $user->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.users.bypass-tokens.index', $user)\n        );\n\n        $response->assertOk()->assertSee($bypassTokens[0]->token);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_bypass_tokens(): void\n    {\n        $user = User::factory()->create();\n        $data = BypassToken::factory()\n            ->make([\n                'user_id' => $user->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.users.bypass-tokens.store', $user),\n            $data\n        );\n\n        unset($data['token']);\n        unset($data['user_id']);\n\n        $this->assertDatabaseHas('bypass_tokens', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $bypassToken = BypassToken::latest('id')->first();\n\n        $this->assertEquals($user->id, $bypassToken->user_id);\n    }\n}\n","module":"crud:570","path":"/tests/Feature/Api/UserBypassTokensTest.php"},"/app/Http/Controllers/Api/CommentController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Comment;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CommentResource;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\CommentCollection;\nuse App\\Http\\Requests\\CommentStoreRequest;\nuse App\\Http\\Requests\\CommentUpdateRequest;\n\nclass CommentController extends Controller\n{\n    public function index(Request $request): CommentCollection\n    {\n        $this->authorize('view-any', Comment::class);\n\n        $search = $request->get('search', '');\n\n        $comments = Comment::search($search)\n            ->latest()\n            ->paginate();\n\n        return new CommentCollection($comments);\n    }\n\n    public function store(CommentStoreRequest $request): CommentResource\n    {\n        $this->authorize('create', Comment::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('avatar')) {\n            $validated['avatar'] = $request->file('avatar')->store('public');\n        }\n\n        $validated['translations'] = json_decode(\n            $validated['translations'],\n            true\n        );\n\n        $comment = Comment::create($validated);\n\n        return new CommentResource($comment);\n    }\n\n    public function show(Request $request, Comment $comment): CommentResource\n    {\n        $this->authorize('view', $comment);\n\n        return new CommentResource($comment);\n    }\n\n    public function update(\n        CommentUpdateRequest $request,\n        Comment $comment\n    ): CommentResource {\n        $this->authorize('update', $comment);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('avatar')) {\n            if ($comment->avatar) {\n                Storage::delete($comment->avatar);\n            }\n\n            $validated['avatar'] = $request->file('avatar')->store('public');\n        }\n\n        $validated['translations'] = json_decode(\n            $validated['translations'],\n            true\n        );\n\n        $comment->update($validated);\n\n        return new CommentResource($comment);\n    }\n\n    public function destroy(Request $request, Comment $comment): Response\n    {\n        $this->authorize('delete', $comment);\n\n        if ($comment->avatar) {\n            Storage::delete($comment->avatar);\n        }\n\n        $comment->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:571","path":"/app/Http/Controllers/Api/CommentController.php"},"/tests/Feature/Api/CommentTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Comment;\n\nuse App\\Models\\Author;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CommentTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_comments_list(): void\n    {\n        $comments = Comment::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.comments.index'));\n\n        $response->assertOk()->assertSee($comments[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_comment(): void\n    {\n        $data = Comment::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.comments.store'), $data);\n\n        $this->assertDatabaseHas('comments', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_comment(): void\n    {\n        $comment = Comment::factory()->create();\n\n        $comment = Comment::factory()->create();\n        $author = Author::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'translations' => [],\n            'is_from_author' => $this->faker->boolean(),\n            'name' => $this->faker->name(),\n            'email' => $this->faker->email(),\n            'parent_id' => $comment->id,\n            'author_id' => $author->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.comments.update', $comment),\n            $data\n        );\n\n        $data['id'] = $comment->id;\n\n        $this->assertDatabaseHas('comments', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_comment(): void\n    {\n        $comment = Comment::factory()->create();\n\n        $response = $this->deleteJson(route('api.comments.destroy', $comment));\n\n        $this->assertModelMissing($comment);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:571","path":"/tests/Feature/Api/CommentTest.php"},"/app/Http/Resources/LanguageResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass LanguageResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:308","path":"/app/Http/Resources/LanguageResource.php"},"/app/Http/Resources/LanguageCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass LanguageCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:308","path":"/app/Http/Resources/LanguageCollection.php"},"/app/Http/Controllers/Api/LanguageController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\LanguageResource;\nuse App\\Http\\Resources\\LanguageCollection;\nuse App\\Http\\Requests\\LanguageStoreRequest;\nuse App\\Http\\Requests\\LanguageUpdateRequest;\n\nclass LanguageController extends Controller\n{\n    public function index(Request $request): LanguageCollection\n    {\n        $this->authorize('view-any', Language::class);\n\n        $search = $request->get('search', '');\n\n        $languages = Language::search($search)\n            ->latest()\n            ->paginate();\n\n        return new LanguageCollection($languages);\n    }\n\n    public function store(LanguageStoreRequest $request): LanguageResource\n    {\n        $this->authorize('create', Language::class);\n\n        $validated = $request->validated();\n\n        $language = Language::create($validated);\n\n        return new LanguageResource($language);\n    }\n\n    public function show(Request $request, Language $language): LanguageResource\n    {\n        $this->authorize('view', $language);\n\n        return new LanguageResource($language);\n    }\n\n    public function update(\n        LanguageUpdateRequest $request,\n        Language $language\n    ): LanguageResource {\n        $this->authorize('update', $language);\n\n        $validated = $request->validated();\n\n        $language->update($validated);\n\n        return new LanguageResource($language);\n    }\n\n    public function destroy(Request $request, Language $language): Response\n    {\n        $this->authorize('delete', $language);\n\n        $language->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/Api/LanguageController.php"},"/tests/Feature/Api/LanguageTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_languages_list(): void\n    {\n        $languages = Language::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.languages.index'));\n\n        $response->assertOk()->assertSee($languages[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language(): void\n    {\n        $data = Language::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.languages.store'), $data);\n\n        $this->assertDatabaseHas('languages', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_language(): void\n    {\n        $language = Language::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'isocode' => $this->faker->text(255),\n            'active' => $this->faker->boolean(),\n            'published' => $this->faker->boolean(),\n        ];\n\n        $response = $this->putJson(\n            route('api.languages.update', $language),\n            $data\n        );\n\n        $data['id'] = $language->id;\n\n        $this->assertDatabaseHas('languages', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_language(): void\n    {\n        $language = Language::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.languages.destroy', $language)\n        );\n\n        $this->assertSoftDeleted($language);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Api/LanguageTest.php"},"/app/Http/Controllers/Api/LanguageTagsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\TagResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\TagCollection;\n\nclass LanguageTagsController extends Controller\n{\n    public function index(Request $request, Language $language): TagCollection\n    {\n        $this->authorize('view', $language);\n\n        $search = $request->get('search', '');\n\n        $tags = $language\n            ->tags()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new TagCollection($tags);\n    }\n\n    public function store(Request $request, Language $language): TagResource\n    {\n        $this->authorize('create', Tag::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'weight' => ['nullable', 'numeric'],\n            'model' => ['nullable', 'max:255', 'string'],\n            'translation_id' => ['nullable', 'exists:tags,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $tag = $language->tags()->create($validated);\n\n        return new TagResource($tag);\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/Api/LanguageTagsController.php"},"/tests/Feature/Api/LanguageTagsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageTagsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_language_tags(): void\n    {\n        $language = Language::factory()->create();\n        $tags = Tag::factory()\n            ->count(2)\n            ->create([\n                'language_id' => $language->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.languages.tags.index', $language)\n        );\n\n        $response->assertOk()->assertSee($tags[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language_tags(): void\n    {\n        $language = Language::factory()->create();\n        $data = Tag::factory()\n            ->make([\n                'language_id' => $language->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.languages.tags.store', $language),\n            $data\n        );\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $tag = Tag::latest('id')->first();\n\n        $this->assertEquals($language->id, $tag->language_id);\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Api/LanguageTagsTest.php"},"/app/Http/Controllers/Api/LanguagePostsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\PostResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PostCollection;\n\nclass LanguagePostsController extends Controller\n{\n    public function index(Request $request, Language $language): PostCollection\n    {\n        $this->authorize('view', $language);\n\n        $search = $request->get('search', '');\n\n        $posts = $language\n            ->posts()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new PostCollection($posts);\n    }\n\n    public function store(Request $request, Language $language): PostResource\n    {\n        $this->authorize('create', Post::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'exists:authors,id'],\n            'translation_id' => ['nullable', 'exists:posts,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $post = $language->posts()->create($validated);\n\n        return new PostResource($post);\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/Api/LanguagePostsController.php"},"/tests/Feature/Api/LanguagePostsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Post;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguagePostsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_language_posts(): void\n    {\n        $language = Language::factory()->create();\n        $posts = Post::factory()\n            ->count(2)\n            ->create([\n                'language_id' => $language->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.languages.posts.index', $language)\n        );\n\n        $response->assertOk()->assertSee($posts[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language_posts(): void\n    {\n        $language = Language::factory()->create();\n        $data = Post::factory()\n            ->make([\n                'language_id' => $language->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.languages.posts.store', $language),\n            $data\n        );\n\n        $this->assertDatabaseHas('posts', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $post = Post::latest('id')->first();\n\n        $this->assertEquals($language->id, $post->language_id);\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Api/LanguagePostsTest.php"},"/app/Http/Resources/CategoryResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CategoryResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:292","path":"/app/Http/Resources/CategoryResource.php"},"/app/Http/Resources/CategoryCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CategoryCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:292","path":"/app/Http/Resources/CategoryCollection.php"},"/app/Http/Controllers/Api/LanguageCategoriesController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CategoryResource;\nuse App\\Http\\Resources\\CategoryCollection;\n\nclass LanguageCategoriesController extends Controller\n{\n    public function index(\n        Request $request,\n        Language $language\n    ): CategoryCollection {\n        $this->authorize('view', $language);\n\n        $search = $request->get('search', '');\n\n        $categories = $language\n            ->categories()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CategoryCollection($categories);\n    }\n\n    public function store(\n        Request $request,\n        Language $language\n    ): CategoryResource {\n        $this->authorize('create', Category::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'model' => ['nullable', 'max:255', 'string'],\n            'translation_id' => ['nullable', 'exists:categories,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $category = $language->categories()->create($validated);\n\n        return new CategoryResource($category);\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/Api/LanguageCategoriesController.php"},"/tests/Feature/Api/LanguageCategoriesTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Language;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageCategoriesTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_language_categories(): void\n    {\n        $language = Language::factory()->create();\n        $categories = Category::factory()\n            ->count(2)\n            ->create([\n                'language_id' => $language->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.languages.categories.index', $language)\n        );\n\n        $response->assertOk()->assertSee($categories[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language_categories(): void\n    {\n        $language = Language::factory()->create();\n        $data = Category::factory()\n            ->make([\n                'language_id' => $language->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.languages.categories.store', $language),\n            $data\n        );\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $category = Category::latest('id')->first();\n\n        $this->assertEquals($language->id, $category->language_id);\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Api/LanguageCategoriesTest.php"},"/app/Http/Controllers/Api/LanguagePagesController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\PageResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PageCollection;\n\nclass LanguagePagesController extends Controller\n{\n    public function index(Request $request, Language $language): PageCollection\n    {\n        $this->authorize('view', $language);\n\n        $search = $request->get('search', '');\n\n        $pages = $language\n            ->pages()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new PageCollection($pages);\n    }\n\n    public function store(Request $request, Language $language): PageResource\n    {\n        $this->authorize('create', Page::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'exists:authors,id'],\n            'translation_id' => ['nullable', 'exists:pages,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $page = $language->pages()->create($validated);\n\n        return new PageResource($page);\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/Api/LanguagePagesController.php"},"/tests/Feature/Api/LanguagePagesTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Page;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguagePagesTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_language_pages(): void\n    {\n        $language = Language::factory()->create();\n        $pages = Page::factory()\n            ->count(2)\n            ->create([\n                'language_id' => $language->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.languages.pages.index', $language)\n        );\n\n        $response->assertOk()->assertSee($pages[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language_pages(): void\n    {\n        $language = Language::factory()->create();\n        $data = Page::factory()\n            ->make([\n                'language_id' => $language->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.languages.pages.store', $language),\n            $data\n        );\n\n        unset($data['uid']);\n        unset($data['main_category_id']);\n        unset($data['title']);\n        unset($data['slug']);\n        unset($data['short']);\n        unset($data['content']);\n        unset($data['data']);\n        unset($data['image']);\n        unset($data['thumbnail']);\n        unset($data['author_id']);\n        unset($data['language_id']);\n        unset($data['translation_id']);\n\n        $this->assertDatabaseHas('pages', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $page = Page::latest('id')->first();\n\n        $this->assertEquals($language->id, $page->language_id);\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Api/LanguagePagesTest.php"},"/app/Http/Controllers/Api/LanguageProductsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ProductResource;\nuse App\\Http\\Resources\\ProductCollection;\n\nclass LanguageProductsController extends Controller\n{\n    public function index(\n        Request $request,\n        Language $language\n    ): ProductCollection {\n        $this->authorize('view', $language);\n\n        $search = $request->get('search', '');\n\n        $products = $language\n            ->products()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ProductCollection($products);\n    }\n\n    public function store(Request $request, Language $language): ProductResource\n    {\n        $this->authorize('create', Product::class);\n\n        $validated = $request->validate([\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'author_id' => ['required', 'exists:authors,id'],\n        ]);\n\n        $product = $language->products()->create($validated);\n\n        return new ProductResource($product);\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/Api/LanguageProductsController.php"},"/tests/Feature/Api/LanguageProductsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Product;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageProductsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_language_products(): void\n    {\n        $language = Language::factory()->create();\n        $products = Product::factory()\n            ->count(2)\n            ->create([\n                'language_id' => $language->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.languages.products.index', $language)\n        );\n\n        $response->assertOk()->assertSee($products[0]->id);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language_products(): void\n    {\n        $language = Language::factory()->create();\n        $data = Product::factory()\n            ->make([\n                'language_id' => $language->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.languages.products.store', $language),\n            $data\n        );\n\n        unset($data['main_category_id']);\n        unset($data['language_id']);\n        unset($data['author_id']);\n\n        $this->assertDatabaseHas('products', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $product = Product::latest('id')->first();\n\n        $this->assertEquals($language->id, $product->language_id);\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Api/LanguageProductsTest.php"},"/app/Http/Controllers/Api/LanguageItemsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\ItemResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass LanguageItemsController extends Controller\n{\n    public function index(Request $request, Language $language): ItemCollection\n    {\n        $this->authorize('view', $language);\n\n        $search = $request->get('search', '');\n\n        $items = $language\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(Request $request, Language $language): ItemResource\n    {\n        $this->authorize('create', Item::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'main_category_id' => ['nullable', 'exists:categories,id'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'exists:authors,id'],\n            'translation_id' => ['nullable', 'exists:items,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $item = $language->items()->create($validated);\n\n        return new ItemResource($item);\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/Api/LanguageItemsController.php"},"/tests/Feature/Api/LanguageItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_language_items(): void\n    {\n        $language = Language::factory()->create();\n        $items = Item::factory()\n            ->count(2)\n            ->create([\n                'language_id' => $language->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.languages.items.index', $language)\n        );\n\n        $response->assertOk()->assertSee($items[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_language_items(): void\n    {\n        $language = Language::factory()->create();\n        $data = Item::factory()\n            ->make([\n                'language_id' => $language->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.languages.items.store', $language),\n            $data\n        );\n\n        unset($data['uid']);\n        unset($data['main_category_id']);\n        unset($data['title']);\n        unset($data['slug']);\n        unset($data['short']);\n        unset($data['content']);\n        unset($data['data']);\n        unset($data['image']);\n        unset($data['thumbnail']);\n        unset($data['author_id']);\n        unset($data['language_id']);\n        unset($data['translation_id']);\n\n        $this->assertDatabaseHas('items', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $item = Item::latest('id')->first();\n\n        $this->assertEquals($language->id, $item->language_id);\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Api/LanguageItemsTest.php"},"/app/Http/Resources/CountryResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CountryResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:309","path":"/app/Http/Resources/CountryResource.php"},"/app/Http/Resources/CountryCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CountryCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:309","path":"/app/Http/Resources/CountryCollection.php"},"/app/Http/Controllers/Api/LanguageCountriesController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Country;\nuse App\\Models\\Language;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CountryCollection;\n\nclass LanguageCountriesController extends Controller\n{\n    public function index(\n        Request $request,\n        Language $language\n    ): CountryCollection {\n        $this->authorize('view', $language);\n\n        $search = $request->get('search', '');\n\n        $countries = $language\n            ->countries()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CountryCollection($countries);\n    }\n\n    public function store(\n        Request $request,\n        Language $language,\n        Country $country\n    ): Response {\n        $this->authorize('update', $language);\n\n        $language->countries()->syncWithoutDetaching([$country->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(\n        Request $request,\n        Language $language,\n        Country $country\n    ): Response {\n        $this->authorize('update', $language);\n\n        $language->countries()->detach($country);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:572","path":"/app/Http/Controllers/Api/LanguageCountriesController.php"},"/tests/Feature/Api/LanguageCountriesTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Country;\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass LanguageCountriesTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_language_countries(): void\n    {\n        $language = Language::factory()->create();\n        $country = Country::factory()->create();\n\n        $language->countries()->attach($country);\n\n        $response = $this->getJson(\n            route('api.languages.countries.index', $language)\n        );\n\n        $response->assertOk()->assertSee($country->id);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_countries_to_language(): void\n    {\n        $language = Language::factory()->create();\n        $country = Country::factory()->create();\n\n        $response = $this->postJson(\n            route('api.languages.countries.store', [$language, $country])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $language\n                ->countries()\n                ->where('countries.id', $country->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_countries_from_language(): void\n    {\n        $language = Language::factory()->create();\n        $country = Country::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.languages.countries.store', [$language, $country])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $language\n                ->countries()\n                ->where('countries.id', $country->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:572","path":"/tests/Feature/Api/LanguageCountriesTest.php"},"/app/Http/Controllers/Api/CategoryController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Category;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\CategoryResource;\nuse App\\Http\\Resources\\CategoryCollection;\nuse App\\Http\\Requests\\CategoryStoreRequest;\nuse App\\Http\\Requests\\CategoryUpdateRequest;\n\nclass CategoryController extends Controller\n{\n    public function index(Request $request): CategoryCollection\n    {\n        $this->authorize('view-any', Category::class);\n\n        $search = $request->get('search', '');\n\n        $categories = Category::search($search)\n            ->latest()\n            ->paginate();\n\n        return new CategoryCollection($categories);\n    }\n\n    public function store(CategoryStoreRequest $request): CategoryResource\n    {\n        $this->authorize('create', Category::class);\n\n        $validated = $request->validated();\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $category = Category::create($validated);\n\n        return new CategoryResource($category);\n    }\n\n    public function show(Request $request, Category $category): CategoryResource\n    {\n        $this->authorize('view', $category);\n\n        return new CategoryResource($category);\n    }\n\n    public function update(\n        CategoryUpdateRequest $request,\n        Category $category\n    ): CategoryResource {\n        $this->authorize('update', $category);\n\n        $validated = $request->validated();\n\n        if ($request->hasFile('image')) {\n            if ($category->image) {\n                Storage::delete($category->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            if ($category->thumbnail) {\n                Storage::delete($category->thumbnail);\n            }\n\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $validated['data'] = json_decode($validated['data'], true);\n\n        $category->update($validated);\n\n        return new CategoryResource($category);\n    }\n\n    public function destroy(Request $request, Category $category): Response\n    {\n        $this->authorize('delete', $category);\n\n        if ($category->image) {\n            Storage::delete($category->image);\n        }\n\n        if ($category->thumbnail) {\n            Storage::delete($category->thumbnail);\n        }\n\n        $category->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:573","path":"/app/Http/Controllers/Api/CategoryController.php"},"/tests/Feature/Api/CategoryTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Category;\n\nuse App\\Models\\Language;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_categories_list(): void\n    {\n        $categories = Category::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.categories.index'));\n\n        $response->assertOk()->assertSee($categories[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_category(): void\n    {\n        $data = Category::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.categories.store'), $data);\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $language = Language::factory()->create();\n        $category = Category::factory()->create();\n\n        $data = [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'model' => $this->faker->text(255),\n            'language_id' => $language->id,\n            'translation_id' => $category->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.categories.update', $category),\n            $data\n        );\n\n        $data['id'] = $category->id;\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.categories.destroy', $category)\n        );\n\n        $this->assertSoftDeleted($category);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:573","path":"/tests/Feature/Api/CategoryTest.php"},"/app/Http/Controllers/Api/CategoryPostsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Category;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\PostResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PostCollection;\n\nclass CategoryPostsController extends Controller\n{\n    public function index(Request $request, Category $category): PostCollection\n    {\n        $this->authorize('view', $category);\n\n        $search = $request->get('search', '');\n\n        $posts = $category\n            ->mainCategoryPosts()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new PostCollection($posts);\n    }\n\n    public function store(Request $request, Category $category): PostResource\n    {\n        $this->authorize('create', Post::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'exists:authors,id'],\n            'language_id' => ['nullable', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:posts,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $post = $category->mainCategoryPosts()->create($validated);\n\n        return new PostResource($post);\n    }\n}\n","module":"crud:573","path":"/app/Http/Controllers/Api/CategoryPostsController.php"},"/tests/Feature/Api/CategoryPostsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Post;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryPostsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_category_posts(): void\n    {\n        $category = Category::factory()->create();\n        $posts = Post::factory()\n            ->count(2)\n            ->create([\n                'main_category_id' => $category->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.categories.posts.index', $category)\n        );\n\n        $response->assertOk()->assertSee($posts[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_category_posts(): void\n    {\n        $category = Category::factory()->create();\n        $data = Post::factory()\n            ->make([\n                'main_category_id' => $category->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.categories.posts.store', $category),\n            $data\n        );\n\n        $this->assertDatabaseHas('posts', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $post = Post::latest('id')->first();\n\n        $this->assertEquals($category->id, $post->main_category_id);\n    }\n}\n","module":"crud:573","path":"/tests/Feature/Api/CategoryPostsTest.php"},"/app/Http/Controllers/Api/CategoryItemsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Category;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\ItemResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass CategoryItemsController extends Controller\n{\n    public function index(Request $request, Category $category): ItemCollection\n    {\n        $this->authorize('view', $category);\n\n        $search = $request->get('search', '');\n\n        $items = $category\n            ->mainCategoryItems()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(Request $request, Category $category): ItemResource\n    {\n        $this->authorize('create', Item::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'exists:authors,id'],\n            'language_id' => ['required', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:items,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $item = $category->mainCategoryItems()->create($validated);\n\n        return new ItemResource($item);\n    }\n}\n","module":"crud:573","path":"/app/Http/Controllers/Api/CategoryItemsController.php"},"/tests/Feature/Api/CategoryItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_category_items(): void\n    {\n        $category = Category::factory()->create();\n        $items = Item::factory()\n            ->count(2)\n            ->create([\n                'main_category_id' => $category->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.categories.items.index', $category)\n        );\n\n        $response->assertOk()->assertSee($items[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_category_items(): void\n    {\n        $category = Category::factory()->create();\n        $data = Item::factory()\n            ->make([\n                'main_category_id' => $category->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.categories.items.store', $category),\n            $data\n        );\n\n        unset($data['uid']);\n        unset($data['main_category_id']);\n        unset($data['title']);\n        unset($data['slug']);\n        unset($data['short']);\n        unset($data['content']);\n        unset($data['data']);\n        unset($data['image']);\n        unset($data['thumbnail']);\n        unset($data['author_id']);\n        unset($data['language_id']);\n        unset($data['translation_id']);\n\n        $this->assertDatabaseHas('items', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $item = Item::latest('id')->first();\n\n        $this->assertEquals($category->id, $item->main_category_id);\n    }\n}\n","module":"crud:573","path":"/tests/Feature/Api/CategoryItemsTest.php"},"/app/Http/Controllers/Api/CategoryProductsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Category;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ProductResource;\nuse App\\Http\\Resources\\ProductCollection;\n\nclass CategoryProductsController extends Controller\n{\n    public function index(\n        Request $request,\n        Category $category\n    ): ProductCollection {\n        $this->authorize('view', $category);\n\n        $search = $request->get('search', '');\n\n        $products = $category\n            ->mainCategoryProducts()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ProductCollection($products);\n    }\n\n    public function store(Request $request, Category $category): ProductResource\n    {\n        $this->authorize('create', Product::class);\n\n        $validated = $request->validate([\n            'language_id' => ['required', 'exists:languages,id'],\n            'author_id' => ['required', 'exists:authors,id'],\n        ]);\n\n        $product = $category->mainCategoryProducts()->create($validated);\n\n        return new ProductResource($product);\n    }\n}\n","module":"crud:573","path":"/app/Http/Controllers/Api/CategoryProductsController.php"},"/tests/Feature/Api/CategoryProductsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Product;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryProductsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_category_products(): void\n    {\n        $category = Category::factory()->create();\n        $products = Product::factory()\n            ->count(2)\n            ->create([\n                'main_category_id' => $category->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.categories.products.index', $category)\n        );\n\n        $response->assertOk()->assertSee($products[0]->id);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_category_products(): void\n    {\n        $category = Category::factory()->create();\n        $data = Product::factory()\n            ->make([\n                'main_category_id' => $category->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.categories.products.store', $category),\n            $data\n        );\n\n        unset($data['main_category_id']);\n        unset($data['language_id']);\n        unset($data['author_id']);\n\n        $this->assertDatabaseHas('products', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $product = Product::latest('id')->first();\n\n        $this->assertEquals($category->id, $product->main_category_id);\n    }\n}\n","module":"crud:573","path":"/tests/Feature/Api/CategoryProductsTest.php"},"/app/Http/Controllers/Api/CategoryPagesController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Category;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\PageResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PageCollection;\n\nclass CategoryPagesController extends Controller\n{\n    public function index(Request $request, Category $category): PageCollection\n    {\n        $this->authorize('view', $category);\n\n        $search = $request->get('search', '');\n\n        $pages = $category\n            ->mainCategoryPages()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new PageCollection($pages);\n    }\n\n    public function store(Request $request, Category $category): PageResource\n    {\n        $this->authorize('create', Page::class);\n\n        $validated = $request->validate([\n            'uid' => ['required', 'max:255'],\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'short' => ['nullable', 'max:255', 'string'],\n            'content' => ['nullable', 'max:255', 'string'],\n            'data' => ['nullable', 'max:255', 'json'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'thumbnail' => ['nullable', 'file'],\n            'author_id' => ['required', 'exists:authors,id'],\n            'language_id' => ['nullable', 'exists:languages,id'],\n            'translation_id' => ['nullable', 'exists:pages,id'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        if ($request->hasFile('thumbnail')) {\n            $validated['thumbnail'] = $request\n                ->file('thumbnail')\n                ->store('public');\n        }\n\n        $page = $category->mainCategoryPages()->create($validated);\n\n        return new PageResource($page);\n    }\n}\n","module":"crud:573","path":"/app/Http/Controllers/Api/CategoryPagesController.php"},"/tests/Feature/Api/CategoryPagesTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Page;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryPagesTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_category_pages(): void\n    {\n        $category = Category::factory()->create();\n        $pages = Page::factory()\n            ->count(2)\n            ->create([\n                'main_category_id' => $category->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.categories.pages.index', $category)\n        );\n\n        $response->assertOk()->assertSee($pages[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_category_pages(): void\n    {\n        $category = Category::factory()->create();\n        $data = Page::factory()\n            ->make([\n                'main_category_id' => $category->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.categories.pages.store', $category),\n            $data\n        );\n\n        unset($data['uid']);\n        unset($data['main_category_id']);\n        unset($data['title']);\n        unset($data['slug']);\n        unset($data['short']);\n        unset($data['content']);\n        unset($data['data']);\n        unset($data['image']);\n        unset($data['thumbnail']);\n        unset($data['author_id']);\n        unset($data['language_id']);\n        unset($data['translation_id']);\n\n        $this->assertDatabaseHas('pages', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $page = Page::latest('id')->first();\n\n        $this->assertEquals($category->id, $page->main_category_id);\n    }\n}\n","module":"crud:573","path":"/tests/Feature/Api/CategoryPagesTest.php"},"/lang/en/crud.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'common' => [\n        'actions' => 'Actions',\n        'create' => 'Create',\n        'edit' => 'Edit',\n        'update' => 'Update',\n        'new' => 'New',\n        'cancel' => 'Cancel',\n        'attach' => 'Attach',\n        'detach' => 'Detach',\n        'save' => 'Save',\n        'delete' => 'Delete',\n        'delete_selected' => 'Delete selected',\n        'search' => 'Search...',\n        'back' => 'Back to Index',\n        'are_you_sure' => 'Are you sure?',\n        'no_items_found' => 'No items found',\n        'created' => 'Successfully created',\n        'saved' => 'Saved successfully',\n        'removed' => 'Successfully removed',\n    ],\n\n    'tags' => [\n        'name' => 'Tags',\n        'index_title' => 'Tags List',\n        'new_title' => 'New Tag',\n        'create_title' => 'Create Tag',\n        'edit_title' => 'Edit Tag',\n        'show_title' => 'Show Tag',\n        'inputs' => [\n            'uid' => 'Uid',\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'content' => 'Content',\n            'data' => 'Data',\n            'image' => 'Image',\n            'thumbnail' => 'Thumbnail',\n            'weight' => 'Weight',\n            'model' => 'Model',\n            'language_id' => 'Language',\n            'translation_id' => 'Translation',\n        ],\n    ],\n\n    'revisions' => [\n        'name' => 'Revisions',\n        'index_title' => 'Revisions List',\n        'new_title' => 'New Revision',\n        'create_title' => 'Create Revision',\n        'edit_title' => 'Edit Revision',\n        'show_title' => 'Show Revision',\n        'inputs' => [\n            'revname' => 'Revname',\n            'revcomment' => 'Revcomment',\n            'revretention' => 'Revretention',\n            'uid' => 'Uid',\n            'main_category_id' => 'Main Category Id',\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'short' => 'Short',\n            'content' => 'Content',\n            'data' => 'Data',\n            'image' => 'Image',\n            'thumbnail' => 'Thumbnail',\n            'author_id' => 'Author Id',\n            'language_id' => 'Language Id',\n            'translation_id' => 'Translation Id',\n            'categories' => 'Categories',\n            'tags' => 'Tags',\n        ],\n    ],\n\n    'posts' => [\n        'name' => 'Posts',\n        'index_title' => 'Posts List',\n        'new_title' => 'New Post',\n        'create_title' => 'Create Post',\n        'edit_title' => 'Edit Post',\n        'show_title' => 'Show Post',\n        'inputs' => [\n            'uid' => 'Uid',\n            'main_category_id' => 'Main Category',\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'short' => 'Short',\n            'content' => 'Content',\n            'data' => 'Data',\n            'image' => 'Image',\n            'thumbnail' => 'Thumbnail',\n            'author_id' => 'Author',\n            'language_id' => 'Language',\n            'translation_id' => 'Translation',\n        ],\n    ],\n\n    'authors' => [\n        'name' => 'Authors',\n        'index_title' => 'Authors List',\n        'new_title' => 'New Author',\n        'create_title' => 'Create Author',\n        'edit_title' => 'Edit Author',\n        'show_title' => 'Show Author',\n        'inputs' => [\n            'user_id' => 'User',\n            'salutation' => 'Salutation',\n            'title' => 'Title',\n            'name' => 'Name',\n            'full_name' => 'Full Name',\n            'first_name' => 'First Name',\n            'last_name' => 'Last Name',\n            'mail_address' => 'Mail Address',\n            'website' => 'Website',\n            'address' => 'Address',\n            'social' => 'Social',\n        ],\n    ],\n\n    'users' => [\n        'name' => 'Users',\n        'index_title' => 'Users List',\n        'new_title' => 'New User',\n        'create_title' => 'Create User',\n        'edit_title' => 'Edit User',\n        'show_title' => 'Show User',\n        'inputs' => [\n            'name' => 'Name',\n            'email' => 'Email',\n            'password' => 'Password',\n            'whitelist_id' => 'Whitelist',\n        ],\n    ],\n\n    'comments' => [\n        'name' => 'Comments',\n        'index_title' => 'Comments List',\n        'new_title' => 'New Comment',\n        'create_title' => 'Create Comment',\n        'edit_title' => 'Edit Comment',\n        'show_title' => 'Show Comment',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'content' => 'Content',\n            'translations' => 'Translations',\n            'parent_id' => 'Comment',\n            'author_id' => 'Author',\n            'is_from_author' => 'Is From Author',\n            'name' => 'Name',\n            'email' => 'Email',\n            'avatar' => 'Avatar',\n        ],\n    ],\n\n    'languages' => [\n        'name' => 'Languages',\n        'index_title' => 'Languages List',\n        'new_title' => 'New Language',\n        'create_title' => 'Create Language',\n        'edit_title' => 'Edit Language',\n        'show_title' => 'Show Language',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'isocode' => 'Isocode',\n            'flag' => 'Flag',\n            'active' => 'Active',\n            'published' => 'Published',\n        ],\n    ],\n\n    'categories' => [\n        'name' => 'Categories',\n        'index_title' => 'Categories List',\n        'new_title' => 'New Category',\n        'create_title' => 'Create Category',\n        'edit_title' => 'Edit Category',\n        'show_title' => 'Show Category',\n        'inputs' => [\n            'uid' => 'Uid',\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'content' => 'Content',\n            'data' => 'Data',\n            'image' => 'Image',\n            'thumbnail' => 'Thumbnail',\n            'model' => 'Limited to',\n            'language_id' => 'Language',\n            'translation_id' => 'Translation',\n        ],\n    ],\n];\n","module":"base","path":"/lang/en/crud.php"},"/routes/api.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\TagController;\nuse App\\Http\\Controllers\\Api\\PostController;\nuse App\\Http\\Controllers\\Api\\UserController;\nuse App\\Http\\Controllers\\Api\\AuthController;\nuse App\\Http\\Controllers\\Api\\AuthorController;\nuse App\\Http\\Controllers\\Api\\CommentController;\nuse App\\Http\\Controllers\\Api\\RevisionController;\nuse App\\Http\\Controllers\\Api\\LanguageController;\nuse App\\Http\\Controllers\\Api\\CategoryController;\nuse App\\Http\\Controllers\\Api\\AuthorPostsController;\nuse App\\Http\\Controllers\\Api\\AuthorPagesController;\nuse App\\Http\\Controllers\\Api\\AuthorItemsController;\nuse App\\Http\\Controllers\\Api\\UserAuthorsController;\nuse App\\Http\\Controllers\\Api\\LanguageTagsController;\nuse App\\Http\\Controllers\\Api\\LanguagePostsController;\nuse App\\Http\\Controllers\\Api\\LanguagePagesController;\nuse App\\Http\\Controllers\\Api\\LanguageItemsController;\nuse App\\Http\\Controllers\\Api\\CategoryPostsController;\nuse App\\Http\\Controllers\\Api\\CategoryItemsController;\nuse App\\Http\\Controllers\\Api\\CategoryPagesController;\nuse App\\Http\\Controllers\\Api\\AuthorProductsController;\nuse App\\Http\\Controllers\\Api\\AuthorCommentsController;\nuse App\\Http\\Controllers\\Api\\UserBypassTokensController;\nuse App\\Http\\Controllers\\Api\\LanguageProductsController;\nuse App\\Http\\Controllers\\Api\\CategoryProductsController;\nuse App\\Http\\Controllers\\Api\\LanguageCountriesController;\nuse App\\Http\\Controllers\\Api\\LanguageCategoriesController;\n\n/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n*/\n\nRoute::post('/login', [AuthController::class, 'login'])->name('api.login');\n\nRoute::middleware('auth:sanctum')\n    ->get('/user', function (Request $request) {\n        return $request->user();\n    })\n    ->name('api.user');\n\nRoute::name('api.')\n    ->middleware('auth:sanctum')\n    ->group(function () {\n        Route::apiResource('tags', TagController::class);\n\n        Route::apiResource('revisions', RevisionController::class);\n\n        Route::apiResource('posts', PostController::class);\n\n        Route::apiResource('authors', AuthorController::class);\n\n        // Author Posts\n        Route::get('/authors/{author}/posts', [\n            AuthorPostsController::class,\n            'index',\n        ])->name('authors.posts.index');\n        Route::post('/authors/{author}/posts', [\n            AuthorPostsController::class,\n            'store',\n        ])->name('authors.posts.store');\n\n        // Author Pages\n        Route::get('/authors/{author}/pages', [\n            AuthorPagesController::class,\n            'index',\n        ])->name('authors.pages.index');\n        Route::post('/authors/{author}/pages', [\n            AuthorPagesController::class,\n            'store',\n        ])->name('authors.pages.store');\n\n        // Author Products\n        Route::get('/authors/{author}/products', [\n            AuthorProductsController::class,\n            'index',\n        ])->name('authors.products.index');\n        Route::post('/authors/{author}/products', [\n            AuthorProductsController::class,\n            'store',\n        ])->name('authors.products.store');\n\n        // Author Items\n        Route::get('/authors/{author}/items', [\n            AuthorItemsController::class,\n            'index',\n        ])->name('authors.items.index');\n        Route::post('/authors/{author}/items', [\n            AuthorItemsController::class,\n            'store',\n        ])->name('authors.items.store');\n\n        // Author Comments\n        Route::get('/authors/{author}/comments', [\n            AuthorCommentsController::class,\n            'index',\n        ])->name('authors.comments.index');\n        Route::post('/authors/{author}/comments', [\n            AuthorCommentsController::class,\n            'store',\n        ])->name('authors.comments.store');\n\n        Route::apiResource('users', UserController::class);\n\n        // User Authors\n        Route::get('/users/{user}/authors', [\n            UserAuthorsController::class,\n            'index',\n        ])->name('users.authors.index');\n        Route::post('/users/{user}/authors', [\n            UserAuthorsController::class,\n            'store',\n        ])->name('users.authors.store');\n\n        // User Bypass Tokens\n        Route::get('/users/{user}/bypass-tokens', [\n            UserBypassTokensController::class,\n            'index',\n        ])->name('users.bypass-tokens.index');\n        Route::post('/users/{user}/bypass-tokens', [\n            UserBypassTokensController::class,\n            'store',\n        ])->name('users.bypass-tokens.store');\n\n        Route::apiResource('comments', CommentController::class);\n\n        Route::apiResource('languages', LanguageController::class);\n\n        // Language Tags\n        Route::get('/languages/{language}/tags', [\n            LanguageTagsController::class,\n            'index',\n        ])->name('languages.tags.index');\n        Route::post('/languages/{language}/tags', [\n            LanguageTagsController::class,\n            'store',\n        ])->name('languages.tags.store');\n\n        // Language Posts\n        Route::get('/languages/{language}/posts', [\n            LanguagePostsController::class,\n            'index',\n        ])->name('languages.posts.index');\n        Route::post('/languages/{language}/posts', [\n            LanguagePostsController::class,\n            'store',\n        ])->name('languages.posts.store');\n\n        // Language Categories\n        Route::get('/languages/{language}/categories', [\n            LanguageCategoriesController::class,\n            'index',\n        ])->name('languages.categories.index');\n        Route::post('/languages/{language}/categories', [\n            LanguageCategoriesController::class,\n            'store',\n        ])->name('languages.categories.store');\n\n        // Language Pages\n        Route::get('/languages/{language}/pages', [\n            LanguagePagesController::class,\n            'index',\n        ])->name('languages.pages.index');\n        Route::post('/languages/{language}/pages', [\n            LanguagePagesController::class,\n            'store',\n        ])->name('languages.pages.store');\n\n        // Language Products\n        Route::get('/languages/{language}/products', [\n            LanguageProductsController::class,\n            'index',\n        ])->name('languages.products.index');\n        Route::post('/languages/{language}/products', [\n            LanguageProductsController::class,\n            'store',\n        ])->name('languages.products.store');\n\n        // Language Items\n        Route::get('/languages/{language}/items', [\n            LanguageItemsController::class,\n            'index',\n        ])->name('languages.items.index');\n        Route::post('/languages/{language}/items', [\n            LanguageItemsController::class,\n            'store',\n        ])->name('languages.items.store');\n\n        // Language Countries\n        Route::get('/languages/{language}/countries', [\n            LanguageCountriesController::class,\n            'index',\n        ])->name('languages.countries.index');\n        Route::post('/languages/{language}/countries/{country}', [\n            LanguageCountriesController::class,\n            'store',\n        ])->name('languages.countries.store');\n        Route::delete('/languages/{language}/countries/{country}', [\n            LanguageCountriesController::class,\n            'destroy',\n        ])->name('languages.countries.destroy');\n\n        Route::apiResource('categories', CategoryController::class);\n\n        // Category Main Category Posts\n        Route::get('/categories/{category}/posts', [\n            CategoryPostsController::class,\n            'index',\n        ])->name('categories.posts.index');\n        Route::post('/categories/{category}/posts', [\n            CategoryPostsController::class,\n            'store',\n        ])->name('categories.posts.store');\n\n        // Category Main Category Items\n        Route::get('/categories/{category}/items', [\n            CategoryItemsController::class,\n            'index',\n        ])->name('categories.items.index');\n        Route::post('/categories/{category}/items', [\n            CategoryItemsController::class,\n            'store',\n        ])->name('categories.items.store');\n\n        // Category Main Category Products\n        Route::get('/categories/{category}/products', [\n            CategoryProductsController::class,\n            'index',\n        ])->name('categories.products.index');\n        Route::post('/categories/{category}/products', [\n            CategoryProductsController::class,\n            'store',\n        ])->name('categories.products.store');\n\n        // Category Main Category Pages\n        Route::get('/categories/{category}/pages', [\n            CategoryPagesController::class,\n            'index',\n        ])->name('categories.pages.index');\n        Route::post('/categories/{category}/pages', [\n            CategoryPagesController::class,\n            'store',\n        ])->name('categories.pages.store');\n    });\n","module":"base","path":"/routes/api.php"},"/routes/web.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\TagController;\nuse App\\Http\\Controllers\\HomeController;\nuse App\\Http\\Controllers\\PostController;\nuse App\\Http\\Controllers\\UserController;\nuse App\\Http\\Controllers\\AuthorController;\nuse App\\Http\\Controllers\\CommentController;\nuse App\\Http\\Controllers\\RevisionController;\nuse App\\Http\\Controllers\\LanguageController;\nuse App\\Http\\Controllers\\CategoryController;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*/\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nRoute::middleware(['auth:sanctum', 'verified'])\n    ->get('/dashboard', function () {\n        return view('dashboard');\n    })\n    ->name('dashboard');\n\nRoute::prefix('/')\n    ->middleware(['auth:sanctum', 'verified'])\n    ->group(function () {\n        Route::resource('tags', TagController::class);\n        Route::resource('revisions', RevisionController::class);\n        Route::resource('posts', PostController::class);\n        Route::resource('authors', AuthorController::class);\n        Route::resource('users', UserController::class);\n        Route::resource('comments', CommentController::class);\n        Route::resource('languages', LanguageController::class);\n        Route::resource('categories', CategoryController::class);\n    });\n","module":"base","path":"/routes/web.php"},"/resources/views/components/form-button.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'method' => 'POST',\n    'action'\n])\n\n<x-form method=\"{{ $method }}\" action=\"{{ $action }}\">\n    <div>\n        <button type=\"submit\" {{ $attributes }}>\n            {{ $slot }}\n        </button>\n    </div>\n</x-form>","module":"base","path":"/resources/views/components/form-button.blade.php"},"/resources/views/components/form.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'method' => 'POST',\n    'action',\n    'hasFiles' => false,\n    'model'\n])\n\n@php\n    $method = strtoupper($method);\n@endphp\n\n<form method=\"{{ $method !== 'GET' ? 'POST' : $method }}\" action=\"{{ $action }}\" {!! $hasFiles ? 'enctype=\"multipart/form-data\"' : '' !!} {{ $attributes }}>\n    @csrf\n    @if (!in_array($method, ['POST', 'GET']))\n        @method($method)\n    @endif\n    {{ $slot }}\n</form>","module":"base","path":"/resources/views/components/form.blade.php"},"/resources/views/components/inputs/basic.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n    'type' => 'text',\n    'min' => null,\n    'max' => null,\n    'step' => null,\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<input\n    type=\"{{ $type }}\"\n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\"\n    value=\"{{ old($name, $value ?? '') }}\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    {{ $min ? \"min={$min}\" : '' }}\n    {{ $max ? \"max={$max}\" : '' }}\n    {{ $step ? \"step={$step}\" : '' }}\n    autocomplete=\"off\"\n>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/basic.blade.php"},"/resources/views/components/inputs/checkbox.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'id',\n    'name',\n    'label',\n    'value',\n    'checked' => false,\n    'addHiddenValue' => true,\n    'hiddenValue' => 0,\n])\n\n@php\n    $checked = !! $checked\n@endphp\n\n<div class=\"relative block mb-2\">\n\n    {{-- Adds a hidden default value to be send if checked is false --}}\n    @if($addHiddenValue)\n    <input type=\"hidden\" id=\"{{  $id ?? $name }}-hidden\" name=\"{{ $name }}\" value=\"{{ $hiddenValue }}\">\n    @endif\n\n    <input\n        type=\"checkbox\"\n        id=\"{{ $id ?? $name }}\"\n        name=\"{{ $name }}\"\n        value=\"{{ $value ?? 1 }}\"\n        {{ $checked ? 'checked' : '' }}\n        {{ $attributes->merge(['class' => '']) }}\n    >\n\n    @if($label ?? null)\n        <label class=\"text-gray-700 pl-2\" for=\"{{ $id ?? $name }}\">\n            {{ $label }}\n        </label>\n    @endif\n</div>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/checkbox.blade.php"},"/resources/views/components/inputs/date.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"date\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/date.blade.php"},"/resources/views/components/inputs/datetime.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"datetime-local\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/datetime.blade.php"},"/resources/views/components/inputs/email.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"email\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/email.blade.php"},"/resources/views/components/inputs/group.blade.php":{"deleteOnGeneration":true,"content":"<div {{ $attributes->merge(['class' => 'px-4 my-2']) }}>\n    {{ $slot }}\n</div>","module":"base","path":"/resources/views/components/inputs/group.blade.php"},"/resources/views/components/inputs/hidden.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'value',\n])\n\n<x-inputs.basic type=\"hidden\" :name=\"$name\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/hidden.blade.php"},"/resources/views/components/inputs/number.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n    'min' => null,\n    'max' => null,\n    'step' => null,\n])\n\n<x-inputs.basic type=\"number\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\" :min=\"$min\" :max=\"$max\" :step=\"$step\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/number.blade.php"},"/resources/views/components/inputs/partials/error.blade.php":{"deleteOnGeneration":true,"content":"<p class=\"text-red-600\" role=\"alert\">{{ $message }}</p>","module":"base","path":"/resources/views/components/inputs/partials/error.blade.php"},"/resources/views/components/inputs/partials/label.blade.php":{"deleteOnGeneration":true,"content":"<label class=\"{{ ($required ?? false) ? 'label label-required font-medium text-gray-700' : 'label font-medium text-gray-700' }}\" for=\"{{ $name }}\">\n    {{ $label }}\n</label>","module":"base","path":"/resources/views/components/inputs/partials/label.blade.php"},"/resources/views/components/inputs/password.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value' => '',\n])\n\n<x-inputs.basic type=\"password\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/password.blade.php"},"/resources/views/components/inputs/select.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'type' => 'text',\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<select\n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    autocomplete=\"off\"\n>{{ $slot }}</select>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/select.blade.php"},"/resources/views/components/inputs/text.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"text\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/text.blade.php"},"/resources/views/components/inputs/textarea.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<textarea \n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\" \n    rows=\"3\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    autocomplete=\"off\"\n>{{$slot}}</textarea>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/textarea.blade.php"},"/resources/views/components/inputs/url.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"url\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/url.blade.php"},"/resources/views/components/dropdown-link.blade.php":{"deleteOnGeneration":true,"content":"<a {{ $attributes->merge(['class' => 'block w-full px-4 py-2 text-left text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>\n","module":"base","path":"/resources/views/components/dropdown-link.blade.php"},"/resources/views/components/dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white', 'dropdownClasses' => ''])\n\n@php\nswitch ($align) {\n    case 'left':\n        $alignmentClasses = 'origin-top-left left-0';\n        break;\n    case 'top':\n        $alignmentClasses = 'origin-top';\n        break;\n    case 'none':\n    case 'false':\n        $alignmentClasses = '';\n        break;\n    case 'right':\n    default:\n        $alignmentClasses = 'origin-top-right right-0';\n        break;\n}\n\nswitch ($width) {\n    case '48':\n        $width = 'w-48';\n        break;\n}\n@endphp\n\n<div class=\"relative\" x-data=\"{ open: false }\" @click.away=\"open = false\" @close.stop=\"open = false\">\n    <div @click=\"open = ! open\">\n        {{ $trigger }}\n    </div>\n\n    <div x-show=\"open\"\n            x-transition:enter=\"transition ease-out duration-200\"\n            x-transition:enter-start=\"transform opacity-0 scale-95\"\n            x-transition:enter-end=\"transform opacity-100 scale-100\"\n            x-transition:leave=\"transition ease-in duration-75\"\n            x-transition:leave-start=\"transform opacity-100 scale-100\"\n            x-transition:leave-end=\"transform opacity-0 scale-95\"\n            class=\"absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }} {{ $dropdownClasses }}\"\n            style=\"display: none;\"\n            @click=\"open = false\">\n        <div class=\"rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}\">\n            {{ $content }}\n        </div>\n    </div>\n</div>\n","module":"base","path":"/resources/views/components/dropdown.blade.php"},"/resources/views/components/modal.blade.php":{"deleteOnGeneration":true,"content":"{{-- This modal modal was copied from Jetstream components --}}\n\n@props(['id', 'maxWidth'])\n\n@php\n$id = $id ?? md5($attributes->wire('model'));\n\n$maxWidth = [\n    'sm' => 'sm:max-w-sm',\n    'md' => 'sm:max-w-md',\n    'lg' => 'sm:max-w-lg',\n    'xl' => 'sm:max-w-xl',\n    '2xl' => 'sm:max-w-2xl',\n][$maxWidth ?? '2xl'];\n@endphp\n\n<div\n    x-data=\"{ show: @entangle($attributes->wire('model')).defer }\"\n    x-on:close.stop=\"show = false\"\n    x-on:keydown.escape.window=\"show = false\"\n    x-show=\"show\"\n    id=\"{{ $id }}\"\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\n    style=\"display: none;\"\n>\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\n                    x-transition:enter-start=\"opacity-0\"\n                    x-transition:enter-end=\"opacity-100\"\n                    x-transition:leave=\"ease-in duration-200\"\n                    x-transition:leave-start=\"opacity-100\"\n                    x-transition:leave-end=\"opacity-0\">\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n    </div>\n\n    <div x-show=\"show\" class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\n                    x-trap.inert.noscroll=\"show\"\n                    x-transition:enter=\"ease-out duration-300\"\n                    x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\n                    x-transition:leave=\"ease-in duration-200\"\n                    x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\n                    x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\n        {{ $slot }}\n    </div>\n</div>\n","module":"base","path":"/resources/views/components/modal.blade.php"},"/resources/views/components/nav-dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'title'\n])\n\n<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n    <x-dropdown align=\"right\" width=\"48\">\n        <x-slot name=\"trigger\">\n            <button class=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out\">\n                <div>{{ $title ?? '' }}</div>\n\n                <div class=\"ml-1\">\n                    <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n            </button>\n        </x-slot>\n\n        <x-slot name=\"content\">\n            {{ $slot }}\n        </x-slot>\n    </x-dropdown>\n</div>","module":"base","path":"/resources/views/components/nav-dropdown.blade.php"},"/resources/views/components/nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\n\n@php\n$classes = ($active ?? false)\n            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'\n            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';\n@endphp\n\n<a {{ $attributes->merge(['class' => $classes]) }}>\n    {{ $slot }}\n</a>\n","module":"base","path":"/resources/views/components/nav-link.blade.php"},"/resources/views/components/partials/card.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'bodyClasses' => 'flex-auto p-6',\n])\n\n<div {{ $attributes->merge(['class' => 'relative flex flex-col rounded-lg bg-white break-words shadow-xl']) }}>\n    <div class=\"{{ $bodyClasses }}\">\n        \n        @if(isset($title))\n        <h4 class=\"text-lg font-bold mb-3\">\n            {{ $title }}\n        </h4>\n        @endif\n\n        @if(isset($subtitle))\n        <h5 class=\"text-gray-600 text-sm\">\n            {{ $subtitle }}\n        </h5>\n        @endif\n\n        {{ $slot }}\n    </div>\n</div>","module":"base","path":"/resources/views/components/partials/card.blade.php"},"/resources/views/components/partials/thumbnail.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'src',\n    'size' => 50,\n])\n\n@if($src)\n<img src=\"{{ $src }}\" class=\"object-cover rounded border border-gray-200\" style=\"width: {{ $size }}px; height: {{ $size }}px;\">\n@else\n<div class=\"border rounded border-gray-200 bg-gray-100\" style=\"width: {{ $size }}px; height: {{ $size }}px;\"></div>\n@endif","module":"base","path":"/resources/views/components/partials/thumbnail.blade.php"},"/resources/views/components/responsive-nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\n\n@php\n$classes = ($active ?? false)\n            ? 'block w-full pl-3 pr-4 py-2 border-l-4 border-indigo-400 text-left text-base font-medium text-indigo-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition duration-150 ease-in-out'\n            : 'block w-full pl-3 pr-4 py-2 border-l-4 border-transparent text-left text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out';\n@endphp\n\n<a {{ $attributes->merge(['class' => $classes]) }}>\n    {{ $slot }}\n</a>\n","module":"base","path":"/resources/views/components/responsive-nav-link.blade.php"},"/resources/css/app.css":{"deleteOnGeneration":true,"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n.button {\n    @apply inline-flex items-center px-4 py-2 bg-gray-100 text-gray-800 border border-transparent rounded-md font-semibold text-xs tracking-widest transition ease-in-out duration-150 ring-gray-300;\n}\n\n.button:hover {\n    @apply bg-gray-200;\n}\n\n.button:active, .button:focus {\n    @apply bg-gray-300 ring;\n}\n\n.button.button-primary {\n    @apply bg-indigo-500 text-white !important;\n}\n\n.button-primary:hover, .button.button-primary:active, .button.button-primary:focus {\n    @apply bg-indigo-600 !important;\n}\n\n.button.button-primary:disabled {\n    @apply bg-indigo-200 !important;\n}\n\n.button.button-danger {\n    @apply bg-red-500 text-white !important;\n}\n\n.button-danger:hover, .button.button-danger:active, .button.button-danger:focus {\n    @apply bg-red-600 !important;\n}\n\n.button.button-danger:disabled {\n    @apply bg-red-200 !important;\n}","module":"base","path":"/resources/css/app.css"},"/resources/views/layouts/app.blade.php":{"deleteOnGeneration":true,"content":"<!DOCTYPE html>\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n        \n        <title>mooxbuild</title>\n        \n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\">\n        \n        <!-- Styles -->\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">\n        \n        <!-- Icons -->\n        <link href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\" rel=\"stylesheet\">\n        \n        <!-- Scripts -->\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\n\n        \n        @livewireStyles\n    </head>\n    <body class=\"font-sans antialiased\">\n        <x-banner />\n\n        <div class=\"min-h-screen bg-gray-100\">\n            @livewire('navigation-menu')\n        \n            <!-- Page Heading -->\n            @if (isset($header))\n                <header class=\"bg-white shadow\">\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                        {{ $header }}\n                    </div>\n                </header>\n            @endif\n        \n            <!-- Page Content -->\n            <main>\n                {{ $slot }}\n            </main>\n        </div>\n\n        @stack('modals')\n        \n        @livewireScripts\n        \n        @stack('scripts')\n        \n        <script src=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js\"></script>\n        \n        @if (session()->has('success')) \n        <script>\n            var notyf = new Notyf({dismissible: true})\n            notyf.success('{{ session('success') }}')\n        </script> \n        @endif\n        \n        <script>\n            /* Simple Alpine Image Viewer */\n            document.addEventListener('alpine:init', () => {\n                Alpine.data('imageViewer', (src = '') => {\n                    return {\n                        imageUrl: src,\n        \n                        refreshUrl() {\n                            this.imageUrl = this.$el.getAttribute(\"image-url\")\n                        },\n        \n                        fileChosen(event) {\n                            this.fileToDataUrl(event, src => this.imageUrl = src)\n                        },\n        \n                        fileToDataUrl(event, callback) {\n                            if (! event.target.files.length) return\n        \n                            let file = event.target.files[0],\n                                reader = new FileReader()\n        \n                            reader.readAsDataURL(file)\n                            reader.onload = e => callback(e.target.result)\n                        },\n                    }\n                })\n            })\n        </script>\n    </body>\n</html>\n","module":"base","path":"/resources/views/layouts/app.blade.php"},"/resources/views/navigation-menu.blade.php":{"deleteOnGeneration":true,"content":"<nav x-data=\"{ open: false }\" class=\"bg-white border-b border-gray-100\">\n    <!-- Primary Navigation Menu -->\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between h-16\">\n            <div class=\"flex\">\n                <!-- Logo -->\n                <div class=\"shrink-0 flex items-center\">\n                    <a href=\"{{ route('dashboard') }}\">\n                        <x-application-mark class=\"block h-9 w-auto\" />\n                    </a>\n                </div>\n\n                <!-- Navigation Links -->\n                <div class=\"hidden space-x-8 sm:-my-px sm:ml-10 sm:flex\">\n                    <x-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\n                        {{ __('Dashboard') }}\n                    </x-nav-link>\n                </div>\n\n                <x-nav-dropdown title=\"Apps\" align=\"right\" width=\"48\">\n                        @can('view-any', App\\Models\\Tag::class)\n                        <x-dropdown-link href=\"{{ route('tags.index') }}\">\n                        Tags\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Revision::class)\n                        <x-dropdown-link href=\"{{ route('revisions.index') }}\">\n                        Revisions\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Post::class)\n                        <x-dropdown-link href=\"{{ route('posts.index') }}\">\n                        Posts\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Author::class)\n                        <x-dropdown-link href=\"{{ route('authors.index') }}\">\n                        Authors\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\User::class)\n                        <x-dropdown-link href=\"{{ route('users.index') }}\">\n                        Users\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Comment::class)\n                        <x-dropdown-link href=\"{{ route('comments.index') }}\">\n                        Comments\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Language::class)\n                        <x-dropdown-link href=\"{{ route('languages.index') }}\">\n                        Languages\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Category::class)\n                        <x-dropdown-link href=\"{{ route('categories.index') }}\">\n                        Categories\n                        </x-dropdown-link>\n                        @endcan\n                </x-nav-dropdown>\n\n            </div>\n\n            <div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n                <!-- Teams Dropdown -->\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\n                    <div class=\"ml-3 relative\">\n                        <x-dropdown align=\"right\" width=\"60\">\n                            <x-slot name=\"trigger\">\n                                <span class=\"inline-flex rounded-md\">\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\">\n                                        {{ Auth::user()->currentTeam->name }}\n\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </button>\n                                </span>\n                            </x-slot>\n\n                            <x-slot name=\"content\">\n                                <div class=\"w-60\">\n                                    <!-- Team Management -->\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                        {{ __('Manage Team') }}\n                                    </div>\n\n                                    <!-- Team Settings -->\n                                    <x-dropdown-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\">\n                                        {{ __('Team Settings') }}\n                                    </x-dropdown-link>\n\n                                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\n                                        <x-dropdown-link href=\"{{ route('teams.create') }}\">\n                                            {{ __('Create New Team') }}\n                                        </x-dropdown-link>\n                                    @endcan\n\n                                    <div class=\"border-t border-gray-100\"></div>\n\n                                    <!-- Team Switcher -->\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                        {{ __('Switch Teams') }}\n                                    </div>\n\n                                    @foreach (Auth::user()->allTeams() as $team)\n                                        <x-switchable-team :team=\"$team\" />\n                                    @endforeach\n                                </div>\n                            </x-slot>\n                        </x-dropdown>\n                    </div>\n                @endif\n\n                <!-- Settings Dropdown -->\n                <div class=\"ml-3 relative\">\n                    <x-dropdown align=\"right\" width=\"48\">\n                        <x-slot name=\"trigger\">\n                            @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\n                                <button class=\"flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition duration-150 ease-in-out\">\n                                    <img class=\"h-8 w-8 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\n                                </button>\n                            @else\n                                <span class=\"inline-flex rounded-md\">\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition ease-in-out duration-150\">\n                                        {{ Auth::user()->name }}\n\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </button>\n                                </span>\n                            @endif\n                        </x-slot>\n\n                        <x-slot name=\"content\">\n                            <!-- Account Management -->\n                            <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                {{ __('Manage Account') }}\n                            </div>\n\n                            <x-dropdown-link href=\"{{ route('profile.show') }}\">\n                                {{ __('Profile') }}\n                            </x-dropdown-link>\n\n                            @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\n                                <x-dropdown-link href=\"{{ route('api-tokens.index') }}\">\n                                    {{ __('API Tokens') }}\n                                </x-dropdown-link>\n                            @endif\n\n                            <div class=\"border-t border-gray-100\"></div>\n\n                            <!-- Authentication -->\n                            <form method=\"POST\" action=\"{{ route('logout') }}\">\n                                @csrf\n\n                                <x-dropdown-link href=\"{{ route('logout') }}\"\n                                         onclick=\"event.preventDefault();\n                                                this.closest('form').submit();\">\n                                    {{ __('Log Out') }}\n                                </x-dropdown-link>\n                            </form>\n                        </x-slot>\n                    </x-dropdown>\n                </div>\n            </div>\n\n            <!-- Hamburger -->\n            <div class=\"-mr-2 flex items-center sm:hidden\">\n                <button @click=\"open = ! open\" class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\">\n                    <svg class=\"h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <path :class=\"{'hidden': open, 'inline-flex': ! open }\" class=\"inline-flex\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                        <path :class=\"{'hidden': ! open, 'inline-flex': open }\" class=\"hidden\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Responsive Navigation Menu -->\n    <div :class=\"{'block': open, 'hidden': ! open}\" class=\"hidden sm:hidden\">\n        <div class=\"pt-2 pb-3 space-y-1\">\n            <x-responsive-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\n                {{ __('Dashboard') }}\n            </x-responsive-nav-link>\n            \n                @can('view-any', App\\Models\\Tag::class)\n                <x-responsive-nav-link href=\"{{ route('tags.index') }}\">\n                Tags\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Revision::class)\n                <x-responsive-nav-link href=\"{{ route('revisions.index') }}\">\n                Revisions\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Post::class)\n                <x-responsive-nav-link href=\"{{ route('posts.index') }}\">\n                Posts\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Author::class)\n                <x-responsive-nav-link href=\"{{ route('authors.index') }}\">\n                Authors\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\User::class)\n                <x-responsive-nav-link href=\"{{ route('users.index') }}\">\n                Users\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Comment::class)\n                <x-responsive-nav-link href=\"{{ route('comments.index') }}\">\n                Comments\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Language::class)\n                <x-responsive-nav-link href=\"{{ route('languages.index') }}\">\n                Languages\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Category::class)\n                <x-responsive-nav-link href=\"{{ route('categories.index') }}\">\n                Categories\n                </x-responsive-nav-link>\n                @endcan\n\n        </div>\n\n        <!-- Responsive Settings Options -->\n        <div class=\"pt-4 pb-1 border-t border-gray-200\">\n            <div class=\"flex items-center px-4\">\n                @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\n                    <div class=\"shrink-0 mr-3\">\n                        <img class=\"h-10 w-10 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\n                    </div>\n                @endif\n\n                <div>\n                    <div class=\"font-medium text-base text-gray-800\">{{ Auth::user()->name }}</div>\n                    <div class=\"font-medium text-sm text-gray-500\">{{ Auth::user()->email }}</div>\n                </div>\n            </div>\n\n            <div class=\"mt-3 space-y-1\">\n                <!-- Account Management -->\n                <x-responsive-nav-link href=\"{{ route('profile.show') }}\" :active=\"request()->routeIs('profile.show')\">\n                    {{ __('Profile') }}\n                </x-responsive-nav-link>\n\n                @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\n                    <x-responsive-nav-link href=\"{{ route('api-tokens.index') }}\" :active=\"request()->routeIs('api-tokens.index')\">\n                        {{ __('API Tokens') }}\n                    </x-responsive-nav-link>\n                @endif\n\n                <!-- Authentication -->\n                <form method=\"POST\" action=\"{{ route('logout') }}\">\n                    @csrf\n\n                    <x-responsive-nav-link href=\"{{ route('logout') }}\"\n                                   onclick=\"event.preventDefault();\n                                    this.closest('form').submit();\">\n                        {{ __('Log Out') }}\n                    </x-responsive-nav-link>\n                </form>\n\n                <!-- Team Management -->\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\n                    <div class=\"border-t border-gray-200\"></div>\n\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                        {{ __('Manage Team') }}\n                    </div>\n\n                    <!-- Team Settings -->\n                    <x-responsive-nav-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\" :active=\"request()->routeIs('teams.show')\">\n                        {{ __('Team Settings') }}\n                    </x-responsive-nav-link>\n\n                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\n                        <x-responsive-nav-link href=\"{{ route('teams.create') }}\" :active=\"request()->routeIs('teams.create')\">\n                            {{ __('Create New Team') }}\n                        </x-responsive-nav-link>\n                    @endcan\n\n                    <div class=\"border-t border-gray-200\"></div>\n\n                    <!-- Team Switcher -->\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                        {{ __('Switch Teams') }}\n                    </div>\n\n                    @foreach (Auth::user()->allTeams() as $team)\n                        <x-switchable-team :team=\"$team\" component=\"responsive-nav-link\" />\n                    @endforeach\n                @endif\n            </div>\n        </div>\n    </div>\n</nav>","module":"base","path":"/resources/views/navigation-menu.blade.php"},"/database/factories/AuthorFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Author;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass AuthorFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Author::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'salutation' => $this->faker->text(255),\n            'title' => $this->faker->sentence(10),\n            'name' => $this->faker->name(),\n            'full_name' => $this->faker->text(255),\n            'first_name' => $this->faker->firstName(),\n            'last_name' => $this->faker->lastName(),\n            'mail_address' => $this->faker->text(255),\n            'website' => $this->faker->text(255),\n            'address' => $this->faker->text(),\n            'social' => [],\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n","module":"entity:306","path":"/database/factories/AuthorFactory.php"},"/database/factories/BlacklistFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Blacklist;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass BlacklistFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Blacklist::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [];\n    }\n}\n","module":"entity:346","path":"/database/factories/BlacklistFactory.php"},"/database/factories/BypassTokenFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\BypassToken;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass BypassTokenFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = BypassToken::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'token' => $this->faker->text(255),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n","module":"entity:343","path":"/database/factories/BypassTokenFactory.php"},"/database/factories/CartFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Cart;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CartFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Cart::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'customer_id' => \\App\\Models\\Customer::factory(),\n        ];\n    }\n}\n","module":"entity:335","path":"/database/factories/CartFactory.php"},"/database/factories/CategoryFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Category;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CategoryFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Category::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'model' => $this->faker->text(255),\n            'language_id' => \\App\\Models\\Language::factory(),\n            'translation_id' => function () {\n                return \\App\\Models\\Category::factory()->create([\n                    'translation_id' => null,\n                ])->id;\n            },\n        ];\n    }\n}\n","module":"entity:292","path":"/database/factories/CategoryFactory.php"},"/database/factories/CommentFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Comment;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CommentFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Comment::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'translations' => [],\n            'is_from_author' => $this->faker->boolean(),\n            'name' => $this->faker->name(),\n            'email' => $this->faker->email(),\n            'parent_id' => function () {\n                return \\App\\Models\\Comment::factory()->create([\n                    'parent_id' => null,\n                ])->id;\n            },\n            'author_id' => \\App\\Models\\Author::factory(),\n        ];\n    }\n}\n","module":"entity:307","path":"/database/factories/CommentFactory.php"},"/database/factories/ContinentFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Continent;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ContinentFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Continent::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [];\n    }\n}\n","module":"entity:332","path":"/database/factories/ContinentFactory.php"},"/database/factories/CountryFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Country;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CountryFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Country::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'continent_id' => \\App\\Models\\Continent::factory(),\n        ];\n    }\n}\n","module":"entity:309","path":"/database/factories/CountryFactory.php"},"/database/factories/CurrencyFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Currency;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CurrencyFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Currency::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [];\n    }\n}\n","module":"entity:310","path":"/database/factories/CurrencyFactory.php"},"/database/factories/CustomerFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Customer;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CustomerFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Customer::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n","module":"entity:333","path":"/database/factories/CustomerFactory.php"},"/database/factories/ItemFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Item;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ItemFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Item::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'short' => $this->faker->text(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'author_id' => \\App\\Models\\Author::factory(),\n            'language_id' => \\App\\Models\\Language::factory(),\n            'translation_id' => function () {\n                return \\App\\Models\\Item::factory()->create([\n                    'translation_id' => null,\n                ])->id;\n            },\n            'main_category_id' => \\App\\Models\\Category::factory(),\n        ];\n    }\n}\n","module":"entity:324","path":"/database/factories/ItemFactory.php"},"/database/factories/LanguageFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Language;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass LanguageFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Language::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'isocode' => $this->faker->text(255),\n            'active' => $this->faker->boolean(),\n            'published' => $this->faker->boolean(),\n        ];\n    }\n}\n","module":"entity:308","path":"/database/factories/LanguageFactory.php"},"/database/factories/OrderFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Order;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass OrderFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Order::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [];\n    }\n}\n","module":"entity:341","path":"/database/factories/OrderFactory.php"},"/database/factories/PageFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Page;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PageFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Page::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'short' => $this->faker->text(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'author_id' => \\App\\Models\\Author::factory(),\n            'language_id' => \\App\\Models\\Language::factory(),\n            'main_category_id' => \\App\\Models\\Category::factory(),\n            'translation_id' => function () {\n                return \\App\\Models\\Page::factory()->create([\n                    'translation_id' => null,\n                ])->id;\n            },\n        ];\n    }\n}\n","module":"entity:296","path":"/database/factories/PageFactory.php"},"/database/factories/PageTemplateFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\PageTemplate;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PageTemplateFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = PageTemplate::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'page_id' => \\App\\Models\\Page::factory(),\n        ];\n    }\n}\n","module":"entity:339","path":"/database/factories/PageTemplateFactory.php"},"/database/factories/PlatformFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Platform;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PlatformFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Platform::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [];\n    }\n}\n","module":"entity:336","path":"/database/factories/PlatformFactory.php"},"/database/factories/PostFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Post;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PostFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Post::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'short' => $this->faker->text(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'image' => $this->faker->text(255),\n            'language_id' => \\App\\Models\\Language::factory(),\n            'author_id' => \\App\\Models\\Author::factory(),\n            'translation_id' => function () {\n                return \\App\\Models\\Post::factory()->create([\n                    'translation_id' => null,\n                ])->id;\n            },\n            'main_category_id' => \\App\\Models\\Category::factory(),\n        ];\n    }\n}\n","module":"entity:305","path":"/database/factories/PostFactory.php"},"/database/factories/PostalCodeFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\PostalCode;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PostalCodeFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = PostalCode::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [];\n    }\n}\n","module":"entity:331","path":"/database/factories/PostalCodeFactory.php"},"/database/factories/ProductFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Product;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ProductFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Product::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'main_category_id' => \\App\\Models\\Category::factory(),\n            'language_id' => \\App\\Models\\Language::factory(),\n            'author_id' => \\App\\Models\\Author::factory(),\n        ];\n    }\n}\n","module":"entity:320","path":"/database/factories/ProductFactory.php"},"/database/factories/RevisionFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Revision;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass RevisionFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Revision::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'revname' => $this->faker->text(255),\n            'revcomment' => $this->faker->text(),\n            'revretention' => $this->faker->dateTime(),\n            'uid' => $this->faker->randomNumber(),\n            'main_category_id' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'short' => $this->faker->text(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'author_id' => $this->faker->randomNumber(),\n            'language_id' => $this->faker->randomNumber(),\n            'translation_id' => $this->faker->randomNumber(),\n            'categories' => [],\n            'tags' => [],\n        ];\n    }\n}\n","module":"entity:338","path":"/database/factories/RevisionFactory.php"},"/database/factories/SettingFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Setting;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass SettingFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Setting::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [];\n    }\n}\n","module":"entity:294","path":"/database/factories/SettingFactory.php"},"/database/factories/SubscriberFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Subscriber;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass SubscriberFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Subscriber::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n","module":"entity:334","path":"/database/factories/SubscriberFactory.php"},"/database/factories/TagFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Tag;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TagFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Tag::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'uid' => $this->faker->randomNumber(),\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'content' => $this->faker->text(),\n            'data' => [],\n            'weight' => 0,\n            'model' => $this->faker->text(255),\n            'language_id' => \\App\\Models\\Language::factory(),\n            'translation_id' => function () {\n                return \\App\\Models\\Tag::factory()->create([\n                    'translation_id' => null,\n                ])->id;\n            },\n        ];\n    }\n}\n","module":"entity:293","path":"/database/factories/TagFactory.php"},"/database/factories/TimezoneFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Timezone;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TimezoneFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Timezone::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [];\n    }\n}\n","module":"entity:311","path":"/database/factories/TimezoneFactory.php"},"/database/factories/UserFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'remember_token' => Str::random(10),\n            'whitelist_id' => \\App\\Models\\Whitelist::factory(),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n","module":"entity:291","path":"/database/factories/UserFactory.php"},"/database/factories/WhitelistFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Whitelist;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass WhitelistFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Whitelist::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'comment' => $this->faker->text(),\n            'ip-address' => $this->faker->text(255),\n            'lookup' => $this->faker->text(255),\n            'expires' => $this->faker->dateTime(),\n        ];\n    }\n}\n","module":"entity:342","path":"/database/factories/WhitelistFactory.php"},"/database/seeders/AuthorSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Author;\nuse Illuminate\\Database\\Seeder;\n\nclass AuthorSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Author::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:306","path":"/database/seeders/AuthorSeeder.php"},"/database/seeders/BlacklistSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Blacklist;\nuse Illuminate\\Database\\Seeder;\n\nclass BlacklistSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Blacklist::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:346","path":"/database/seeders/BlacklistSeeder.php"},"/database/seeders/BypassTokenSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\BypassToken;\nuse Illuminate\\Database\\Seeder;\n\nclass BypassTokenSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        BypassToken::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:343","path":"/database/seeders/BypassTokenSeeder.php"},"/database/seeders/CartSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Cart;\nuse Illuminate\\Database\\Seeder;\n\nclass CartSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Cart::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:335","path":"/database/seeders/CartSeeder.php"},"/database/seeders/CategorySeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Category;\nuse Illuminate\\Database\\Seeder;\n\nclass CategorySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Category::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:292","path":"/database/seeders/CategorySeeder.php"},"/database/seeders/CommentSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Comment;\nuse Illuminate\\Database\\Seeder;\n\nclass CommentSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Comment::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:307","path":"/database/seeders/CommentSeeder.php"},"/database/seeders/ContinentSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Continent;\nuse Illuminate\\Database\\Seeder;\n\nclass ContinentSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Continent::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:332","path":"/database/seeders/ContinentSeeder.php"},"/database/seeders/CountrySeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Country;\nuse Illuminate\\Database\\Seeder;\n\nclass CountrySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Country::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:309","path":"/database/seeders/CountrySeeder.php"},"/database/seeders/CurrencySeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Currency;\nuse Illuminate\\Database\\Seeder;\n\nclass CurrencySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Currency::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:310","path":"/database/seeders/CurrencySeeder.php"},"/database/seeders/CustomerSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Customer;\nuse Illuminate\\Database\\Seeder;\n\nclass CustomerSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Customer::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:333","path":"/database/seeders/CustomerSeeder.php"},"/database/seeders/ItemSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Item;\nuse Illuminate\\Database\\Seeder;\n\nclass ItemSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Item::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:324","path":"/database/seeders/ItemSeeder.php"},"/database/seeders/LanguageSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Language;\nuse Illuminate\\Database\\Seeder;\n\nclass LanguageSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Language::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:308","path":"/database/seeders/LanguageSeeder.php"},"/database/seeders/OrderSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Order;\nuse Illuminate\\Database\\Seeder;\n\nclass OrderSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Order::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:341","path":"/database/seeders/OrderSeeder.php"},"/database/seeders/PageSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Page;\nuse Illuminate\\Database\\Seeder;\n\nclass PageSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Page::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:296","path":"/database/seeders/PageSeeder.php"},"/database/seeders/PageTemplateSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\PageTemplate;\nuse Illuminate\\Database\\Seeder;\n\nclass PageTemplateSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        PageTemplate::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:339","path":"/database/seeders/PageTemplateSeeder.php"},"/database/seeders/PlatformSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Platform;\nuse Illuminate\\Database\\Seeder;\n\nclass PlatformSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Platform::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:336","path":"/database/seeders/PlatformSeeder.php"},"/database/seeders/PostSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Post;\nuse Illuminate\\Database\\Seeder;\n\nclass PostSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Post::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:305","path":"/database/seeders/PostSeeder.php"},"/database/seeders/PostalCodeSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\PostalCode;\nuse Illuminate\\Database\\Seeder;\n\nclass PostalCodeSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        PostalCode::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:331","path":"/database/seeders/PostalCodeSeeder.php"},"/database/seeders/ProductSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Product;\nuse Illuminate\\Database\\Seeder;\n\nclass ProductSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Product::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:320","path":"/database/seeders/ProductSeeder.php"},"/database/seeders/RevisionSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Revision;\nuse Illuminate\\Database\\Seeder;\n\nclass RevisionSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Revision::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:338","path":"/database/seeders/RevisionSeeder.php"},"/database/seeders/SettingSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Setting;\nuse Illuminate\\Database\\Seeder;\n\nclass SettingSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Setting::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:294","path":"/database/seeders/SettingSeeder.php"},"/database/seeders/SubscriberSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Subscriber;\nuse Illuminate\\Database\\Seeder;\n\nclass SubscriberSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Subscriber::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:334","path":"/database/seeders/SubscriberSeeder.php"},"/database/seeders/TagSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Tag;\nuse Illuminate\\Database\\Seeder;\n\nclass TagSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Tag::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:293","path":"/database/seeders/TagSeeder.php"},"/database/seeders/TimezoneSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Timezone;\nuse Illuminate\\Database\\Seeder;\n\nclass TimezoneSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Timezone::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:311","path":"/database/seeders/TimezoneSeeder.php"},"/database/seeders/UserSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:291","path":"/database/seeders/UserSeeder.php"},"/database/seeders/WhitelistSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Whitelist;\nuse Illuminate\\Database\\Seeder;\n\nclass WhitelistSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Whitelist::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:342","path":"/database/seeders/WhitelistSeeder.php"},"/database/seeders/DatabaseSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        // Adding an admin user\n        $user = \\App\\Models\\User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(AuthorSeeder::class);\n        $this->call(BlacklistSeeder::class);\n        $this->call(BypassTokenSeeder::class);\n        $this->call(CartSeeder::class);\n        $this->call(CategorySeeder::class);\n        $this->call(CommentSeeder::class);\n        $this->call(ContinentSeeder::class);\n        $this->call(CountrySeeder::class);\n        $this->call(CurrencySeeder::class);\n        $this->call(CustomerSeeder::class);\n        $this->call(ItemSeeder::class);\n        $this->call(LanguageSeeder::class);\n        $this->call(OrderSeeder::class);\n        $this->call(PageSeeder::class);\n        $this->call(PageTemplateSeeder::class);\n        $this->call(PlatformSeeder::class);\n        $this->call(PostSeeder::class);\n        $this->call(PostalCodeSeeder::class);\n        $this->call(ProductSeeder::class);\n        $this->call(RevisionSeeder::class);\n        $this->call(SettingSeeder::class);\n        $this->call(SubscriberSeeder::class);\n        $this->call(TagSeeder::class);\n        $this->call(TimezoneSeeder::class);\n        $this->call(UserSeeder::class);\n        $this->call(WhitelistSeeder::class);\n    }\n}\n","module":"base","path":"/database/seeders/DatabaseSeeder.php"},"/app/Policies/AuthorPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Author;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass AuthorPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the author can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the author can view the model.\n     */\n    public function view(User $user, Author $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the author can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the author can update the model.\n     */\n    public function update(User $user, Author $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the author can delete the model.\n     */\n    public function delete(User $user, Author $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the author can restore the model.\n     */\n    public function restore(User $user, Author $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the author can permanently delete the model.\n     */\n    public function forceDelete(User $user, Author $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:306","path":"/app/Policies/AuthorPolicy.php"},"/app/Policies/BlacklistPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Blacklist;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass BlacklistPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the blacklist can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the blacklist can view the model.\n     */\n    public function view(User $user, Blacklist $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the blacklist can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the blacklist can update the model.\n     */\n    public function update(User $user, Blacklist $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the blacklist can delete the model.\n     */\n    public function delete(User $user, Blacklist $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the blacklist can restore the model.\n     */\n    public function restore(User $user, Blacklist $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the blacklist can permanently delete the model.\n     */\n    public function forceDelete(User $user, Blacklist $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:346","path":"/app/Policies/BlacklistPolicy.php"},"/app/Policies/BypassTokenPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\BypassToken;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass BypassTokenPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the bypassToken can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the bypassToken can view the model.\n     */\n    public function view(User $user, BypassToken $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the bypassToken can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the bypassToken can update the model.\n     */\n    public function update(User $user, BypassToken $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the bypassToken can delete the model.\n     */\n    public function delete(User $user, BypassToken $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the bypassToken can restore the model.\n     */\n    public function restore(User $user, BypassToken $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the bypassToken can permanently delete the model.\n     */\n    public function forceDelete(User $user, BypassToken $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:343","path":"/app/Policies/BypassTokenPolicy.php"},"/app/Policies/CartPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Cart;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CartPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the cart can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the cart can view the model.\n     */\n    public function view(User $user, Cart $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the cart can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the cart can update the model.\n     */\n    public function update(User $user, Cart $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the cart can delete the model.\n     */\n    public function delete(User $user, Cart $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the cart can restore the model.\n     */\n    public function restore(User $user, Cart $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the cart can permanently delete the model.\n     */\n    public function forceDelete(User $user, Cart $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:335","path":"/app/Policies/CartPolicy.php"},"/app/Policies/CategoryPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Category;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CategoryPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the category can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the category can view the model.\n     */\n    public function view(User $user, Category $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the category can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the category can update the model.\n     */\n    public function update(User $user, Category $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the category can delete the model.\n     */\n    public function delete(User $user, Category $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the category can restore the model.\n     */\n    public function restore(User $user, Category $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the category can permanently delete the model.\n     */\n    public function forceDelete(User $user, Category $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:292","path":"/app/Policies/CategoryPolicy.php"},"/app/Policies/CommentPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Comment;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CommentPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the comment can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the comment can view the model.\n     */\n    public function view(User $user, Comment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the comment can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the comment can update the model.\n     */\n    public function update(User $user, Comment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the comment can delete the model.\n     */\n    public function delete(User $user, Comment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the comment can restore the model.\n     */\n    public function restore(User $user, Comment $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the comment can permanently delete the model.\n     */\n    public function forceDelete(User $user, Comment $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:307","path":"/app/Policies/CommentPolicy.php"},"/app/Policies/ContinentPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Continent;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass ContinentPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the continent can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the continent can view the model.\n     */\n    public function view(User $user, Continent $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the continent can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the continent can update the model.\n     */\n    public function update(User $user, Continent $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the continent can delete the model.\n     */\n    public function delete(User $user, Continent $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the continent can restore the model.\n     */\n    public function restore(User $user, Continent $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the continent can permanently delete the model.\n     */\n    public function forceDelete(User $user, Continent $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:332","path":"/app/Policies/ContinentPolicy.php"},"/app/Policies/CountryPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Country;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CountryPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the country can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the country can view the model.\n     */\n    public function view(User $user, Country $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the country can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the country can update the model.\n     */\n    public function update(User $user, Country $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the country can delete the model.\n     */\n    public function delete(User $user, Country $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the country can restore the model.\n     */\n    public function restore(User $user, Country $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the country can permanently delete the model.\n     */\n    public function forceDelete(User $user, Country $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:309","path":"/app/Policies/CountryPolicy.php"},"/app/Policies/CurrencyPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Currency;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CurrencyPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the currency can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the currency can view the model.\n     */\n    public function view(User $user, Currency $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the currency can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the currency can update the model.\n     */\n    public function update(User $user, Currency $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the currency can delete the model.\n     */\n    public function delete(User $user, Currency $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the currency can restore the model.\n     */\n    public function restore(User $user, Currency $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the currency can permanently delete the model.\n     */\n    public function forceDelete(User $user, Currency $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:310","path":"/app/Policies/CurrencyPolicy.php"},"/app/Policies/CustomerPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Customer;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CustomerPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the customer can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the customer can view the model.\n     */\n    public function view(User $user, Customer $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the customer can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the customer can update the model.\n     */\n    public function update(User $user, Customer $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the customer can delete the model.\n     */\n    public function delete(User $user, Customer $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the customer can restore the model.\n     */\n    public function restore(User $user, Customer $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the customer can permanently delete the model.\n     */\n    public function forceDelete(User $user, Customer $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:333","path":"/app/Policies/CustomerPolicy.php"},"/app/Policies/ItemPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Item;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass ItemPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the item can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the item can view the model.\n     */\n    public function view(User $user, Item $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the item can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the item can update the model.\n     */\n    public function update(User $user, Item $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the item can delete the model.\n     */\n    public function delete(User $user, Item $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the item can restore the model.\n     */\n    public function restore(User $user, Item $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the item can permanently delete the model.\n     */\n    public function forceDelete(User $user, Item $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:324","path":"/app/Policies/ItemPolicy.php"},"/app/Policies/LanguagePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Language;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass LanguagePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the language can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the language can view the model.\n     */\n    public function view(User $user, Language $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the language can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the language can update the model.\n     */\n    public function update(User $user, Language $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the language can delete the model.\n     */\n    public function delete(User $user, Language $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the language can restore the model.\n     */\n    public function restore(User $user, Language $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the language can permanently delete the model.\n     */\n    public function forceDelete(User $user, Language $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:308","path":"/app/Policies/LanguagePolicy.php"},"/app/Policies/OrderPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Order;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass OrderPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the order can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the order can view the model.\n     */\n    public function view(User $user, Order $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the order can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the order can update the model.\n     */\n    public function update(User $user, Order $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the order can delete the model.\n     */\n    public function delete(User $user, Order $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the order can restore the model.\n     */\n    public function restore(User $user, Order $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the order can permanently delete the model.\n     */\n    public function forceDelete(User $user, Order $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:341","path":"/app/Policies/OrderPolicy.php"},"/app/Policies/PagePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Page;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass PagePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the page can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the page can view the model.\n     */\n    public function view(User $user, Page $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the page can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the page can update the model.\n     */\n    public function update(User $user, Page $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the page can delete the model.\n     */\n    public function delete(User $user, Page $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the page can restore the model.\n     */\n    public function restore(User $user, Page $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the page can permanently delete the model.\n     */\n    public function forceDelete(User $user, Page $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:296","path":"/app/Policies/PagePolicy.php"},"/app/Policies/PageTemplatePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\PageTemplate;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass PageTemplatePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the pageTemplate can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the pageTemplate can view the model.\n     */\n    public function view(User $user, PageTemplate $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the pageTemplate can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the pageTemplate can update the model.\n     */\n    public function update(User $user, PageTemplate $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the pageTemplate can delete the model.\n     */\n    public function delete(User $user, PageTemplate $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the pageTemplate can restore the model.\n     */\n    public function restore(User $user, PageTemplate $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the pageTemplate can permanently delete the model.\n     */\n    public function forceDelete(User $user, PageTemplate $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:339","path":"/app/Policies/PageTemplatePolicy.php"},"/app/Policies/PlatformPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Platform;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass PlatformPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the platform can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the platform can view the model.\n     */\n    public function view(User $user, Platform $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the platform can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the platform can update the model.\n     */\n    public function update(User $user, Platform $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the platform can delete the model.\n     */\n    public function delete(User $user, Platform $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the platform can restore the model.\n     */\n    public function restore(User $user, Platform $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the platform can permanently delete the model.\n     */\n    public function forceDelete(User $user, Platform $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:336","path":"/app/Policies/PlatformPolicy.php"},"/app/Policies/PostPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Post;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass PostPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the post can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the post can view the model.\n     */\n    public function view(User $user, Post $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the post can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the post can update the model.\n     */\n    public function update(User $user, Post $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the post can delete the model.\n     */\n    public function delete(User $user, Post $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the post can restore the model.\n     */\n    public function restore(User $user, Post $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the post can permanently delete the model.\n     */\n    public function forceDelete(User $user, Post $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:305","path":"/app/Policies/PostPolicy.php"},"/app/Policies/PostalCodePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\PostalCode;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass PostalCodePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the postalCode can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the postalCode can view the model.\n     */\n    public function view(User $user, PostalCode $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the postalCode can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the postalCode can update the model.\n     */\n    public function update(User $user, PostalCode $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the postalCode can delete the model.\n     */\n    public function delete(User $user, PostalCode $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the postalCode can restore the model.\n     */\n    public function restore(User $user, PostalCode $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the postalCode can permanently delete the model.\n     */\n    public function forceDelete(User $user, PostalCode $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:331","path":"/app/Policies/PostalCodePolicy.php"},"/app/Policies/ProductPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Product;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass ProductPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the product can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the product can view the model.\n     */\n    public function view(User $user, Product $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the product can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the product can update the model.\n     */\n    public function update(User $user, Product $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the product can delete the model.\n     */\n    public function delete(User $user, Product $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the product can restore the model.\n     */\n    public function restore(User $user, Product $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the product can permanently delete the model.\n     */\n    public function forceDelete(User $user, Product $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:320","path":"/app/Policies/ProductPolicy.php"},"/app/Policies/RevisionPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Revision;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass RevisionPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the revision can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the revision can view the model.\n     */\n    public function view(User $user, Revision $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the revision can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the revision can update the model.\n     */\n    public function update(User $user, Revision $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the revision can delete the model.\n     */\n    public function delete(User $user, Revision $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the revision can restore the model.\n     */\n    public function restore(User $user, Revision $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the revision can permanently delete the model.\n     */\n    public function forceDelete(User $user, Revision $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:338","path":"/app/Policies/RevisionPolicy.php"},"/app/Policies/SettingPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Setting;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass SettingPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the setting can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the setting can view the model.\n     */\n    public function view(User $user, Setting $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the setting can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the setting can update the model.\n     */\n    public function update(User $user, Setting $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the setting can delete the model.\n     */\n    public function delete(User $user, Setting $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the setting can restore the model.\n     */\n    public function restore(User $user, Setting $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the setting can permanently delete the model.\n     */\n    public function forceDelete(User $user, Setting $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:294","path":"/app/Policies/SettingPolicy.php"},"/app/Policies/SubscriberPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Subscriber;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass SubscriberPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the subscriber can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subscriber can view the model.\n     */\n    public function view(User $user, Subscriber $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subscriber can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subscriber can update the model.\n     */\n    public function update(User $user, Subscriber $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subscriber can delete the model.\n     */\n    public function delete(User $user, Subscriber $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the subscriber can restore the model.\n     */\n    public function restore(User $user, Subscriber $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the subscriber can permanently delete the model.\n     */\n    public function forceDelete(User $user, Subscriber $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:334","path":"/app/Policies/SubscriberPolicy.php"},"/app/Policies/TagPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass TagPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the tag can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the tag can view the model.\n     */\n    public function view(User $user, Tag $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the tag can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the tag can update the model.\n     */\n    public function update(User $user, Tag $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the tag can delete the model.\n     */\n    public function delete(User $user, Tag $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the tag can restore the model.\n     */\n    public function restore(User $user, Tag $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the tag can permanently delete the model.\n     */\n    public function forceDelete(User $user, Tag $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:293","path":"/app/Policies/TagPolicy.php"},"/app/Policies/TimezonePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Timezone;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass TimezonePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the timezone can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the timezone can view the model.\n     */\n    public function view(User $user, Timezone $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the timezone can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the timezone can update the model.\n     */\n    public function update(User $user, Timezone $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the timezone can delete the model.\n     */\n    public function delete(User $user, Timezone $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the timezone can restore the model.\n     */\n    public function restore(User $user, Timezone $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the timezone can permanently delete the model.\n     */\n    public function forceDelete(User $user, Timezone $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:311","path":"/app/Policies/TimezonePolicy.php"},"/app/Policies/UserPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:291","path":"/app/Policies/UserPolicy.php"},"/app/Policies/WhitelistPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Whitelist;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass WhitelistPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the whitelist can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the whitelist can view the model.\n     */\n    public function view(User $user, Whitelist $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the whitelist can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the whitelist can update the model.\n     */\n    public function update(User $user, Whitelist $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the whitelist can delete the model.\n     */\n    public function delete(User $user, Whitelist $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the whitelist can restore the model.\n     */\n    public function restore(User $user, Whitelist $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the whitelist can permanently delete the model.\n     */\n    public function forceDelete(User $user, Whitelist $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:342","path":"/app/Policies/WhitelistPolicy.php"},"/database/migrations/2023_09_10_000001_create_authors_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('authors', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('user_id');\n            $table->string('salutation');\n            $table->string('title');\n            $table->string('name');\n            $table->string('full_name');\n            $table->string('first_name');\n            $table->string('last_name');\n            $table->string('mail_address');\n            $table->string('website');\n            $table->text('address');\n            $table->json('social');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('authors');\n    }\n};\n","module":"entity:306","path":"/database/migrations/2023_09_10_000001_create_authors_table.php"},"/database/migrations/2023_09_10_000002_create_blacklists_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('blacklists', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('blacklists');\n    }\n};\n","module":"entity:346","path":"/database/migrations/2023_09_10_000002_create_blacklists_table.php"},"/database/migrations/2023_09_10_000003_create_bypass_tokens_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('bypass_tokens', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('token');\n            $table->unsignedBigInteger('user_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('bypass_tokens');\n    }\n};\n","module":"entity:343","path":"/database/migrations/2023_09_10_000003_create_bypass_tokens_table.php"},"/database/migrations/2023_09_10_000004_create_carts_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('carts', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('customer_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('carts');\n    }\n};\n","module":"entity:335","path":"/database/migrations/2023_09_10_000004_create_carts_table.php"},"/database/migrations/2023_09_10_000005_create_categorizables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('categorizables', function (Blueprint $table) {\n            $table->unsignedBigInteger('category_id');\n            $table->unsignedBigInteger('categoryable_id');\n            $table->string('categoryable_type');\n\n            $table->index('categoryable_id');\n            $table->index('categoryable_type');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('categorizables');\n    }\n};\n","module":"entity:329","path":"/database/migrations/2023_09_10_000005_create_categorizables_table.php"},"/database/migrations/2023_09_10_000002_create_categories_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('categories', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('uid');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('content')->nullable();\n            $table->json('data')->nullable();\n            $table->string('image')->nullable();\n            $table->string('thumbnail')->nullable();\n            $table->string('model')->nullable();\n            $table->unsignedBigInteger('language_id');\n            $table->unsignedBigInteger('translation_id')->nullable();\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('categories');\n    }\n};\n","module":"entity:292","path":"/database/migrations/2023_09_10_000002_create_categories_table.php"},"/database/migrations/2023_09_10_000003_create_comments_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('comments', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('content');\n            $table->json('translations');\n            $table->unsignedBigInteger('parent_id')->nullable();\n            $table->unsignedBigInteger('author_id')->nullable();\n            $table->boolean('is_from_author')->nullable();\n            $table->string('name');\n            $table->string('email');\n            $table->string('avatar')->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('comments');\n    }\n};\n","module":"entity:307","path":"/database/migrations/2023_09_10_000003_create_comments_table.php"},"/database/migrations/2023_09_10_000006_create_commentables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('commentables', function (Blueprint $table) {\n            $table->unsignedBigInteger('comment_id');\n            $table->unsignedBigInteger('commentable_id');\n            $table->string('commentable_type');\n\n            $table->index('commentable_id');\n            $table->index('commentable_type');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('commentables');\n    }\n};\n","module":"entity:345","path":"/database/migrations/2023_09_10_000006_create_commentables_table.php"},"/database/migrations/2023_09_10_000007_create_continents_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('continents', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('continents');\n    }\n};\n","module":"entity:332","path":"/database/migrations/2023_09_10_000007_create_continents_table.php"},"/database/migrations/2023_09_10_000006_create_countries_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('countries', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('continent_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('countries');\n    }\n};\n","module":"entity:309","path":"/database/migrations/2023_09_10_000006_create_countries_table.php"},"/database/migrations/2023_09_10_000008_create_country_currency_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('country_currency', function (Blueprint $table) {\n            $table->unsignedBigInteger('country_id');\n            $table->unsignedBigInteger('currency_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('country_currency');\n    }\n};\n","module":"entity:319","path":"/database/migrations/2023_09_10_000008_create_country_currency_table.php"},"/database/migrations/2023_09_10_000009_create_country_language_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('country_language', function (Blueprint $table) {\n            $table->unsignedBigInteger('language_id');\n            $table->unsignedBigInteger('country_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('country_language');\n    }\n};\n","module":"entity:317","path":"/database/migrations/2023_09_10_000009_create_country_language_table.php"},"/database/migrations/2023_09_10_000010_create_country_timezone_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('country_timezone', function (Blueprint $table) {\n            $table->unsignedBigInteger('country_id');\n            $table->unsignedBigInteger('timezone_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('country_timezone');\n    }\n};\n","module":"entity:321","path":"/database/migrations/2023_09_10_000010_create_country_timezone_table.php"},"/database/migrations/2023_09_10_000007_create_currencies_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('currencies', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('currencies');\n    }\n};\n","module":"entity:310","path":"/database/migrations/2023_09_10_000007_create_currencies_table.php"},"/database/migrations/2023_09_10_000011_create_customers_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('customers', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('user_id')->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('customers');\n    }\n};\n","module":"entity:333","path":"/database/migrations/2023_09_10_000011_create_customers_table.php"},"/database/migrations/2023_09_10_000012_create_items_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('items', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('uid');\n            $table->unsignedBigInteger('main_category_id')->nullable();\n            $table->string('title');\n            $table->string('slug');\n            $table->text('short')->nullable();\n            $table->text('content')->nullable();\n            $table->json('data')->nullable();\n            $table->string('image')->nullable();\n            $table->string('thumbnail')->nullable();\n            $table->unsignedBigInteger('author_id');\n            $table->unsignedBigInteger('language_id');\n            $table->unsignedBigInteger('translation_id')->nullable();\n\n            $table->index('uid');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('items');\n    }\n};\n","module":"entity:324","path":"/database/migrations/2023_09_10_000012_create_items_table.php"},"/database/migrations/2023_09_10_000008_create_languages_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('languages', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->string('isocode');\n            $table->string('flag')->nullable();\n            $table->boolean('active')->default(0);\n            $table->boolean('published');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('languages');\n    }\n};\n","module":"entity:308","path":"/database/migrations/2023_09_10_000008_create_languages_table.php"},"/database/migrations/2023_09_10_000013_create_orders_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('orders', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('orders');\n    }\n};\n","module":"entity:341","path":"/database/migrations/2023_09_10_000013_create_orders_table.php"},"/database/migrations/2023_09_10_000009_create_pages_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('pages', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('uid');\n            $table->unsignedBigInteger('main_category_id')->nullable();\n            $table->string('title');\n            $table->string('slug');\n            $table->text('short')->nullable();\n            $table->text('content')->nullable();\n            $table->json('data')->nullable();\n            $table->string('image')->nullable();\n            $table->string('thumbnail')->nullable();\n            $table->unsignedBigInteger('author_id');\n            $table->unsignedBigInteger('language_id')->nullable();\n            $table->unsignedBigInteger('translation_id')->nullable();\n\n            $table->index('uid');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('pages');\n    }\n};\n","module":"entity:296","path":"/database/migrations/2023_09_10_000009_create_pages_table.php"},"/database/migrations/2023_09_10_000014_create_page_templates_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('page_templates', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('page_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('page_templates');\n    }\n};\n","module":"entity:339","path":"/database/migrations/2023_09_10_000014_create_page_templates_table.php"},"/database/migrations/2023_09_10_000015_create_platforms_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('platforms', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('platforms');\n    }\n};\n","module":"entity:336","path":"/database/migrations/2023_09_10_000015_create_platforms_table.php"},"/database/migrations/2023_09_10_000011_create_posts_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('posts', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('uid');\n            $table->unsignedBigInteger('main_category_id')->nullable();\n            $table->string('title');\n            $table->string('slug');\n            $table->text('short')->nullable();\n            $table->text('content')->nullable();\n            $table->json('data')->nullable();\n            $table->string('image')->nullable();\n            $table->string('thumbnail')->nullable();\n            $table->unsignedBigInteger('author_id');\n            $table->unsignedBigInteger('language_id')->nullable();\n            $table->unsignedBigInteger('translation_id')->nullable();\n\n            $table->index('uid');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('posts');\n    }\n};\n","module":"entity:305","path":"/database/migrations/2023_09_10_000011_create_posts_table.php"},"/database/migrations/2023_09_10_000016_create_postal_codes_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('postal_codes', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('postal_codes');\n    }\n};\n","module":"entity:331","path":"/database/migrations/2023_09_10_000016_create_postal_codes_table.php"},"/database/migrations/2023_09_10_000017_create_products_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('products', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('main_category_id')->nullable();\n            $table->unsignedBigInteger('language_id');\n            $table->unsignedBigInteger('author_id');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('products');\n    }\n};\n","module":"entity:320","path":"/database/migrations/2023_09_10_000017_create_products_table.php"},"/database/migrations/2023_09_10_000018_create_revisions_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('revisions', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('revname')->nullable();\n            $table->text('revcomment')->nullable();\n            $table->dateTime('revretention')->nullable();\n            $table->unsignedBigInteger('uid');\n            $table->unsignedBigInteger('main_category_id')->nullable();\n            $table->string('title');\n            $table->string('slug');\n            $table->text('short')->nullable();\n            $table->text('content')->nullable();\n            $table->json('data')->nullable();\n            $table->string('image')->nullable();\n            $table->string('thumbnail')->nullable();\n            $table->unsignedBigInteger('author_id');\n            $table->unsignedBigInteger('language_id')->nullable();\n            $table->unsignedBigInteger('translation_id')->nullable();\n            $table->json('categories')->nullable();\n            $table->json('tags')->nullable();\n\n            $table->index('uid');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('revisions');\n    }\n};\n","module":"entity:338","path":"/database/migrations/2023_09_10_000018_create_revisions_table.php"},"/database/migrations/2023_09_10_000019_create_revisionables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('revisionables', function (Blueprint $table) {\n            $table->unsignedBigInteger('revision_id');\n            $table->unsignedBigInteger('revisionable_id');\n            $table->string('revisionable_type');\n\n            $table->index('revisionable_id');\n            $table->index('revisionable_type');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('revisionables');\n    }\n};\n","module":"entity:340","path":"/database/migrations/2023_09_10_000019_create_revisionables_table.php"},"/database/migrations/2023_09_10_000012_create_settings_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('settings', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('settings');\n    }\n};\n","module":"entity:294","path":"/database/migrations/2023_09_10_000012_create_settings_table.php"},"/database/migrations/2023_09_10_000020_create_subscribers_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('subscribers', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('user_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('subscribers');\n    }\n};\n","module":"entity:334","path":"/database/migrations/2023_09_10_000020_create_subscribers_table.php"},"/database/migrations/2023_09_10_000021_create_syncables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('syncables', function (Blueprint $table) {\n            $table->unsignedBigInteger('platform_id');\n            $table->unsignedBigInteger('platformable_id');\n            $table->string('platformable_type');\n\n            $table->index('platformable_id');\n            $table->index('platformable_type');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('syncables');\n    }\n};\n","module":"entity:337","path":"/database/migrations/2023_09_10_000021_create_syncables_table.php"},"/database/migrations/2023_09_10_000013_create_tags_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('tags', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('uid');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('content')->nullable();\n            $table->json('data')->nullable();\n            $table->string('image')->nullable();\n            $table->string('thumbnail')->nullable();\n            $table->integer('weight')->nullable();\n            $table->string('model')->nullable();\n            $table->unsignedBigInteger('language_id')->nullable();\n            $table->unsignedBigInteger('translation_id')->nullable();\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('tags');\n    }\n};\n","module":"entity:293","path":"/database/migrations/2023_09_10_000013_create_tags_table.php"},"/database/migrations/2023_09_10_000022_create_taggables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('taggables', function (Blueprint $table) {\n            $table->unsignedBigInteger('tag_id');\n            $table->unsignedBigInteger('taggable_id');\n            $table->string('taggable_type');\n\n            $table->index('taggable_id');\n            $table->index('taggable_type');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('taggables');\n    }\n};\n","module":"entity:330","path":"/database/migrations/2023_09_10_000022_create_taggables_table.php"},"/database/migrations/2023_09_10_000014_create_timezones_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('timezones', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('timezones');\n    }\n};\n","module":"entity:311","path":"/database/migrations/2023_09_10_000014_create_timezones_table.php"},"/database/migrations/2014_10_12_000000_create_users_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->string('remember_token', 100)->nullable();\n            $table->text('two_factor_secret')->nullable();\n            $table->text('two_factor_recovery_codes')->nullable();\n            $table->timestamp('two_factor_confirmed_at')->nullable();\n            $table->foreignId('current_team_id')->nullable();\n            $table->text('profile_photo_path')->nullable();\n            $table->unsignedBigInteger('whitelist_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('users');\n    }\n};\n","module":"entity:291","path":"/database/migrations/2014_10_12_000000_create_users_table.php"},"/database/migrations/2023_09_10_000023_create_whitelists_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('whitelists', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('comment');\n            $table->string('ip-address');\n            $table->string('lookup')->nullable();\n            $table->dateTime('expires');\n\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('whitelists');\n    }\n};\n","module":"entity:342","path":"/database/migrations/2023_09_10_000023_create_whitelists_table.php"},"/database/migrations/2023_09_10_009001_add_foreigns_to_authors_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('authors', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('authors', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n","module":"entity:306|entity:291","path":"/database/migrations/2023_09_10_009001_add_foreigns_to_authors_table.php"},"/database/migrations/2023_09_10_009002_add_foreigns_to_bypass_tokens_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('bypass_tokens', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('bypass_tokens', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n","module":"entity:343|entity:291","path":"/database/migrations/2023_09_10_009002_add_foreigns_to_bypass_tokens_table.php"},"/database/migrations/2023_09_10_009003_add_foreigns_to_carts_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('carts', function (Blueprint $table) {\n            $table\n                ->foreign('customer_id')\n                ->references('id')\n                ->on('customers')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('carts', function (Blueprint $table) {\n            $table->dropForeign(['customer_id']);\n        });\n    }\n};\n","module":"entity:335|entity:333","path":"/database/migrations/2023_09_10_009003_add_foreigns_to_carts_table.php"},"/database/migrations/2023_09_10_009004_add_foreigns_to_categorizables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('categorizables', function (Blueprint $table) {\n            $table\n                ->foreign('category_id')\n                ->references('id')\n                ->on('categories')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('categorizables', function (Blueprint $table) {\n            $table->dropForeign(['category_id']);\n        });\n    }\n};\n","module":"entity:329|entity:292","path":"/database/migrations/2023_09_10_009004_add_foreigns_to_categorizables_table.php"},"/database/migrations/2023_09_10_009001_add_foreigns_to_categories_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('categories', function (Blueprint $table) {\n            $table\n                ->foreign('language_id')\n                ->references('id')\n                ->on('languages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('translation_id')\n                ->references('id')\n                ->on('categories')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('categories', function (Blueprint $table) {\n            $table->dropForeign(['language_id']);\n            $table->dropForeign(['translation_id']);\n        });\n    }\n};\n","module":"entity:292|entity:308|entity:292","path":"/database/migrations/2023_09_10_009001_add_foreigns_to_categories_table.php"},"/database/migrations/2023_09_10_009005_add_foreigns_to_comments_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('comments', function (Blueprint $table) {\n            $table\n                ->foreign('parent_id')\n                ->references('id')\n                ->on('comments')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('author_id')\n                ->references('id')\n                ->on('authors')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('comments', function (Blueprint $table) {\n            $table->dropForeign(['parent_id']);\n            $table->dropForeign(['author_id']);\n        });\n    }\n};\n","module":"entity:307|entity:307|entity:306","path":"/database/migrations/2023_09_10_009005_add_foreigns_to_comments_table.php"},"/database/migrations/2023_09_10_009006_add_foreigns_to_commentables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('commentables', function (Blueprint $table) {\n            $table\n                ->foreign('comment_id')\n                ->references('id')\n                ->on('comments')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('commentables', function (Blueprint $table) {\n            $table->dropForeign(['comment_id']);\n        });\n    }\n};\n","module":"entity:345|entity:307","path":"/database/migrations/2023_09_10_009006_add_foreigns_to_commentables_table.php"},"/database/migrations/2023_09_10_009007_add_foreigns_to_countries_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('countries', function (Blueprint $table) {\n            $table\n                ->foreign('continent_id')\n                ->references('id')\n                ->on('continents')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('countries', function (Blueprint $table) {\n            $table->dropForeign(['continent_id']);\n        });\n    }\n};\n","module":"entity:309|entity:332","path":"/database/migrations/2023_09_10_009007_add_foreigns_to_countries_table.php"},"/database/migrations/2023_09_10_009008_add_foreigns_to_country_currency_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('country_currency', function (Blueprint $table) {\n            $table\n                ->foreign('country_id')\n                ->references('id')\n                ->on('countries')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('currency_id')\n                ->references('id')\n                ->on('currencies')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('country_currency', function (Blueprint $table) {\n            $table->dropForeign(['country_id']);\n            $table->dropForeign(['currency_id']);\n        });\n    }\n};\n","module":"entity:319|entity:309|entity:310","path":"/database/migrations/2023_09_10_009008_add_foreigns_to_country_currency_table.php"},"/database/migrations/2023_09_10_009009_add_foreigns_to_country_language_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('country_language', function (Blueprint $table) {\n            $table\n                ->foreign('language_id')\n                ->references('id')\n                ->on('languages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('country_id')\n                ->references('id')\n                ->on('countries')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('country_language', function (Blueprint $table) {\n            $table->dropForeign(['language_id']);\n            $table->dropForeign(['country_id']);\n        });\n    }\n};\n","module":"entity:317|entity:308|entity:309","path":"/database/migrations/2023_09_10_009009_add_foreigns_to_country_language_table.php"},"/database/migrations/2023_09_10_009010_add_foreigns_to_country_timezone_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('country_timezone', function (Blueprint $table) {\n            $table\n                ->foreign('country_id')\n                ->references('id')\n                ->on('countries')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('timezone_id')\n                ->references('id')\n                ->on('timezones')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('country_timezone', function (Blueprint $table) {\n            $table->dropForeign(['country_id']);\n            $table->dropForeign(['timezone_id']);\n        });\n    }\n};\n","module":"entity:321|entity:309|entity:311","path":"/database/migrations/2023_09_10_009010_add_foreigns_to_country_timezone_table.php"},"/database/migrations/2023_09_10_009011_add_foreigns_to_customers_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('customers', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('customers', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n","module":"entity:333|entity:291","path":"/database/migrations/2023_09_10_009011_add_foreigns_to_customers_table.php"},"/database/migrations/2023_09_10_009012_add_foreigns_to_items_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('items', function (Blueprint $table) {\n            $table\n                ->foreign('main_category_id')\n                ->references('id')\n                ->on('categories')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('author_id')\n                ->references('id')\n                ->on('authors')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('language_id')\n                ->references('id')\n                ->on('languages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('translation_id')\n                ->references('id')\n                ->on('items')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('items', function (Blueprint $table) {\n            $table->dropForeign(['main_category_id']);\n            $table->dropForeign(['author_id']);\n            $table->dropForeign(['language_id']);\n            $table->dropForeign(['translation_id']);\n        });\n    }\n};\n","module":"entity:324|entity:292|entity:306|entity:308|entity:324","path":"/database/migrations/2023_09_10_009012_add_foreigns_to_items_table.php"},"/database/migrations/2023_09_10_009013_add_foreigns_to_pages_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('pages', function (Blueprint $table) {\n            $table\n                ->foreign('main_category_id')\n                ->references('id')\n                ->on('categories')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('author_id')\n                ->references('id')\n                ->on('authors')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('language_id')\n                ->references('id')\n                ->on('languages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('translation_id')\n                ->references('id')\n                ->on('pages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('pages', function (Blueprint $table) {\n            $table->dropForeign(['main_category_id']);\n            $table->dropForeign(['author_id']);\n            $table->dropForeign(['language_id']);\n            $table->dropForeign(['translation_id']);\n        });\n    }\n};\n","module":"entity:296|entity:292|entity:306|entity:308|entity:296","path":"/database/migrations/2023_09_10_009013_add_foreigns_to_pages_table.php"},"/database/migrations/2023_09_10_009014_add_foreigns_to_page_templates_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('page_templates', function (Blueprint $table) {\n            $table\n                ->foreign('page_id')\n                ->references('id')\n                ->on('pages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('page_templates', function (Blueprint $table) {\n            $table->dropForeign(['page_id']);\n        });\n    }\n};\n","module":"entity:339|entity:296","path":"/database/migrations/2023_09_10_009014_add_foreigns_to_page_templates_table.php"},"/database/migrations/2023_09_10_009003_add_foreigns_to_posts_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('posts', function (Blueprint $table) {\n            $table\n                ->foreign('main_category_id')\n                ->references('id')\n                ->on('categories')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('author_id')\n                ->references('id')\n                ->on('authors')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('language_id')\n                ->references('id')\n                ->on('languages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('translation_id')\n                ->references('id')\n                ->on('posts')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('posts', function (Blueprint $table) {\n            $table->dropForeign(['main_category_id']);\n            $table->dropForeign(['author_id']);\n            $table->dropForeign(['language_id']);\n            $table->dropForeign(['translation_id']);\n        });\n    }\n};\n","module":"entity:305|entity:292|entity:306|entity:308|entity:305","path":"/database/migrations/2023_09_10_009003_add_foreigns_to_posts_table.php"},"/database/migrations/2023_09_10_009015_add_foreigns_to_products_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('products', function (Blueprint $table) {\n            $table\n                ->foreign('main_category_id')\n                ->references('id')\n                ->on('categories')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('language_id')\n                ->references('id')\n                ->on('languages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('author_id')\n                ->references('id')\n                ->on('authors')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('products', function (Blueprint $table) {\n            $table->dropForeign(['main_category_id']);\n            $table->dropForeign(['language_id']);\n            $table->dropForeign(['author_id']);\n        });\n    }\n};\n","module":"entity:320|entity:292|entity:308|entity:306","path":"/database/migrations/2023_09_10_009015_add_foreigns_to_products_table.php"},"/database/migrations/2023_09_10_009016_add_foreigns_to_revisionables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('revisionables', function (Blueprint $table) {\n            $table\n                ->foreign('revision_id')\n                ->references('id')\n                ->on('revisions')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('revisionables', function (Blueprint $table) {\n            $table->dropForeign(['revision_id']);\n        });\n    }\n};\n","module":"entity:340|entity:338","path":"/database/migrations/2023_09_10_009016_add_foreigns_to_revisionables_table.php"},"/database/migrations/2023_09_10_009017_add_foreigns_to_subscribers_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('subscribers', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('subscribers', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n","module":"entity:334|entity:291","path":"/database/migrations/2023_09_10_009017_add_foreigns_to_subscribers_table.php"},"/database/migrations/2023_09_10_009018_add_foreigns_to_syncables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('syncables', function (Blueprint $table) {\n            $table\n                ->foreign('platform_id')\n                ->references('id')\n                ->on('platforms')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('syncables', function (Blueprint $table) {\n            $table->dropForeign(['platform_id']);\n        });\n    }\n};\n","module":"entity:337|entity:336","path":"/database/migrations/2023_09_10_009018_add_foreigns_to_syncables_table.php"},"/database/migrations/2023_09_10_009004_add_foreigns_to_tags_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('tags', function (Blueprint $table) {\n            $table\n                ->foreign('language_id')\n                ->references('id')\n                ->on('languages')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('translation_id')\n                ->references('id')\n                ->on('tags')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('tags', function (Blueprint $table) {\n            $table->dropForeign(['language_id']);\n            $table->dropForeign(['translation_id']);\n        });\n    }\n};\n","module":"entity:293|entity:308|entity:293","path":"/database/migrations/2023_09_10_009004_add_foreigns_to_tags_table.php"},"/database/migrations/2023_09_10_009019_add_foreigns_to_taggables_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('taggables', function (Blueprint $table) {\n            $table\n                ->foreign('tag_id')\n                ->references('id')\n                ->on('tags')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('taggables', function (Blueprint $table) {\n            $table->dropForeign(['tag_id']);\n        });\n    }\n};\n","module":"entity:330|entity:293","path":"/database/migrations/2023_09_10_009019_add_foreigns_to_taggables_table.php"},"/database/migrations/2023_09_10_009020_add_foreigns_to_users_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('users', function (Blueprint $table) {\n            $table\n                ->foreign('whitelist_id')\n                ->references('id')\n                ->on('whitelists')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('users', function (Blueprint $table) {\n            $table->dropForeign(['whitelist_id']);\n        });\n    }\n};\n","module":"entity:291|entity:342","path":"/database/migrations/2023_09_10_009020_add_foreigns_to_users_table.php"},"/app/Models/Author.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Author extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = [\n        'user_id',\n        'salutation',\n        'title',\n        'name',\n        'full_name',\n        'first_name',\n        'last_name',\n        'mail_address',\n        'website',\n        'address',\n        'social',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'social' => 'array',\n    ];\n\n    public function posts()\n    {\n        return $this->hasMany(Post::class);\n    }\n\n    public function user()\n    {\n        return $this->belongsTo(User::class);\n    }\n\n    public function pages()\n    {\n        return $this->hasMany(Page::class);\n    }\n\n    public function products()\n    {\n        return $this->hasMany(Product::class);\n    }\n\n    public function items()\n    {\n        return $this->hasMany(Item::class);\n    }\n\n    public function comments()\n    {\n        return $this->hasMany(Comment::class);\n    }\n}\n","module":"entity:306","path":"/app/Models/Author.php"},"/app/Models/Blacklist.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Blacklist extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [];\n\n    protected $searchableFields = ['*'];\n}\n","module":"entity:346","path":"/app/Models/Blacklist.php"},"/app/Models/BypassToken.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass BypassToken extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['token', 'user_id'];\n\n    protected $searchableFields = ['*'];\n\n    protected $table = 'bypass_tokens';\n\n    public function user()\n    {\n        return $this->belongsTo(User::class);\n    }\n}\n","module":"entity:343","path":"/app/Models/BypassToken.php"},"/app/Models/Cart.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Cart extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['customer_id'];\n\n    protected $searchableFields = ['*'];\n\n    public function customer()\n    {\n        return $this->belongsTo(Customer::class);\n    }\n}\n","module":"entity:335","path":"/app/Models/Cart.php"},"/app/Models/Category.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Category extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = [\n        'uid',\n        'title',\n        'slug',\n        'content',\n        'data',\n        'image',\n        'thumbnail',\n        'model',\n        'language_id',\n        'translation_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'data' => 'array',\n    ];\n\n    public function language()\n    {\n        return $this->belongsTo(Language::class);\n    }\n\n    public function translation()\n    {\n        return $this->belongsTo(Category::class, 'translation_id');\n    }\n\n    public function hasTranslation()\n    {\n        return $this->hasOne(Category::class, 'translation_id');\n    }\n\n    public function mainCategoryPosts()\n    {\n        return $this->hasMany(Post::class, 'main_category_id');\n    }\n\n    public function mainCategoryItems()\n    {\n        return $this->hasMany(Item::class, 'main_category_id');\n    }\n\n    public function mainCategoryProducts()\n    {\n        return $this->hasMany(Product::class, 'main_category_id');\n    }\n\n    public function mainCategoryPages()\n    {\n        return $this->hasMany(Page::class, 'main_category_id');\n    }\n\n    public function posts()\n    {\n        return $this->morphedByMany(Post::class, 'categoryable');\n    }\n\n    public function products()\n    {\n        return $this->morphedByMany(Product::class, 'categoryable');\n    }\n\n    public function pages()\n    {\n        return $this->morphedByMany(Page::class, 'categoryable');\n    }\n\n    public function items()\n    {\n        return $this->morphedByMany(Item::class, 'categoryable');\n    }\n}\n","module":"entity:292","path":"/app/Models/Category.php"},"/app/Models/Comment.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Comment extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'title',\n        'slug',\n        'content',\n        'translations',\n        'parent_id',\n        'author_id',\n        'is_from_author',\n        'name',\n        'email',\n        'avatar',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'translations' => 'array',\n        'is_from_author' => 'boolean',\n    ];\n\n    public function parent()\n    {\n        return $this->hasOne(Comment::class, 'parent_id');\n    }\n\n    public function comment()\n    {\n        return $this->belongsTo(Comment::class, 'parent_id');\n    }\n\n    public function author()\n    {\n        return $this->belongsTo(Author::class);\n    }\n\n    public function posts()\n    {\n        return $this->morphedByMany(Post::class, 'commentable');\n    }\n\n    public function pages()\n    {\n        return $this->morphedByMany(Page::class, 'commentable');\n    }\n}\n","module":"entity:307","path":"/app/Models/Comment.php"},"/app/Models/Continent.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Continent extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [];\n\n    protected $searchableFields = ['*'];\n\n    public function countries()\n    {\n        return $this->hasMany(Country::class);\n    }\n}\n","module":"entity:332","path":"/app/Models/Continent.php"},"/app/Models/Country.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Country extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['continent_id'];\n\n    protected $searchableFields = ['*'];\n\n    public function continent()\n    {\n        return $this->belongsTo(Continent::class);\n    }\n\n    public function languages()\n    {\n        return $this->belongsToMany(Language::class);\n    }\n\n    public function currencies()\n    {\n        return $this->belongsToMany(Currency::class);\n    }\n\n    public function timezones()\n    {\n        return $this->belongsToMany(Timezone::class);\n    }\n}\n","module":"entity:309","path":"/app/Models/Country.php"},"/app/Models/Currency.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Currency extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [];\n\n    protected $searchableFields = ['*'];\n\n    public function countries()\n    {\n        return $this->belongsToMany(Country::class);\n    }\n}\n","module":"entity:310","path":"/app/Models/Currency.php"},"/app/Models/Customer.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Customer extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['user_id'];\n\n    protected $searchableFields = ['*'];\n\n    public function carts()\n    {\n        return $this->hasMany(Cart::class);\n    }\n\n    public function user()\n    {\n        return $this->belongsTo(User::class);\n    }\n}\n","module":"entity:333","path":"/app/Models/Customer.php"},"/app/Models/Item.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Item extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = [\n        'uid',\n        'main_category_id',\n        'title',\n        'slug',\n        'short',\n        'content',\n        'data',\n        'image',\n        'thumbnail',\n        'author_id',\n        'language_id',\n        'translation_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'data' => 'array',\n    ];\n\n    public function author()\n    {\n        return $this->belongsTo(Author::class);\n    }\n\n    public function language()\n    {\n        return $this->belongsTo(Language::class);\n    }\n\n    public function translation()\n    {\n        return $this->belongsTo(Item::class, 'translation_id');\n    }\n\n    public function items()\n    {\n        return $this->hasMany(Item::class, 'translation_id');\n    }\n\n    public function mainCategory()\n    {\n        return $this->belongsTo(Category::class, 'main_category_id');\n    }\n\n    public function categories()\n    {\n        return $this->morphToMany(Category::class, 'categoryable');\n    }\n\n    public function tags()\n    {\n        return $this->morphToMany(Tag::class, 'taggable');\n    }\n\n    public function revisions()\n    {\n        return $this->morphToMany(Revision::class, 'revisionable');\n    }\n}\n","module":"entity:324","path":"/app/Models/Item.php"},"/app/Models/Language.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Language extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = [\n        'title',\n        'slug',\n        'isocode',\n        'flag',\n        'active',\n        'published',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'active' => 'boolean',\n        'published' => 'boolean',\n    ];\n\n    public function tags()\n    {\n        return $this->hasMany(Tag::class);\n    }\n\n    public function posts()\n    {\n        return $this->hasMany(Post::class);\n    }\n\n    public function categories()\n    {\n        return $this->hasMany(Category::class);\n    }\n\n    public function pages()\n    {\n        return $this->hasMany(Page::class);\n    }\n\n    public function products()\n    {\n        return $this->hasMany(Product::class);\n    }\n\n    public function items()\n    {\n        return $this->hasMany(Item::class);\n    }\n\n    public function countries()\n    {\n        return $this->belongsToMany(Country::class);\n    }\n}\n","module":"entity:308","path":"/app/Models/Language.php"},"/app/Models/Order.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Order extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [];\n\n    protected $searchableFields = ['*'];\n}\n","module":"entity:341","path":"/app/Models/Order.php"},"/app/Models/Page.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Page extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = [\n        'uid',\n        'main_category_id',\n        'title',\n        'slug',\n        'short',\n        'content',\n        'data',\n        'image',\n        'thumbnail',\n        'author_id',\n        'language_id',\n        'translation_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'data' => 'array',\n    ];\n\n    public function author()\n    {\n        return $this->belongsTo(Author::class);\n    }\n\n    public function language()\n    {\n        return $this->belongsTo(Language::class);\n    }\n\n    public function mainCategory()\n    {\n        return $this->belongsTo(Category::class, 'main_category_id');\n    }\n\n    public function pages()\n    {\n        return $this->hasMany(Page::class, 'translation_id');\n    }\n\n    public function translation()\n    {\n        return $this->belongsTo(Page::class, 'translation_id');\n    }\n\n    public function pageTemplates()\n    {\n        return $this->hasMany(PageTemplate::class);\n    }\n\n    public function categories()\n    {\n        return $this->morphToMany(Category::class, 'categoryable');\n    }\n\n    public function tags()\n    {\n        return $this->morphToMany(Tag::class, 'taggable');\n    }\n\n    public function comments()\n    {\n        return $this->morphToMany(Comment::class, 'commentable');\n    }\n}\n","module":"entity:296","path":"/app/Models/Page.php"},"/app/Models/PageTemplate.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass PageTemplate extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['page_id'];\n\n    protected $searchableFields = ['*'];\n\n    protected $table = 'page_templates';\n\n    public function page()\n    {\n        return $this->belongsTo(Page::class);\n    }\n}\n","module":"entity:339","path":"/app/Models/PageTemplate.php"},"/app/Models/Platform.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Platform extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [];\n\n    protected $searchableFields = ['*'];\n\n    public function users()\n    {\n        return $this->morphedByMany(User::class, 'platformable');\n    }\n}\n","module":"entity:336","path":"/app/Models/Platform.php"},"/app/Models/Post.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Post extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = [\n        'uid',\n        'main_category_id',\n        'title',\n        'slug',\n        'short',\n        'content',\n        'data',\n        'image',\n        'thumbnail',\n        'author_id',\n        'language_id',\n        'translation_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'data' => 'array',\n    ];\n\n    public function language()\n    {\n        return $this->belongsTo(Language::class);\n    }\n\n    public function author()\n    {\n        return $this->belongsTo(Author::class);\n    }\n\n    public function hasTranslation()\n    {\n        return $this->hasOne(Post::class, 'translation_id');\n    }\n\n    public function translation()\n    {\n        return $this->belongsTo(Post::class, 'translation_id');\n    }\n\n    public function mainCategory()\n    {\n        return $this->belongsTo(Category::class, 'main_category_id');\n    }\n\n    public function categories()\n    {\n        return $this->morphToMany(Category::class, 'categoryable');\n    }\n\n    public function tags()\n    {\n        return $this->morphToMany(Tag::class, 'taggable');\n    }\n\n    public function comments()\n    {\n        return $this->morphToMany(Comment::class, 'commentable');\n    }\n\n    public function revisions()\n    {\n        return $this->morphToMany(Revision::class, 'revisionable');\n    }\n}\n","module":"entity:305","path":"/app/Models/Post.php"},"/app/Models/PostalCode.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass PostalCode extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [];\n\n    protected $searchableFields = ['*'];\n\n    protected $table = 'postal_codes';\n}\n","module":"entity:331","path":"/app/Models/PostalCode.php"},"/app/Models/Product.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Product extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = ['main_category_id', 'language_id', 'author_id'];\n\n    protected $searchableFields = ['*'];\n\n    public function mainCategory()\n    {\n        return $this->belongsTo(Category::class, 'main_category_id');\n    }\n\n    public function language()\n    {\n        return $this->belongsTo(Language::class);\n    }\n\n    public function author()\n    {\n        return $this->belongsTo(Author::class);\n    }\n\n    public function categories()\n    {\n        return $this->morphToMany(Category::class, 'categoryable');\n    }\n\n    public function tags()\n    {\n        return $this->morphToMany(Tag::class, 'taggable');\n    }\n}\n","module":"entity:320","path":"/app/Models/Product.php"},"/app/Models/Revision.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Revision extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = [\n        'revname',\n        'revcomment',\n        'revretention',\n        'uid',\n        'main_category_id',\n        'title',\n        'slug',\n        'short',\n        'content',\n        'data',\n        'image',\n        'thumbnail',\n        'author_id',\n        'language_id',\n        'translation_id',\n        'categories',\n        'tags',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'revretention' => 'datetime',\n        'data' => 'array',\n        'categories' => 'array',\n        'tags' => 'array',\n    ];\n\n    public function items()\n    {\n        return $this->morphedByMany(Item::class, 'revisionable');\n    }\n\n    public function posts()\n    {\n        return $this->morphedByMany(Post::class, 'revisionable');\n    }\n}\n","module":"entity:338","path":"/app/Models/Revision.php"},"/app/Models/Setting.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Setting extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [];\n\n    protected $searchableFields = ['*'];\n}\n","module":"entity:294","path":"/app/Models/Setting.php"},"/app/Models/Subscriber.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Subscriber extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['user_id'];\n\n    protected $searchableFields = ['*'];\n\n    public function user()\n    {\n        return $this->belongsTo(User::class);\n    }\n}\n","module":"entity:334","path":"/app/Models/Subscriber.php"},"/app/Models/Tag.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Tag extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = [\n        'uid',\n        'title',\n        'slug',\n        'content',\n        'data',\n        'image',\n        'thumbnail',\n        'weight',\n        'model',\n        'language_id',\n        'translation_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'data' => 'array',\n    ];\n\n    public function language()\n    {\n        return $this->belongsTo(Language::class);\n    }\n\n    public function hasTranslation()\n    {\n        return $this->hasOne(Tag::class, 'translation_id');\n    }\n\n    public function translation()\n    {\n        return $this->belongsTo(Tag::class, 'translation_id');\n    }\n\n    public function posts()\n    {\n        return $this->morphedByMany(Post::class, 'taggable');\n    }\n\n    public function pages()\n    {\n        return $this->morphedByMany(Page::class, 'taggable');\n    }\n\n    public function products()\n    {\n        return $this->morphedByMany(Product::class, 'taggable');\n    }\n\n    public function items()\n    {\n        return $this->morphedByMany(Item::class, 'taggable');\n    }\n}\n","module":"entity:293","path":"/app/Models/Tag.php"},"/app/Models/Timezone.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Timezone extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [];\n\n    protected $searchableFields = ['*'];\n\n    public function countries()\n    {\n        return $this->belongsToMany(Country::class);\n    }\n}\n","module":"entity:311","path":"/app/Models/Timezone.php"},"app/Models/Traits/FilamentTrait.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models\\Traits;\n\ntrait FilamentTrait\n{\n    /*\n     * Returns whether the user is allowed to access Filament\n     */\n    public function canAccessFilament(): bool\n    {\n        return $this->isSuperAdmin();\n    }\n}\n","module":"plugin:app.vemto.filament","path":"app/Models/Traits/FilamentTrait.php"},"/app/Models/User.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse Laravel\\Sanctum\\HasApiTokens;\nuse App\\Models\\Scopes\\Searchable;\nuse App\\Models\\Traits\\FilamentTrait;\nuse Laravel\\Jetstream\\HasProfilePhoto;\nuse Illuminate\\Notifications\\Notifiable;\nuse Filament\\Models\\Contracts\\FilamentUser;\nuse Laravel\\Fortify\\TwoFactorAuthenticatable;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable implements FilamentUser\n{\n    use Notifiable;\n    use HasFactory;\n    use Searchable;\n    use HasApiTokens;\n    use FilamentTrait;\n    use HasProfilePhoto;\n    use TwoFactorAuthenticatable;\n\n    protected $fillable = ['name', 'email', 'password', 'whitelist_id'];\n\n    protected $searchableFields = ['*'];\n\n    protected $hidden = [\n        'password',\n        'remember_token',\n        'two_factor_secret',\n        'two_factor_recovery_codes',\n    ];\n\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n        'two_factor_confirmed_at' => 'datetime',\n    ];\n\n    public function authors()\n    {\n        return $this->hasMany(Author::class);\n    }\n\n    public function customer()\n    {\n        return $this->hasOne(Customer::class);\n    }\n\n    public function subscriber()\n    {\n        return $this->hasOne(Subscriber::class);\n    }\n\n    public function whitelist()\n    {\n        return $this->belongsTo(Whitelist::class);\n    }\n\n    public function bypassTokens()\n    {\n        return $this->hasMany(BypassToken::class);\n    }\n\n    public function platforms()\n    {\n        return $this->morphToMany(Platform::class, 'platformable');\n    }\n\n    public function isSuperAdmin(): bool\n    {\n        return in_array($this->email, config('auth.super_admins'));\n    }\n}\n","module":"entity:291","path":"/app/Models/User.php"},"/app/Models/Whitelist.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Whitelist extends Model\n{\n    use HasFactory;\n    use Searchable;\n    use SoftDeletes;\n\n    protected $fillable = ['comment', 'ip-address', 'lookup', 'expires'];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'expires' => 'datetime',\n    ];\n\n    public function created_by()\n    {\n        return $this->hasOne(User::class, 'whitelist_id');\n    }\n}\n","module":"entity:342","path":"/app/Models/Whitelist.php"},"/app/Models/Scopes/Searchable.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models\\Scopes;\n\nuse Illuminate\\Database\\Eloquent\\Builder;\n\ntrait Searchable\n{\n    /**\n     * Search paginated items ordering by ID descending\n     */\n    public function scopeSearchLatestPaginated(\n        Builder $query,\n        string $search,\n        int $paginationQuantity = 10\n    ): Builder {\n        return $query\n            ->search($search)\n            ->orderBy('updated_at', 'desc')\n            ->paginate($paginationQuantity);\n    }\n\n    /**\n     * Adds a scope to search the table based on the\n     * $searchableFields array inside the model\n     */\n    public function scopeSearch(Builder $query, string $search): Builder\n    {\n        $query->where(function ($query) use ($search) {\n            foreach ($this->getSearchableFields() as $field) {\n                $query->orWhere($field, 'like', \"%{$search}%\");\n            }\n        });\n\n        return $query;\n    }\n\n    /**\n     * Returns the searchable fields. If $searchableFields is undefined,\n     * or is an empty array, or its first element is '*', it will search\n     * in all table fields\n     */\n    protected function getSearchableFields(): array\n    {\n        if (isset($this->searchableFields) && count($this->searchableFields)) {\n            return $this->searchableFields[0] === '*'\n                ? $this->getAllModelTableFields()\n                : $this->searchableFields;\n        }\n\n        return $this->getAllModelTableFields();\n    }\n\n    /**\n     * Gets all fields from Model's table\n     */\n    protected function getAllModelTableFields(): array\n    {\n        $tableName = $this->getTable();\n\n        return $this->getConnection()\n            ->getSchemaBuilder()\n            ->getColumnListing($tableName);\n    }\n}\n","module":"base","path":"/app/Models/Scopes/Searchable.php"},"/app/Http/Controllers/Api/AuthController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\JsonResponse;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    public function login(Request $request): JsonResponse\n    {\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n}\n","module":"base","path":"/app/Http/Controllers/Api/AuthController.php"},"/tailwind.config.js":{"deleteOnGeneration":true,"content":"import defaultTheme from 'tailwindcss/defaultTheme';\nimport forms from '@tailwindcss/forms';\nimport typography from '@tailwindcss/typography';\n\n/** @type {import('tailwindcss').Config} */\nexport default {\n    content: [\n        './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',\n        './vendor/laravel/jetstream/**/*.blade.php',\n        './storage/framework/views/*.php',\n        './resources/views/**/*.blade.php',\n    ],\n\n    theme: {\n        extend: {\n            fontFamily: {\n                sans: ['Figtree', ...defaultTheme.fontFamily.sans],\n            },\n        },\n    },\n\n    plugins: [forms, typography],\n};\n","module":"base","path":"/tailwind.config.js"},"/resources/js/bootstrap.js":{"deleteOnGeneration":true,"content":"import _ from 'lodash';\nwindow._ = _;\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nimport axios from 'axios';\nwindow.axios = axios;\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// import Pusher from 'pusher-js';\n// window.Pusher = Pusher;\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: import.meta.env.VITE_PUSHER_APP_KEY,\n//     wsHost: import.meta.env.VITE_PUSHER_HOST ?? `ws-${import.meta.env.VITE_PUSHER_CLUSTER}.pusher.com`,\n//     wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,\n//     wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,\n//     forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') === 'https',\n//     enabledTransports: ['ws', 'wss'],\n// });","module":"base","path":"/resources/js/bootstrap.js"},"app/Filament/Traits/HasDescendingOrder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Traits;\n\nuse Illuminate\\Database\\Eloquent\\Builder;\n\ntrait HasDescendingOrder\n{\n    protected function getTableQuery(): Builder\n    {\n        return static::getModel()::query()->latest();\n    }\n}","module":"plugin:app.vemto.filament","path":"app/Filament/Traits/HasDescendingOrder.php"},"app/Filament/Resources/TagResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Tag;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\TagResource\\Pages;\n\nclass TagResource extends Resource\n{\n    protected static ?string $model = Tag::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('uid')\n                        ->rules(['max:255'])\n                        ->required()\n                        ->placeholder('Uid')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('content')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Content')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('data')\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('image')\n                        ->rules(['image', 'max:1024'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Image')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('thumbnail')\n                        ->rules(['file'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Thumbnail')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('weight')\n                        ->rules(['numeric'])\n                        ->nullable()\n                        ->numeric()\n                        ->placeholder('Weight')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('model')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->searchable()\n                        ->options([\n                            'page' => 'Page',\n                            'post' => 'Blog',\n                        ])\n                        ->placeholder('Model')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('language_id')\n                        ->rules(['exists:languages,id'])\n                        ->nullable()\n                        ->relationship('language', 'title')\n                        ->searchable()\n                        ->placeholder('Language')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('translation_id')\n                        ->rules(['exists:tags,id'])\n                        ->nullable()\n                        ->relationship('translation', 'title')\n                        ->searchable()\n                        ->placeholder('Translation')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('content')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\TextColumn::make('weight')\n                    ->toggleable()\n                    ->searchable(true, null, true),\n                Tables\\Columns\\TextColumn::make('model')\n                    ->toggleable()\n                    ->searchable()\n                    ->enum([\n                        'page' => 'Page',\n                        'post' => 'Blog',\n                    ]),\n                Tables\\Columns\\TextColumn::make('language.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('language_id')\n                    ->relationship('language', 'title')\n                    ->indicator('Language')\n                    ->multiple()\n                    ->label('Language'),\n\n                SelectFilter::make('translation_id')\n                    ->relationship('translation', 'title')\n                    ->indicator('Tag')\n                    ->multiple()\n                    ->label('Tag'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTags::route('/'),\n            'create' => Pages\\CreateTag::route('/create'),\n            'view' => Pages\\ViewTag::route('/{record}'),\n            'edit' => Pages\\EditTag::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:564|crud-settings:564","path":"app/Filament/Resources/TagResource.php"},"app/Filament/Resources/TagResource/Pages/EditTag.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse App\\Filament\\Resources\\TagResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditTag extends EditRecord\n{\n    protected static string $resource = TagResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:564|crud-settings:564","path":"app/Filament/Resources/TagResource/Pages/EditTag.php"},"app/Filament/Resources/TagResource/Pages/ViewTag.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse App\\Filament\\Resources\\TagResource;\nuse Filament\\Resources\\Pages\\ViewRecord;\n\nclass ViewTag extends ViewRecord\n{\n    protected static string $resource = TagResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:564|crud-settings:564","path":"app/Filament/Resources/TagResource/Pages/ViewTag.php"},"app/Filament/Resources/TagResource/Pages/ListTags.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse App\\Filament\\Resources\\TagResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListTags extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = TagResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:564|crud-settings:564","path":"app/Filament/Resources/TagResource/Pages/ListTags.php"},"app/Filament/Resources/TagResource/Pages/CreateTag.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\Pages;\n\nuse App\\Filament\\Resources\\TagResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateTag extends CreateRecord\n{\n    protected static string $resource = TagResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:564|crud-settings:564","path":"app/Filament/Resources/TagResource/Pages/CreateTag.php"},"app/Filament/Filters/DateRangeFilter.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Filters;\n\nuse Filament\\Tables\\Filters\\Filter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\n\nclass DateRangeFilter extends Filter\n{\n    public static function make(?string $name = null): static\n    {\n        return parent::make($name)\n            ->form([\n                DatePicker::make(\"{$name}_from\"),\n                DatePicker::make(\"{$name}_until\"),\n            ])\n            ->query(function (Builder $query, array $data) use (&$name): Builder {\n                return $query\n                    ->when(\n                        $data[\"{$name}_from\"],\n                        fn (Builder $query, $date): Builder => $query->whereDate($name, '>=', $date),\n                    )\n                    ->when(\n                        $data[\"{$name}_until\"],\n                        fn (Builder $query, $date): Builder => $query->whereDate($name, '<=', $date),\n                    );\n            });\n    }\n}","module":"plugin:app.vemto.filament","path":"app/Filament/Filters/DateRangeFilter.php"},"app/Filament/Resources/RevisionResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Revision;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\DateTimePicker;\nuse App\\Filament\\Resources\\RevisionResource\\Pages;\n\nclass RevisionResource extends Resource\n{\n    protected static ?string $model = Revision::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('revname')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Revname')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('revcomment')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Revcomment')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    DateTimePicker::make('revretention')\n                        ->rules(['date'])\n                        ->nullable()\n                        ->placeholder('Revretention')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('uid')\n                        ->rules(['max:255'])\n                        ->required()\n                        ->placeholder('Uid')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('main_category_id')\n                        ->rules(['max:255'])\n                        ->nullable()\n                        ->placeholder('Main Category Id')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('short')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Short')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('content')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Content')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('data')\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('image')\n                        ->rules(['image', 'max:1024'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Image')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('thumbnail')\n                        ->rules(['file'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Thumbnail')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('author_id')\n                        ->rules(['max:255'])\n                        ->required()\n                        ->placeholder('Author Id')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('language_id')\n                        ->rules(['max:255'])\n                        ->nullable()\n                        ->placeholder('Language Id')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('translation_id')\n                        ->rules(['max:255'])\n                        ->nullable()\n                        ->placeholder('Translation Id')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('categories')\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('tags')\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('revname')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('revcomment')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('revretention')\n                    ->toggleable()\n                    ->dateTime(),\n                Tables\\Columns\\TextColumn::make('uid')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('main_category_id')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('short')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('content')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\TextColumn::make('author_id')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('language_id')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('translation_id')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n            ])\n            ->filters([DateRangeFilter::make('created_at')])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListRevisions::route('/'),\n            'create' => Pages\\CreateRevision::route('/create'),\n            'view' => Pages\\ViewRevision::route('/{record}'),\n            'edit' => Pages\\EditRevision::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:566|crud-settings:566","path":"app/Filament/Resources/RevisionResource.php"},"app/Filament/Resources/RevisionResource/Pages/EditRevision.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\RevisionResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\RevisionResource;\n\nclass EditRevision extends EditRecord\n{\n    protected static string $resource = RevisionResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:566|crud-settings:566","path":"app/Filament/Resources/RevisionResource/Pages/EditRevision.php"},"app/Filament/Resources/RevisionResource/Pages/ViewRevision.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\RevisionResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\RevisionResource;\n\nclass ViewRevision extends ViewRecord\n{\n    protected static string $resource = RevisionResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:566|crud-settings:566","path":"app/Filament/Resources/RevisionResource/Pages/ViewRevision.php"},"app/Filament/Resources/RevisionResource/Pages/ListRevisions.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\RevisionResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\RevisionResource;\n\nclass ListRevisions extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = RevisionResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:566|crud-settings:566","path":"app/Filament/Resources/RevisionResource/Pages/ListRevisions.php"},"app/Filament/Resources/RevisionResource/Pages/CreateRevision.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\RevisionResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\RevisionResource;\n\nclass CreateRevision extends CreateRecord\n{\n    protected static string $resource = RevisionResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:566|crud-settings:566","path":"app/Filament/Resources/RevisionResource/Pages/CreateRevision.php"},"app/Filament/Resources/PostResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse App\\Models\\Post;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\PostResource\\Pages;\n\nclass PostResource extends Resource\n{\n    protected static ?string $model = Post::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('uid')\n                        ->rules(['max:255'])\n                        ->required()\n                        ->placeholder('Uid')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('main_category_id')\n                        ->rules(['exists:categories,id'])\n                        ->nullable()\n                        ->relationship('mainCategory', 'title')\n                        ->searchable()\n                        ->placeholder('Main Category')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('short')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Short')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('content')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Content')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('data')\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('image')\n                        ->rules(['image', 'max:1024'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Image')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('thumbnail')\n                        ->rules(['file'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Thumbnail')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('author_id')\n                        ->rules(['exists:authors,id'])\n                        ->required()\n                        ->relationship('author', 'title')\n                        ->searchable()\n                        ->placeholder('Author')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('language_id')\n                        ->rules(['exists:languages,id'])\n                        ->nullable()\n                        ->relationship('language', 'title')\n                        ->searchable()\n                        ->placeholder('Language')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('translation_id')\n                        ->rules(['exists:posts,id'])\n                        ->nullable()\n                        ->relationship('translation', 'title')\n                        ->searchable()\n                        ->placeholder('Translation')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('short')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('content')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\TextColumn::make('author.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('main_category_id')\n                    ->relationship('mainCategory', 'title')\n                    ->indicator('Category')\n                    ->multiple()\n                    ->label('Category'),\n\n                SelectFilter::make('author_id')\n                    ->relationship('author', 'title')\n                    ->indicator('Author')\n                    ->multiple()\n                    ->label('Author'),\n\n                SelectFilter::make('language_id')\n                    ->relationship('language', 'title')\n                    ->indicator('Language')\n                    ->multiple()\n                    ->label('Language'),\n\n                SelectFilter::make('translation_id')\n                    ->relationship('translation', 'title')\n                    ->indicator('Post')\n                    ->multiple()\n                    ->label('Post'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListPosts::route('/'),\n            'create' => Pages\\CreatePost::route('/create'),\n            'view' => Pages\\ViewPost::route('/{record}'),\n            'edit' => Pages\\EditPost::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:567|crud-settings:567","path":"app/Filament/Resources/PostResource.php"},"app/Filament/Resources/PostResource/Pages/EditPost.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PostResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse App\\Filament\\Resources\\PostResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditPost extends EditRecord\n{\n    protected static string $resource = PostResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:567|crud-settings:567","path":"app/Filament/Resources/PostResource/Pages/EditPost.php"},"app/Filament/Resources/PostResource/Pages/ViewPost.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PostResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\PostResource;\n\nclass ViewPost extends ViewRecord\n{\n    protected static string $resource = PostResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:567|crud-settings:567","path":"app/Filament/Resources/PostResource/Pages/ViewPost.php"},"app/Filament/Resources/PostResource/Pages/ListPosts.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PostResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse App\\Filament\\Resources\\PostResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListPosts extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = PostResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:567|crud-settings:567","path":"app/Filament/Resources/PostResource/Pages/ListPosts.php"},"app/Filament/Resources/PostResource/Pages/CreatePost.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PostResource\\Pages;\n\nuse App\\Filament\\Resources\\PostResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreatePost extends CreateRecord\n{\n    protected static string $resource = PostResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:567|crud-settings:567","path":"app/Filament/Resources/PostResource/Pages/CreatePost.php"},"app/Filament/Resources/AuthorResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Author;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\AuthorResource\\Pages;\n\nclass AuthorResource extends Resource\n{\n    protected static ?string $model = Author::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    Select::make('user_id')\n                        ->rules(['exists:users,id'])\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->placeholder('User')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('salutation')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Salutation')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('name')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Name')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('full_name')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Full Name')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('first_name')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('First Name')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('last_name')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Last Name')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('mail_address')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Mail Address')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('website')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Website')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('address')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Address')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('social')\n                        ->required()\n                        ->required()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('user.name')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('salutation')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('name')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('full_name')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('first_name')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('last_name')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('mail_address')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('website')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('address')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('user_id')\n                    ->relationship('user', 'name')\n                    ->indicator('User')\n                    ->multiple()\n                    ->label('User'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            AuthorResource\\RelationManagers\\PostsRelationManager::class,\n            AuthorResource\\RelationManagers\\PagesRelationManager::class,\n            AuthorResource\\RelationManagers\\ProductsRelationManager::class,\n            AuthorResource\\RelationManagers\\ItemsRelationManager::class,\n            AuthorResource\\RelationManagers\\CommentsRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListAuthors::route('/'),\n            'create' => Pages\\CreateAuthor::route('/create'),\n            'view' => Pages\\ViewAuthor::route('/{record}'),\n            'edit' => Pages\\EditAuthor::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:569|crud-settings:569","path":"app/Filament/Resources/AuthorResource.php"},"app/Filament/Resources/AuthorResource/Pages/EditAuthor.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\AuthorResource;\n\nclass EditAuthor extends EditRecord\n{\n    protected static string $resource = AuthorResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:569|crud-settings:569","path":"app/Filament/Resources/AuthorResource/Pages/EditAuthor.php"},"app/Filament/Resources/AuthorResource/Pages/ViewAuthor.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\AuthorResource;\n\nclass ViewAuthor extends ViewRecord\n{\n    protected static string $resource = AuthorResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:569|crud-settings:569","path":"app/Filament/Resources/AuthorResource/Pages/ViewAuthor.php"},"app/Filament/Resources/AuthorResource/Pages/ListAuthors.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\AuthorResource;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListAuthors extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = AuthorResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:569|crud-settings:569","path":"app/Filament/Resources/AuthorResource/Pages/ListAuthors.php"},"app/Filament/Resources/AuthorResource/Pages/CreateAuthor.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\AuthorResource;\n\nclass CreateAuthor extends CreateRecord\n{\n    protected static string $resource = AuthorResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:569|crud-settings:569","path":"app/Filament/Resources/AuthorResource/Pages/CreateAuthor.php"},"app/Filament/Resources/AuthorResource/RelationManagers/PostsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PostsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'posts';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:posts,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:567|crud-settings:567","path":"app/Filament/Resources/AuthorResource/RelationManagers/PostsRelationManager.php"},"app/Filament/Resources/AuthorResource/RelationManagers/PagesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PagesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'pages';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:pages,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/AuthorResource/RelationManagers/PagesRelationManager.php"},"app/Filament/Resources/AuthorResource/RelationManagers/ProductsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ProductsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'products';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/AuthorResource/RelationManagers/ProductsRelationManager.php"},"app/Filament/Resources/AuthorResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:items,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/AuthorResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/AuthorResource/RelationManagers/CommentsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\AuthorResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Toggle;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CommentsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'comments';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('translations')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('parent_id')\n                    ->rules(['exists:comments,id'])\n                    ->relationship('comment', 'title')\n                    ->searchable()\n                    ->placeholder('Comment')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Toggle::make('is_from_author')\n                    ->rules(['boolean'])\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('email')\n                    ->rules(['email'])\n                    ->email()\n                    ->placeholder('Email')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('avatar')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Avatar')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\TextColumn::make('comment.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\IconColumn::make('is_from_author'),\n                Tables\\Columns\\TextColumn::make('name')->limit(50),\n                Tables\\Columns\\TextColumn::make('email')->limit(50),\n                Tables\\Columns\\ImageColumn::make('avatar')->rounded(),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('parent_id')\n                    ->multiple()\n                    ->relationship('comment', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:571|crud-settings:571","path":"app/Filament/Resources/AuthorResource/RelationManagers/CommentsRelationManager.php"},"app/Filament/Resources/UserResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse App\\Models\\User;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\UserResource\\Pages;\n\nclass UserResource extends Resource\n{\n    protected static ?string $model = User::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('name')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Name')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('email')\n                        ->rules(['email'])\n                        ->required()\n                        ->unique(\n                            'users',\n                            'email',\n                            fn(?Model $record) => $record\n                        )\n                        ->email()\n                        ->placeholder('Email')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('password')\n                        ->required()\n                        ->password()\n                        ->dehydrateStateUsing(fn($state) => \\Hash::make($state))\n                        ->required(\n                            fn(Component $livewire) => $livewire instanceof\n                                Pages\\CreateUser\n                        )\n                        ->placeholder('Password')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('whitelist_id')\n                        ->rules(['exists:whitelists,id'])\n                        ->required()\n                        ->relationship('whitelist', 'comment')\n                        ->searchable()\n                        ->placeholder('Whitelist')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('name')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('email')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('whitelist.comment')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('whitelist_id')\n                    ->relationship('whitelist', 'comment')\n                    ->indicator('Whitelist')\n                    ->multiple()\n                    ->label('Whitelist'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            UserResource\\RelationManagers\\AuthorsRelationManager::class,\n            UserResource\\RelationManagers\\BypassTokensRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListUsers::route('/'),\n            'create' => Pages\\CreateUser::route('/create'),\n            'view' => Pages\\ViewUser::route('/{record}'),\n            'edit' => Pages\\EditUser::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:570|crud-settings:570","path":"app/Filament/Resources/UserResource.php"},"app/Filament/Resources/UserResource/Pages/EditUser.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse App\\Filament\\Resources\\UserResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditUser extends EditRecord\n{\n    protected static string $resource = UserResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:570|crud-settings:570","path":"app/Filament/Resources/UserResource/Pages/EditUser.php"},"app/Filament/Resources/UserResource/Pages/ViewUser.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\UserResource;\n\nclass ViewUser extends ViewRecord\n{\n    protected static string $resource = UserResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:570|crud-settings:570","path":"app/Filament/Resources/UserResource/Pages/ViewUser.php"},"app/Filament/Resources/UserResource/Pages/ListUsers.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse App\\Filament\\Resources\\UserResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListUsers extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = UserResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:570|crud-settings:570","path":"app/Filament/Resources/UserResource/Pages/ListUsers.php"},"app/Filament/Resources/UserResource/Pages/CreateUser.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\Pages;\n\nuse App\\Filament\\Resources\\UserResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateUser extends CreateRecord\n{\n    protected static string $resource = UserResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:570|crud-settings:570","path":"app/Filament/Resources/UserResource/Pages/CreateUser.php"},"app/Filament/Resources/UserResource/RelationManagers/AuthorsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass AuthorsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'authors';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('salutation')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Salutation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('full_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Full Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('first_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('First Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('last_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Last Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('mail_address')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Mail Address')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('website')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Website')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('address')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Address')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('social')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('user.name')->limit(50),\n                Tables\\Columns\\TextColumn::make('salutation')->limit(50),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('name')->limit(50),\n                Tables\\Columns\\TextColumn::make('full_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('first_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('last_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('mail_address')->limit(50),\n                Tables\\Columns\\TextColumn::make('website')->limit(50),\n                Tables\\Columns\\TextColumn::make('address')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('user_id')\n                    ->multiple()\n                    ->relationship('user', 'name'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:569|crud-settings:569","path":"app/Filament/Resources/UserResource/RelationManagers/AuthorsRelationManager.php"},"app/Filament/Resources/UserResource/RelationManagers/BypassTokensRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass BypassTokensRelationManager extends RelationManager\n{\n    protected static string $relationship = 'bypassTokens';\n\n    protected static ?string $recordTitleAttribute = 'token';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('token')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Token')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('token')->limit(50),\n                Tables\\Columns\\TextColumn::make('user.name')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('user_id')\n                    ->multiple()\n                    ->relationship('user', 'name'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/UserResource/RelationManagers/BypassTokensRelationManager.php"},"app/Filament/Resources/CommentResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Comment;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Toggle;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\CommentResource\\Pages;\n\nclass CommentResource extends Resource\n{\n    protected static ?string $model = Comment::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('content')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Content')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('translations')\n                        ->required()\n                        ->required()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('parent_id')\n                        ->rules(['exists:comments,id'])\n                        ->nullable()\n                        ->relationship('comment', 'title')\n                        ->searchable()\n                        ->placeholder('Comment')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('author_id')\n                        ->rules(['exists:authors,id'])\n                        ->nullable()\n                        ->relationship('author', 'title')\n                        ->searchable()\n                        ->placeholder('Author')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Toggle::make('is_from_author')\n                        ->rules(['boolean'])\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('name')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Name')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('email')\n                        ->rules(['email'])\n                        ->required()\n                        ->email()\n                        ->placeholder('Email')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('avatar')\n                        ->rules(['file'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Avatar')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('content')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('comment.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('author.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\IconColumn::make('is_from_author')\n                    ->toggleable()\n                    ->boolean(),\n                Tables\\Columns\\TextColumn::make('name')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('email')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\ImageColumn::make('avatar')\n                    ->toggleable()\n                    ->circular(),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('parent_id')\n                    ->relationship('comment', 'title')\n                    ->indicator('Comment')\n                    ->multiple()\n                    ->label('Comment'),\n\n                SelectFilter::make('author_id')\n                    ->relationship('author', 'title')\n                    ->indicator('Author')\n                    ->multiple()\n                    ->label('Author'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListComments::route('/'),\n            'create' => Pages\\CreateComment::route('/create'),\n            'view' => Pages\\ViewComment::route('/{record}'),\n            'edit' => Pages\\EditComment::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:571|crud-settings:571","path":"app/Filament/Resources/CommentResource.php"},"app/Filament/Resources/CommentResource/Pages/EditComment.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CommentResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\CommentResource;\n\nclass EditComment extends EditRecord\n{\n    protected static string $resource = CommentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:571|crud-settings:571","path":"app/Filament/Resources/CommentResource/Pages/EditComment.php"},"app/Filament/Resources/CommentResource/Pages/ViewComment.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CommentResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\CommentResource;\n\nclass ViewComment extends ViewRecord\n{\n    protected static string $resource = CommentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:571|crud-settings:571","path":"app/Filament/Resources/CommentResource/Pages/ViewComment.php"},"app/Filament/Resources/CommentResource/Pages/ListComments.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CommentResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\CommentResource;\n\nclass ListComments extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = CommentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:571|crud-settings:571","path":"app/Filament/Resources/CommentResource/Pages/ListComments.php"},"app/Filament/Resources/CommentResource/Pages/CreateComment.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CommentResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\CommentResource;\n\nclass CreateComment extends CreateRecord\n{\n    protected static string $resource = CommentResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:571|crud-settings:571","path":"app/Filament/Resources/CommentResource/Pages/CreateComment.php"},"app/Filament/Resources/LanguageResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Language;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Toggle;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\TextInput;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\LanguageResource\\Pages;\n\nclass LanguageResource extends Resource\n{\n    protected static ?string $model = Language::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('isocode')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Isocode')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('flag')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Flag')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Toggle::make('active')\n                        ->rules(['boolean'])\n                        ->required()\n                        ->default('0')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Toggle::make('published')\n                        ->rules(['boolean'])\n                        ->required()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('isocode')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('flag')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\IconColumn::make('active')\n                    ->toggleable()\n                    ->boolean(),\n                Tables\\Columns\\IconColumn::make('published')\n                    ->toggleable()\n                    ->boolean(),\n            ])\n            ->filters([DateRangeFilter::make('created_at')])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            LanguageResource\\RelationManagers\\TagsRelationManager::class,\n            LanguageResource\\RelationManagers\\PostsRelationManager::class,\n            LanguageResource\\RelationManagers\\CategoriesRelationManager::class,\n            LanguageResource\\RelationManagers\\PagesRelationManager::class,\n            LanguageResource\\RelationManagers\\ProductsRelationManager::class,\n            LanguageResource\\RelationManagers\\ItemsRelationManager::class,\n            LanguageResource\\RelationManagers\\CountriesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListLanguages::route('/'),\n            'create' => Pages\\CreateLanguage::route('/create'),\n            'view' => Pages\\ViewLanguage::route('/{record}'),\n            'edit' => Pages\\EditLanguage::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:572|crud-settings:572","path":"app/Filament/Resources/LanguageResource.php"},"app/Filament/Resources/LanguageResource/Pages/EditLanguage.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\LanguageResource;\n\nclass EditLanguage extends EditRecord\n{\n    protected static string $resource = LanguageResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:572|crud-settings:572","path":"app/Filament/Resources/LanguageResource/Pages/EditLanguage.php"},"app/Filament/Resources/LanguageResource/Pages/ViewLanguage.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\LanguageResource;\n\nclass ViewLanguage extends ViewRecord\n{\n    protected static string $resource = LanguageResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:572|crud-settings:572","path":"app/Filament/Resources/LanguageResource/Pages/ViewLanguage.php"},"app/Filament/Resources/LanguageResource/Pages/ListLanguages.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\LanguageResource;\n\nclass ListLanguages extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = LanguageResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:572|crud-settings:572","path":"app/Filament/Resources/LanguageResource/Pages/ListLanguages.php"},"app/Filament/Resources/LanguageResource/Pages/CreateLanguage.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\LanguageResource;\n\nclass CreateLanguage extends CreateRecord\n{\n    protected static string $resource = LanguageResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:572|crud-settings:572","path":"app/Filament/Resources/LanguageResource/Pages/CreateLanguage.php"},"app/Filament/Resources/LanguageResource/RelationManagers/TagsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass TagsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'tags';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('weight')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Weight')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('model')\n                    ->rules(['max:255', 'string'])\n                    ->searchable()\n                    ->options([\n                        'page' => 'Page',\n                        'post' => 'Blog',\n                    ])\n                    ->placeholder('Model')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:tags,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('weight'),\n                Tables\\Columns\\TextColumn::make('model')->enum([\n                    'page' => 'Page',\n                    'post' => 'Blog',\n                ]),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:564|crud-settings:564","path":"app/Filament/Resources/LanguageResource/RelationManagers/TagsRelationManager.php"},"app/Filament/Resources/LanguageResource/RelationManagers/PostsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PostsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'posts';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:posts,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:567|crud-settings:567","path":"app/Filament/Resources/LanguageResource/RelationManagers/PostsRelationManager.php"},"app/Filament/Resources/LanguageResource/RelationManagers/CategoriesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CategoriesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'categories';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('model')\n                    ->rules(['max:255', 'string'])\n                    ->searchable()\n                    ->options([\n                        'posts' => 'Blog',\n                        'pages' => 'Page',\n                    ])\n                    ->placeholder('Model')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('model')->enum([\n                    'posts' => 'Blog',\n                    'pages' => 'Page',\n                ]),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:573|crud-settings:573","path":"app/Filament/Resources/LanguageResource/RelationManagers/CategoriesRelationManager.php"},"app/Filament/Resources/LanguageResource/RelationManagers/PagesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PagesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'pages';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:pages,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/LanguageResource/RelationManagers/PagesRelationManager.php"},"app/Filament/Resources/LanguageResource/RelationManagers/ProductsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ProductsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'products';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/LanguageResource/RelationManagers/ProductsRelationManager.php"},"app/Filament/Resources/LanguageResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:items,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/LanguageResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/LanguageResource/RelationManagers/CountriesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\LanguageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CountriesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'countries';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                Select::make('continent_id')\n                    ->rules(['exists:continents,id'])\n                    ->relationship('continent', 'id')\n                    ->searchable()\n                    ->placeholder('Continent')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('continent.id')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('continent_id')\n                    ->multiple()\n                    ->relationship('continent', 'id'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/LanguageResource/RelationManagers/CountriesRelationManager.php"},"app/Filament/Resources/CategoryResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Category;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\CategoryResource\\Pages;\n\nclass CategoryResource extends Resource\n{\n    protected static ?string $model = Category::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('uid')\n                        ->rules(['max:255'])\n                        ->required()\n                        ->placeholder('Uid')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('content')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Content')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('data')\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('image')\n                        ->rules(['image', 'max:1024'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Image')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('thumbnail')\n                        ->rules(['file'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Thumbnail')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('model')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->searchable()\n                        ->options([\n                            'posts' => 'Blog',\n                            'pages' => 'Page',\n                        ])\n                        ->placeholder('Model')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('language_id')\n                        ->rules(['exists:languages,id'])\n                        ->required()\n                        ->relationship('language', 'title')\n                        ->searchable()\n                        ->placeholder('Language')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('translation_id')\n                        ->rules(['exists:categories,id'])\n                        ->nullable()\n                        ->relationship('translation', 'title')\n                        ->searchable()\n                        ->placeholder('Translation')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('content')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\TextColumn::make('model')\n                    ->toggleable()\n                    ->searchable()\n                    ->enum([\n                        'posts' => 'Blog',\n                        'pages' => 'Page',\n                    ]),\n                Tables\\Columns\\TextColumn::make('language.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('language_id')\n                    ->relationship('language', 'title')\n                    ->indicator('Language')\n                    ->multiple()\n                    ->label('Language'),\n\n                SelectFilter::make('translation_id')\n                    ->relationship('translation', 'title')\n                    ->indicator('Category')\n                    ->multiple()\n                    ->label('Category'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            CategoryResource\\RelationManagers\\PostsRelationManager::class,\n            CategoryResource\\RelationManagers\\ItemsRelationManager::class,\n            CategoryResource\\RelationManagers\\ProductsRelationManager::class,\n            CategoryResource\\RelationManagers\\PagesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCategories::route('/'),\n            'create' => Pages\\CreateCategory::route('/create'),\n            'view' => Pages\\ViewCategory::route('/{record}'),\n            'edit' => Pages\\EditCategory::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:573|crud-settings:573","path":"app/Filament/Resources/CategoryResource.php"},"app/Filament/Resources/CategoryResource/Pages/EditCategory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\CategoryResource;\n\nclass EditCategory extends EditRecord\n{\n    protected static string $resource = CategoryResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:573|crud-settings:573","path":"app/Filament/Resources/CategoryResource/Pages/EditCategory.php"},"app/Filament/Resources/CategoryResource/Pages/ViewCategory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\CategoryResource;\n\nclass ViewCategory extends ViewRecord\n{\n    protected static string $resource = CategoryResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:573|crud-settings:573","path":"app/Filament/Resources/CategoryResource/Pages/ViewCategory.php"},"app/Filament/Resources/CategoryResource/Pages/ListCategories.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\CategoryResource;\n\nclass ListCategories extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = CategoryResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:573|crud-settings:573","path":"app/Filament/Resources/CategoryResource/Pages/ListCategories.php"},"app/Filament/Resources/CategoryResource/Pages/CreateCategory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\CategoryResource;\n\nclass CreateCategory extends CreateRecord\n{\n    protected static string $resource = CategoryResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:573|crud-settings:573","path":"app/Filament/Resources/CategoryResource/Pages/CreateCategory.php"},"app/Filament/Resources/CategoryResource/RelationManagers/PostsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PostsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'posts';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:posts,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:567|crud-settings:567","path":"app/Filament/Resources/CategoryResource/RelationManagers/PostsRelationManager.php"},"app/Filament/Resources/CategoryResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:items,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CategoryResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/CategoryResource/RelationManagers/ProductsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ProductsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'products';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CategoryResource/RelationManagers/ProductsRelationManager.php"},"app/Filament/Resources/CategoryResource/RelationManagers/PagesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PagesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'pages';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('translation_id')\n                    ->rules(['exists:pages,id'])\n                    ->relationship('translation', 'title')\n                    ->searchable()\n                    ->placeholder('Translation')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CategoryResource/RelationManagers/PagesRelationManager.php"},"app/Filament/Resources/PageResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse App\\Models\\Page;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\PageResource\\Pages;\n\nclass PageResource extends Resource\n{\n    protected static ?string $model = Page::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('uid')\n                        ->rules(['max:255'])\n                        ->required()\n                        ->placeholder('Uid')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('main_category_id')\n                        ->rules(['exists:categories,id'])\n                        ->nullable()\n                        ->relationship('mainCategory', 'title')\n                        ->searchable()\n                        ->placeholder('Main Category')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('short')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Short')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('content')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Content')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('data')\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('image')\n                        ->rules(['image', 'max:1024'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Image')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('thumbnail')\n                        ->rules(['file'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Thumbnail')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('author_id')\n                        ->rules(['exists:authors,id'])\n                        ->required()\n                        ->relationship('author', 'title')\n                        ->searchable()\n                        ->placeholder('Author')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('language_id')\n                        ->rules(['exists:languages,id'])\n                        ->nullable()\n                        ->relationship('language', 'title')\n                        ->searchable()\n                        ->placeholder('Language')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('translation_id')\n                        ->rules(['exists:pages,id'])\n                        ->nullable()\n                        ->relationship('translation', 'title')\n                        ->searchable()\n                        ->placeholder('Translation')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('short')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('content')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\TextColumn::make('author.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('main_category_id')\n                    ->relationship('mainCategory', 'title')\n                    ->indicator('Category')\n                    ->multiple()\n                    ->label('Category'),\n\n                SelectFilter::make('author_id')\n                    ->relationship('author', 'title')\n                    ->indicator('Author')\n                    ->multiple()\n                    ->label('Author'),\n\n                SelectFilter::make('language_id')\n                    ->relationship('language', 'title')\n                    ->indicator('Language')\n                    ->multiple()\n                    ->label('Language'),\n\n                SelectFilter::make('translation_id')\n                    ->relationship('translation', 'title')\n                    ->indicator('Page')\n                    ->multiple()\n                    ->label('Page'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            PageResource\\RelationManagers\\PagesRelationManager::class,\n            PageResource\\RelationManagers\\PageTemplatesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListPages::route('/'),\n            'create' => Pages\\CreatePage::route('/create'),\n            'view' => Pages\\ViewPage::route('/{record}'),\n            'edit' => Pages\\EditPage::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageResource.php"},"app/Filament/Resources/PageResource/Pages/EditPage.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse App\\Filament\\Resources\\PageResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditPage extends EditRecord\n{\n    protected static string $resource = PageResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageResource/Pages/EditPage.php"},"app/Filament/Resources/PageResource/Pages/ViewPage.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\PageResource;\n\nclass ViewPage extends ViewRecord\n{\n    protected static string $resource = PageResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageResource/Pages/ViewPage.php"},"app/Filament/Resources/PageResource/Pages/ListPages.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse App\\Filament\\Resources\\PageResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListPages extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = PageResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageResource/Pages/ListPages.php"},"app/Filament/Resources/PageResource/Pages/CreatePage.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageResource\\Pages;\n\nuse App\\Filament\\Resources\\PageResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreatePage extends CreateRecord\n{\n    protected static string $resource = PageResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageResource/Pages/CreatePage.php"},"app/Filament/Resources/PageResource/RelationManagers/PagesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PagesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'pages';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageResource/RelationManagers/PagesRelationManager.php"},"app/Filament/Resources/PageResource/RelationManagers/PageTemplatesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PageTemplatesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'pageTemplates';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([Grid::make(['default' => 0])->schema([])]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('page.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('page_id')\n                    ->multiple()\n                    ->relationship('page', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageResource/RelationManagers/PageTemplatesRelationManager.php"},"app/Filament/Resources/PageTemplateResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\PageTemplate;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\PageTemplateResource\\Pages;\n\nclass PageTemplateResource extends Resource\n{\n    protected static ?string $model = PageTemplate::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    Select::make('page_id')\n                        ->rules(['exists:pages,id'])\n                        ->required()\n                        ->relationship('page', 'title')\n                        ->searchable()\n                        ->placeholder('Page')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('page.title')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('page_id')\n                    ->relationship('page', 'title')\n                    ->indicator('Page')\n                    ->multiple()\n                    ->label('Page'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListPageTemplates::route('/'),\n            'create' => Pages\\CreatePageTemplate::route('/create'),\n            'view' => Pages\\ViewPageTemplate::route('/{record}'),\n            'edit' => Pages\\EditPageTemplate::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageTemplateResource.php"},"app/Filament/Resources/PageTemplateResource/Pages/EditPageTemplate.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageTemplateResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\PageTemplateResource;\n\nclass EditPageTemplate extends EditRecord\n{\n    protected static string $resource = PageTemplateResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageTemplateResource/Pages/EditPageTemplate.php"},"app/Filament/Resources/PageTemplateResource/Pages/ViewPageTemplate.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageTemplateResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\PageTemplateResource;\n\nclass ViewPageTemplate extends ViewRecord\n{\n    protected static string $resource = PageTemplateResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageTemplateResource/Pages/ViewPageTemplate.php"},"app/Filament/Resources/PageTemplateResource/Pages/ListPageTemplates.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageTemplateResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\PageTemplateResource;\n\nclass ListPageTemplates extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = PageTemplateResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageTemplateResource/Pages/ListPageTemplates.php"},"app/Filament/Resources/PageTemplateResource/Pages/CreatePageTemplate.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PageTemplateResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\PageTemplateResource;\n\nclass CreatePageTemplate extends CreateRecord\n{\n    protected static string $resource = PageTemplateResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PageTemplateResource/Pages/CreatePageTemplate.php"},"app/Filament/Resources/ProductResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Product;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\ProductResource\\Pages;\n\nclass ProductResource extends Resource\n{\n    protected static ?string $model = Product::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    Select::make('main_category_id')\n                        ->rules(['exists:categories,id'])\n                        ->nullable()\n                        ->relationship('mainCategory', 'title')\n                        ->searchable()\n                        ->placeholder('Main Category')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('language_id')\n                        ->rules(['exists:languages,id'])\n                        ->required()\n                        ->relationship('language', 'title')\n                        ->searchable()\n                        ->placeholder('Language')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('author_id')\n                        ->rules(['exists:authors,id'])\n                        ->required()\n                        ->relationship('author', 'title')\n                        ->searchable()\n                        ->placeholder('Author')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('mainCategory.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('author.title')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('main_category_id')\n                    ->relationship('mainCategory', 'title')\n                    ->indicator('Category')\n                    ->multiple()\n                    ->label('Category'),\n\n                SelectFilter::make('language_id')\n                    ->relationship('language', 'title')\n                    ->indicator('Language')\n                    ->multiple()\n                    ->label('Language'),\n\n                SelectFilter::make('author_id')\n                    ->relationship('author', 'title')\n                    ->indicator('Author')\n                    ->multiple()\n                    ->label('Author'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListProducts::route('/'),\n            'create' => Pages\\CreateProduct::route('/create'),\n            'view' => Pages\\ViewProduct::route('/{record}'),\n            'edit' => Pages\\EditProduct::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ProductResource.php"},"app/Filament/Resources/ProductResource/Pages/EditProduct.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ProductResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\ProductResource;\n\nclass EditProduct extends EditRecord\n{\n    protected static string $resource = ProductResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ProductResource/Pages/EditProduct.php"},"app/Filament/Resources/ProductResource/Pages/ViewProduct.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ProductResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\ProductResource;\n\nclass ViewProduct extends ViewRecord\n{\n    protected static string $resource = ProductResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ProductResource/Pages/ViewProduct.php"},"app/Filament/Resources/ProductResource/Pages/ListProducts.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ProductResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\ProductResource;\n\nclass ListProducts extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = ProductResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ProductResource/Pages/ListProducts.php"},"app/Filament/Resources/ProductResource/Pages/CreateProduct.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ProductResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\ProductResource;\n\nclass CreateProduct extends CreateRecord\n{\n    protected static string $resource = ProductResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ProductResource/Pages/CreateProduct.php"},"app/Filament/Resources/ItemResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse App\\Models\\Item;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\ItemResource\\Pages;\n\nclass ItemResource extends Resource\n{\n    protected static ?string $model = Item::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('uid')\n                        ->rules(['max:255'])\n                        ->required()\n                        ->placeholder('Uid')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('main_category_id')\n                        ->rules(['exists:categories,id'])\n                        ->nullable()\n                        ->relationship('mainCategory', 'title')\n                        ->searchable()\n                        ->placeholder('Main Category')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('short')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Short')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('content')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Content')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('data')\n                        ->nullable()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('image')\n                        ->rules(['image', 'max:1024'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Image')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    FileUpload::make('thumbnail')\n                        ->rules(['file'])\n                        ->nullable()\n                        ->image()\n                        ->placeholder('Thumbnail')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('author_id')\n                        ->rules(['exists:authors,id'])\n                        ->required()\n                        ->relationship('author', 'title')\n                        ->searchable()\n                        ->placeholder('Author')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('language_id')\n                        ->rules(['exists:languages,id'])\n                        ->required()\n                        ->relationship('language', 'title')\n                        ->searchable()\n                        ->placeholder('Language')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('translation_id')\n                        ->rules(['exists:items,id'])\n                        ->nullable()\n                        ->relationship('translation', 'title')\n                        ->searchable()\n                        ->placeholder('Translation')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('short')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('content')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')\n                    ->toggleable()\n                    ->circular(),\n                Tables\\Columns\\TextColumn::make('author.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('main_category_id')\n                    ->relationship('mainCategory', 'title')\n                    ->indicator('Category')\n                    ->multiple()\n                    ->label('Category'),\n\n                SelectFilter::make('author_id')\n                    ->relationship('author', 'title')\n                    ->indicator('Author')\n                    ->multiple()\n                    ->label('Author'),\n\n                SelectFilter::make('language_id')\n                    ->relationship('language', 'title')\n                    ->indicator('Language')\n                    ->multiple()\n                    ->label('Language'),\n\n                SelectFilter::make('translation_id')\n                    ->relationship('translation', 'title')\n                    ->indicator('Item')\n                    ->multiple()\n                    ->label('Item'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [ItemResource\\RelationManagers\\ItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListItems::route('/'),\n            'create' => Pages\\CreateItem::route('/create'),\n            'view' => Pages\\ViewItem::route('/{record}'),\n            'edit' => Pages\\EditItem::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ItemResource.php"},"app/Filament/Resources/ItemResource/Pages/EditItem.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse App\\Filament\\Resources\\ItemResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditItem extends EditRecord\n{\n    protected static string $resource = ItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ItemResource/Pages/EditItem.php"},"app/Filament/Resources/ItemResource/Pages/ViewItem.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\ItemResource;\n\nclass ViewItem extends ViewRecord\n{\n    protected static string $resource = ItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ItemResource/Pages/ViewItem.php"},"app/Filament/Resources/ItemResource/Pages/ListItems.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse App\\Filament\\Resources\\ItemResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListItems extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = ItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ItemResource/Pages/ListItems.php"},"app/Filament/Resources/ItemResource/Pages/CreateItem.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\Pages;\n\nuse App\\Filament\\Resources\\ItemResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateItem extends CreateRecord\n{\n    protected static string $resource = ItemResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ItemResource/Pages/CreateItem.php"},"app/Filament/Resources/ItemResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('uid')\n                    ->rules(['max:255'])\n                    ->placeholder('Uid')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('main_category_id')\n                    ->rules(['exists:categories,id'])\n                    ->relationship('mainCategory', 'title')\n                    ->searchable()\n                    ->placeholder('Main Category')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('short')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Short')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('content')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Content')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('data')->columnSpan([\n                    'default' => 12,\n                    'md' => 12,\n                    'lg' => 12,\n                ]),\n\n                FileUpload::make('image')\n                    ->rules(['image', 'max:1024'])\n                    ->image()\n                    ->placeholder('Image')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                FileUpload::make('thumbnail')\n                    ->rules(['file'])\n                    ->image()\n                    ->placeholder('Thumbnail')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('author_id')\n                    ->rules(['exists:authors,id'])\n                    ->relationship('author', 'title')\n                    ->searchable()\n                    ->placeholder('Author')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('language_id')\n                    ->rules(['exists:languages,id'])\n                    ->relationship('language', 'title')\n                    ->searchable()\n                    ->placeholder('Language')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('uid')->limit(50),\n                Tables\\Columns\\TextColumn::make('mainCategory.title')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('short')->limit(50),\n                Tables\\Columns\\TextColumn::make('content')->limit(50),\n                Tables\\Columns\\ImageColumn::make('image')->rounded(),\n                Tables\\Columns\\ImageColumn::make('thumbnail')->rounded(),\n                Tables\\Columns\\TextColumn::make('author.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('language.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('translation.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('main_category_id')\n                    ->multiple()\n                    ->relationship('mainCategory', 'title'),\n\n                SelectFilter::make('author_id')\n                    ->multiple()\n                    ->relationship('author', 'title'),\n\n                SelectFilter::make('language_id')\n                    ->multiple()\n                    ->relationship('language', 'title'),\n\n                SelectFilter::make('translation_id')\n                    ->multiple()\n                    ->relationship('translation', 'title'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ItemResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/CustomerResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Customer;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\CustomerResource\\Pages;\n\nclass CustomerResource extends Resource\n{\n    protected static ?string $model = Customer::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    Select::make('user_id')\n                        ->rules(['exists:users,id'])\n                        ->nullable()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->placeholder('User')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('user.name')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('user_id')\n                    ->relationship('user', 'name')\n                    ->indicator('User')\n                    ->multiple()\n                    ->label('User'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [CustomerResource\\RelationManagers\\CartsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCustomers::route('/'),\n            'create' => Pages\\CreateCustomer::route('/create'),\n            'view' => Pages\\ViewCustomer::route('/{record}'),\n            'edit' => Pages\\EditCustomer::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CustomerResource.php"},"app/Filament/Resources/CustomerResource/Pages/EditCustomer.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CustomerResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\CustomerResource;\n\nclass EditCustomer extends EditRecord\n{\n    protected static string $resource = CustomerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CustomerResource/Pages/EditCustomer.php"},"app/Filament/Resources/CustomerResource/Pages/ViewCustomer.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CustomerResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\CustomerResource;\n\nclass ViewCustomer extends ViewRecord\n{\n    protected static string $resource = CustomerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CustomerResource/Pages/ViewCustomer.php"},"app/Filament/Resources/CustomerResource/Pages/ListCustomers.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CustomerResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\CustomerResource;\n\nclass ListCustomers extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = CustomerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CustomerResource/Pages/ListCustomers.php"},"app/Filament/Resources/CustomerResource/Pages/CreateCustomer.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CustomerResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\CustomerResource;\n\nclass CreateCustomer extends CreateRecord\n{\n    protected static string $resource = CustomerResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CustomerResource/Pages/CreateCustomer.php"},"app/Filament/Resources/CustomerResource/RelationManagers/CartsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CustomerResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CartsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'carts';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([Grid::make(['default' => 0])->schema([])]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('customer.id')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('customer_id')\n                    ->multiple()\n                    ->relationship('customer', 'id'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CustomerResource/RelationManagers/CartsRelationManager.php"},"app/Filament/Resources/CartResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse App\\Models\\Cart;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\CartResource\\Pages;\n\nclass CartResource extends Resource\n{\n    protected static ?string $model = Cart::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    Select::make('customer_id')\n                        ->rules(['exists:customers,id'])\n                        ->required()\n                        ->relationship('customer', 'id')\n                        ->searchable()\n                        ->placeholder('Customer')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('customer.id')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('customer_id')\n                    ->relationship('customer', 'id')\n                    ->indicator('Customer')\n                    ->multiple()\n                    ->label('Customer'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCarts::route('/'),\n            'create' => Pages\\CreateCart::route('/create'),\n            'view' => Pages\\ViewCart::route('/{record}'),\n            'edit' => Pages\\EditCart::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CartResource.php"},"app/Filament/Resources/CartResource/Pages/EditCart.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CartResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse App\\Filament\\Resources\\CartResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditCart extends EditRecord\n{\n    protected static string $resource = CartResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CartResource/Pages/EditCart.php"},"app/Filament/Resources/CartResource/Pages/ViewCart.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CartResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\CartResource;\n\nclass ViewCart extends ViewRecord\n{\n    protected static string $resource = CartResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CartResource/Pages/ViewCart.php"},"app/Filament/Resources/CartResource/Pages/ListCarts.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CartResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse App\\Filament\\Resources\\CartResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListCarts extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = CartResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CartResource/Pages/ListCarts.php"},"app/Filament/Resources/CartResource/Pages/CreateCart.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CartResource\\Pages;\n\nuse App\\Filament\\Resources\\CartResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateCart extends CreateRecord\n{\n    protected static string $resource = CartResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CartResource/Pages/CreateCart.php"},"app/Filament/Resources/SubscriberResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Subscriber;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\SubscriberResource\\Pages;\n\nclass SubscriberResource extends Resource\n{\n    protected static ?string $model = Subscriber::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    Select::make('user_id')\n                        ->rules(['exists:users,id'])\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->placeholder('User')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('user.name')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('user_id')\n                    ->relationship('user', 'name')\n                    ->indicator('User')\n                    ->multiple()\n                    ->label('User'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListSubscribers::route('/'),\n            'create' => Pages\\CreateSubscriber::route('/create'),\n            'view' => Pages\\ViewSubscriber::route('/{record}'),\n            'edit' => Pages\\EditSubscriber::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/SubscriberResource.php"},"app/Filament/Resources/SubscriberResource/Pages/EditSubscriber.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\SubscriberResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\SubscriberResource;\n\nclass EditSubscriber extends EditRecord\n{\n    protected static string $resource = SubscriberResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/SubscriberResource/Pages/EditSubscriber.php"},"app/Filament/Resources/SubscriberResource/Pages/ViewSubscriber.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\SubscriberResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\SubscriberResource;\n\nclass ViewSubscriber extends ViewRecord\n{\n    protected static string $resource = SubscriberResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/SubscriberResource/Pages/ViewSubscriber.php"},"app/Filament/Resources/SubscriberResource/Pages/ListSubscribers.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\SubscriberResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\SubscriberResource;\n\nclass ListSubscribers extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = SubscriberResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/SubscriberResource/Pages/ListSubscribers.php"},"app/Filament/Resources/SubscriberResource/Pages/CreateSubscriber.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\SubscriberResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\SubscriberResource;\n\nclass CreateSubscriber extends CreateRecord\n{\n    protected static string $resource = SubscriberResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/SubscriberResource/Pages/CreateSubscriber.php"},"app/Filament/Resources/WhitelistResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Whitelist;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\TextInput;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\DateTimePicker;\nuse App\\Filament\\Resources\\WhitelistResource\\Pages;\n\nclass WhitelistResource extends Resource\n{\n    protected static ?string $model = Whitelist::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'comment';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('comment')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Comment')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('ip-address')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Ip Address')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('lookup')\n                        ->rules(['max:255', 'string'])\n                        ->nullable()\n                        ->placeholder('Lookup')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    DateTimePicker::make('expires')\n                        ->rules(['date'])\n                        ->required()\n                        ->placeholder('Expires')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('comment')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('ip-address')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('lookup')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('expires')\n                    ->toggleable()\n                    ->dateTime(),\n            ])\n            ->filters([DateRangeFilter::make('created_at')])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListWhitelists::route('/'),\n            'create' => Pages\\CreateWhitelist::route('/create'),\n            'view' => Pages\\ViewWhitelist::route('/{record}'),\n            'edit' => Pages\\EditWhitelist::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/WhitelistResource.php"},"app/Filament/Resources/WhitelistResource/Pages/EditWhitelist.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\WhitelistResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\WhitelistResource;\n\nclass EditWhitelist extends EditRecord\n{\n    protected static string $resource = WhitelistResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/WhitelistResource/Pages/EditWhitelist.php"},"app/Filament/Resources/WhitelistResource/Pages/ViewWhitelist.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\WhitelistResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\WhitelistResource;\n\nclass ViewWhitelist extends ViewRecord\n{\n    protected static string $resource = WhitelistResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/WhitelistResource/Pages/ViewWhitelist.php"},"app/Filament/Resources/WhitelistResource/Pages/ListWhitelists.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\WhitelistResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\WhitelistResource;\n\nclass ListWhitelists extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = WhitelistResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/WhitelistResource/Pages/ListWhitelists.php"},"app/Filament/Resources/WhitelistResource/Pages/CreateWhitelist.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\WhitelistResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\WhitelistResource;\n\nclass CreateWhitelist extends CreateRecord\n{\n    protected static string $resource = WhitelistResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/WhitelistResource/Pages/CreateWhitelist.php"},"app/Filament/Resources/BypassTokenResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\BypassToken;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\BypassTokenResource\\Pages;\n\nclass BypassTokenResource extends Resource\n{\n    protected static ?string $model = BypassToken::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'token';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('token')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Token')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('user_id')\n                        ->rules(['exists:users,id'])\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->placeholder('User')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('token')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('user.name')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('user_id')\n                    ->relationship('user', 'name')\n                    ->indicator('User')\n                    ->multiple()\n                    ->label('User'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListBypassTokens::route('/'),\n            'create' => Pages\\CreateBypassToken::route('/create'),\n            'view' => Pages\\ViewBypassToken::route('/{record}'),\n            'edit' => Pages\\EditBypassToken::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/BypassTokenResource.php"},"app/Filament/Resources/BypassTokenResource/Pages/EditBypassToken.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\BypassTokenResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\BypassTokenResource;\n\nclass EditBypassToken extends EditRecord\n{\n    protected static string $resource = BypassTokenResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/BypassTokenResource/Pages/EditBypassToken.php"},"app/Filament/Resources/BypassTokenResource/Pages/ViewBypassToken.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\BypassTokenResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\BypassTokenResource;\n\nclass ViewBypassToken extends ViewRecord\n{\n    protected static string $resource = BypassTokenResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/BypassTokenResource/Pages/ViewBypassToken.php"},"app/Filament/Resources/BypassTokenResource/Pages/ListBypassTokens.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\BypassTokenResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\BypassTokenResource;\n\nclass ListBypassTokens extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = BypassTokenResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/BypassTokenResource/Pages/ListBypassTokens.php"},"app/Filament/Resources/BypassTokenResource/Pages/CreateBypassToken.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\BypassTokenResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\BypassTokenResource;\n\nclass CreateBypassToken extends CreateRecord\n{\n    protected static string $resource = BypassTokenResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/BypassTokenResource/Pages/CreateBypassToken.php"},"app/Filament/Resources/PlatformResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Platform;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\PlatformResource\\Pages;\n\nclass PlatformResource extends Resource\n{\n    protected static ?string $model = Platform::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([Grid::make(['default' => 0])->schema([])]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([])\n            ->filters([DateRangeFilter::make('created_at')])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListPlatforms::route('/'),\n            'create' => Pages\\CreatePlatform::route('/create'),\n            'view' => Pages\\ViewPlatform::route('/{record}'),\n            'edit' => Pages\\EditPlatform::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PlatformResource.php"},"app/Filament/Resources/PlatformResource/Pages/EditPlatform.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\PlatformResource;\n\nclass EditPlatform extends EditRecord\n{\n    protected static string $resource = PlatformResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PlatformResource/Pages/EditPlatform.php"},"app/Filament/Resources/PlatformResource/Pages/ViewPlatform.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\PlatformResource;\n\nclass ViewPlatform extends ViewRecord\n{\n    protected static string $resource = PlatformResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PlatformResource/Pages/ViewPlatform.php"},"app/Filament/Resources/PlatformResource/Pages/ListPlatforms.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\PlatformResource;\n\nclass ListPlatforms extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = PlatformResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PlatformResource/Pages/ListPlatforms.php"},"app/Filament/Resources/PlatformResource/Pages/CreatePlatform.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\PlatformResource;\n\nclass CreatePlatform extends CreateRecord\n{\n    protected static string $resource = PlatformResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/PlatformResource/Pages/CreatePlatform.php"},"app/Filament/Resources/CountryResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Country;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\CountryResource\\Pages;\n\nclass CountryResource extends Resource\n{\n    protected static ?string $model = Country::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    Select::make('continent_id')\n                        ->rules(['exists:continents,id'])\n                        ->required()\n                        ->relationship('continent', 'id')\n                        ->searchable()\n                        ->placeholder('Continent')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('continent.id')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('continent_id')\n                    ->relationship('continent', 'id')\n                    ->indicator('Continent')\n                    ->multiple()\n                    ->label('Continent'),\n            ])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            CountryResource\\RelationManagers\\LanguagesRelationManager::class,\n            CountryResource\\RelationManagers\\CurrenciesRelationManager::class,\n            CountryResource\\RelationManagers\\TimezonesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCountries::route('/'),\n            'create' => Pages\\CreateCountry::route('/create'),\n            'view' => Pages\\ViewCountry::route('/{record}'),\n            'edit' => Pages\\EditCountry::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CountryResource.php"},"app/Filament/Resources/CountryResource/Pages/EditCountry.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CountryResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\CountryResource;\n\nclass EditCountry extends EditRecord\n{\n    protected static string $resource = CountryResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CountryResource/Pages/EditCountry.php"},"app/Filament/Resources/CountryResource/Pages/ViewCountry.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CountryResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\CountryResource;\n\nclass ViewCountry extends ViewRecord\n{\n    protected static string $resource = CountryResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CountryResource/Pages/ViewCountry.php"},"app/Filament/Resources/CountryResource/Pages/ListCountries.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CountryResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\CountryResource;\n\nclass ListCountries extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = CountryResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CountryResource/Pages/ListCountries.php"},"app/Filament/Resources/CountryResource/Pages/CreateCountry.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CountryResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\CountryResource;\n\nclass CreateCountry extends CreateRecord\n{\n    protected static string $resource = CountryResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CountryResource/Pages/CreateCountry.php"},"app/Filament/Resources/CountryResource/RelationManagers/LanguagesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CountryResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Toggle;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass LanguagesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'languages';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('isocode')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Isocode')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('flag')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Flag')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Toggle::make('active')\n                    ->rules(['boolean'])\n                    ->default('0')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Toggle::make('published')\n                    ->rules(['boolean'])\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('isocode')->limit(50),\n                Tables\\Columns\\TextColumn::make('flag')->limit(50),\n                Tables\\Columns\\IconColumn::make('active'),\n                Tables\\Columns\\IconColumn::make('published'),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:572|crud-settings:572","path":"app/Filament/Resources/CountryResource/RelationManagers/LanguagesRelationManager.php"},"app/Filament/Resources/CountryResource/RelationManagers/CurrenciesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CountryResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CurrenciesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'currencies';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([Grid::make(['default' => 0])->schema([])]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CountryResource/RelationManagers/CurrenciesRelationManager.php"},"app/Filament/Resources/CountryResource/RelationManagers/TimezonesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CountryResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass TimezonesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'timezones';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([Grid::make(['default' => 0])->schema([])]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CountryResource/RelationManagers/TimezonesRelationManager.php"},"app/Filament/Resources/ContinentResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Continent;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\ContinentResource\\Pages;\n\nclass ContinentResource extends Resource\n{\n    protected static ?string $model = Continent::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([Grid::make(['default' => 0])->schema([])]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([])\n            ->filters([DateRangeFilter::make('created_at')])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            ContinentResource\\RelationManagers\\CountriesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListContinents::route('/'),\n            'create' => Pages\\CreateContinent::route('/create'),\n            'view' => Pages\\ViewContinent::route('/{record}'),\n            'edit' => Pages\\EditContinent::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ContinentResource.php"},"app/Filament/Resources/ContinentResource/Pages/EditContinent.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ContinentResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\ContinentResource;\n\nclass EditContinent extends EditRecord\n{\n    protected static string $resource = ContinentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ContinentResource/Pages/EditContinent.php"},"app/Filament/Resources/ContinentResource/Pages/ViewContinent.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ContinentResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\ContinentResource;\n\nclass ViewContinent extends ViewRecord\n{\n    protected static string $resource = ContinentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ContinentResource/Pages/ViewContinent.php"},"app/Filament/Resources/ContinentResource/Pages/ListContinents.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ContinentResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\ContinentResource;\n\nclass ListContinents extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = ContinentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ContinentResource/Pages/ListContinents.php"},"app/Filament/Resources/ContinentResource/Pages/CreateContinent.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ContinentResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\ContinentResource;\n\nclass CreateContinent extends CreateRecord\n{\n    protected static string $resource = ContinentResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ContinentResource/Pages/CreateContinent.php"},"app/Filament/Resources/ContinentResource/RelationManagers/CountriesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ContinentResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CountriesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'countries';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([Grid::make(['default' => 0])->schema([])]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('continent.id')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('continent_id')\n                    ->multiple()\n                    ->relationship('continent', 'id'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/ContinentResource/RelationManagers/CountriesRelationManager.php"},"app/Filament/Resources/CurrencyResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Currency;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\CurrencyResource\\Pages;\n\nclass CurrencyResource extends Resource\n{\n    protected static ?string $model = Currency::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([Grid::make(['default' => 0])->schema([])]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([])\n            ->filters([DateRangeFilter::make('created_at')])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            CurrencyResource\\RelationManagers\\CountriesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCurrencies::route('/'),\n            'create' => Pages\\CreateCurrency::route('/create'),\n            'view' => Pages\\ViewCurrency::route('/{record}'),\n            'edit' => Pages\\EditCurrency::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CurrencyResource.php"},"app/Filament/Resources/CurrencyResource/Pages/EditCurrency.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CurrencyResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\CurrencyResource;\n\nclass EditCurrency extends EditRecord\n{\n    protected static string $resource = CurrencyResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CurrencyResource/Pages/EditCurrency.php"},"app/Filament/Resources/CurrencyResource/Pages/ViewCurrency.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CurrencyResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\CurrencyResource;\n\nclass ViewCurrency extends ViewRecord\n{\n    protected static string $resource = CurrencyResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CurrencyResource/Pages/ViewCurrency.php"},"app/Filament/Resources/CurrencyResource/Pages/ListCurrencies.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CurrencyResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\CurrencyResource;\n\nclass ListCurrencies extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = CurrencyResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CurrencyResource/Pages/ListCurrencies.php"},"app/Filament/Resources/CurrencyResource/Pages/CreateCurrency.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CurrencyResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\CurrencyResource;\n\nclass CreateCurrency extends CreateRecord\n{\n    protected static string $resource = CurrencyResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CurrencyResource/Pages/CreateCurrency.php"},"app/Filament/Resources/CurrencyResource/RelationManagers/CountriesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CurrencyResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CountriesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'countries';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                Select::make('continent_id')\n                    ->rules(['exists:continents,id'])\n                    ->relationship('continent', 'id')\n                    ->searchable()\n                    ->placeholder('Continent')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('continent.id')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('continent_id')\n                    ->multiple()\n                    ->relationship('continent', 'id'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/CurrencyResource/RelationManagers/CountriesRelationManager.php"},"app/Filament/Resources/TimezoneResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Timezone;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse App\\Filament\\Resources\\TimezoneResource\\Pages;\n\nclass TimezoneResource extends Resource\n{\n    protected static ?string $model = Timezone::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([Grid::make(['default' => 0])->schema([])]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([])\n            ->filters([DateRangeFilter::make('created_at')])\n            ->actions([ViewAction::make(), EditAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            TimezoneResource\\RelationManagers\\CountriesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTimezones::route('/'),\n            'create' => Pages\\CreateTimezone::route('/create'),\n            'view' => Pages\\ViewTimezone::route('/{record}'),\n            'edit' => Pages\\EditTimezone::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/TimezoneResource.php"},"app/Filament/Resources/TimezoneResource/Pages/EditTimezone.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TimezoneResource\\Pages;\n\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\TimezoneResource;\n\nclass EditTimezone extends EditRecord\n{\n    protected static string $resource = TimezoneResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/TimezoneResource/Pages/EditTimezone.php"},"app/Filament/Resources/TimezoneResource/Pages/ViewTimezone.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TimezoneResource\\Pages;\n\nuse Filament\\Actions\\EditAction;\nuse Filament\\Actions\\DeleteAction;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\TimezoneResource;\n\nclass ViewTimezone extends ViewRecord\n{\n    protected static string $resource = TimezoneResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [EditAction::make(), DeleteAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/TimezoneResource/Pages/ViewTimezone.php"},"app/Filament/Resources/TimezoneResource/Pages/ListTimezones.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TimezoneResource\\Pages;\n\nuse Filament\\Actions\\CreateAction;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\TimezoneResource;\n\nclass ListTimezones extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = TimezoneResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [CreateAction::make()];\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/TimezoneResource/Pages/ListTimezones.php"},"app/Filament/Resources/TimezoneResource/Pages/CreateTimezone.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TimezoneResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\TimezoneResource;\n\nclass CreateTimezone extends CreateRecord\n{\n    protected static string $resource = TimezoneResource::class;\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/TimezoneResource/Pages/CreateTimezone.php"},"app/Filament/Resources/TimezoneResource/RelationManagers/CountriesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TimezoneResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\Form;\nuse Filament\\Resources\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\CreateAction;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Tables\\Actions\\DeleteBulkAction;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CountriesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'countries';\n\n    protected static ?string $recordTitleAttribute = 'id';\n\n    protected static bool $shouldRegisterNavigation = false;\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                Select::make('continent_id')\n                    ->rules(['exists:continents,id'])\n                    ->relationship('continent', 'id')\n                    ->searchable()\n                    ->placeholder('Continent')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('continent.id')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                SelectFilter::make('continent_id')\n                    ->multiple()\n                    ->relationship('continent', 'id'),\n            ])\n            ->headerActions([CreateAction::make()])\n            ->actions([EditAction::make(), DeleteAction::make()])\n            ->bulkActions([DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud|crud-settings","path":"app/Filament/Resources/TimezoneResource/RelationManagers/CountriesRelationManager.php"}},"skippedFiles":{},"removedModules":[],"migrationsDate":"2023_09_10","lastForeignAlias":0,"cascadeDeleteAsDefault":true,"cascadeUpdateAsDefault":true,"hasFixedForeignCallbacks":true,"hasFixedMigrations":true,"hasFixedHasManyDetailOnPageFields":true,"hasFixedLongForeignIndexName":true,"hasFixedEntityMigrationsGeneration":true,"pluginsData":{"app.vemto.filament":{"cruds":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true,"id":559,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true},{"selected":true},null,null,{"selected":true}]},{"selected":true,"id":560,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true},{"selected":true},null,null,{"selected":true}]},{"selected":true,"id":561,"inputs":true,"relationships":[null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true},{"selected":true}]},{"selected":true,"id":562,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true},{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,{"selected":true},null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},null,{"selected":true,"id":564,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true}]},{"selected":true,"id":565,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,{"selected":true},null,null,null,null,null,{"selected":true},null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,{"selected":true},{"selected":true},null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":566,"inputs":true,"relationships":[]},{"selected":true,"id":567,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,{"selected":true},null,null,null,null,null,{"selected":true},null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,{"selected":true},{"selected":true},null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":568,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,{"selected":true},null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":569,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":570,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,{"selected":true},null,null,null,{"selected":true}]},{"selected":true,"id":571,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true},null,{"selected":true}]},{"selected":true,"id":572,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,{"selected":true},null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":573,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true},{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,{"selected":true},null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]}],"allSelected":true}},"templatesData":{},"usesVite":true,"id":14,"createdAt":"2023-09-10 01:09:36","updatedAt":"2023-12-11 17:40:09"}},"hasmanydetails":{},"dependentselects":{},"hasmanythroughrelatioships":{}},"exportedItems":["projects:14"],"exportedRelationships":["Project:14:cruds","Crud:564:inputs","Crud:564:manyToManyComponents","Crud:564:hasManyDetails","Crud:564:manyToManyDetails","Crud:564:dependentSelects","Crud:566:inputs","Crud:566:manyToManyComponents","Crud:566:hasManyDetails","Crud:566:manyToManyDetails","Crud:566:dependentSelects","Crud:567:inputs","Crud:567:manyToManyComponents","Crud:567:hasManyDetails","Crud:567:manyToManyDetails","Crud:567:dependentSelects","Crud:569:inputs","Crud:569:manyToManyComponents","Crud:569:hasManyDetails","Crud:569:manyToManyDetails","Crud:569:dependentSelects","Crud:570:inputs","Crud:570:manyToManyComponents","Crud:570:hasManyDetails","Crud:570:manyToManyDetails","Crud:570:dependentSelects","Crud:571:inputs","Crud:571:manyToManyComponents","Crud:571:hasManyDetails","Crud:571:manyToManyDetails","Crud:571:dependentSelects","Crud:572:inputs","Crud:572:manyToManyComponents","Crud:572:hasManyDetails","Crud:572:manyToManyDetails","Crud:572:dependentSelects","Crud:573:inputs","Crud:573:manyToManyComponents","Crud:573:hasManyDetails","Crud:573:manyToManyDetails","Crud:573:dependentSelects","Project:14:entities","Entity:306:authProject","Entity:306:cruds","Entity:306:fields","Field:1711:inputs","Field:1711:foreign","Field:1711:relatedForeigns","Foreign:408:inputs","Foreign:431:inputs","Foreign:436:inputs","Foreign:445:inputs","Foreign:461:inputs","Field:1711:basicParentRelationships","BasicRelationship:554:inputs","BasicRelationship:554:contrary","BasicRelationship:553:inputs","BasicRelationship:553:contrary","BasicRelationship:554:hasManyDetails","BasicRelationship:553:hasManyDetails","BasicRelationship:568:inputs","BasicRelationship:568:contrary","BasicRelationship:567:inputs","BasicRelationship:567:contrary","BasicRelationship:568:hasManyDetails","BasicRelationship:567:hasManyDetails","BasicRelationship:578:inputs","BasicRelationship:578:contrary","BasicRelationship:577:inputs","BasicRelationship:577:contrary","BasicRelationship:578:hasManyDetails","BasicRelationship:577:hasManyDetails","BasicRelationship:594:inputs","BasicRelationship:594:contrary","BasicRelationship:593:inputs","BasicRelationship:593:contrary","BasicRelationship:594:hasManyDetails","BasicRelationship:593:hasManyDetails","BasicRelationship:618:inputs","BasicRelationship:618:contrary","BasicRelationship:617:inputs","BasicRelationship:617:contrary","BasicRelationship:618:hasManyDetails","BasicRelationship:617:hasManyDetails","Field:1711:basicForeignRelationships","Field:1711:manyToManyModelRelationships","Field:1711:manyToManylocalModelRelationships","Field:1711:typedMorphRelationships","Field:1711:identifiedMorphRelationships","Field:1792:inputs","Field:1792:foreign","Foreign:409:inputs","Field:1792:relatedForeigns","Field:1792:basicParentRelationships","Field:1792:basicForeignRelationships","BasicRelationship:556:inputs","BasicRelationship:556:contrary","BasicRelationship:555:inputs","BasicRelationship:555:contrary","BasicRelationship:556:hasManyDetails","BasicRelationship:555:hasManyDetails","Field:1792:manyToManyModelRelationships","Field:1792:manyToManylocalModelRelationships","Field:1792:typedMorphRelationships","Field:1792:identifiedMorphRelationships","Field:1902:inputs","Field:1902:foreign","Field:1902:relatedForeigns","Field:1902:basicParentRelationships","Field:1902:basicForeignRelationships","Field:1902:manyToManyModelRelationships","Field:1902:manyToManylocalModelRelationships","Field:1902:typedMorphRelationships","Field:1902:identifiedMorphRelationships","Field:1903:inputs","Field:1903:foreign","Field:1903:relatedForeigns","Field:1903:basicParentRelationships","Field:1903:basicForeignRelationships","Field:1903:manyToManyModelRelationships","Field:1903:manyToManylocalModelRelationships","Field:1903:typedMorphRelationships","Field:1903:identifiedMorphRelationships","Field:1898:inputs","Field:1898:foreign","Field:1898:relatedForeigns","Field:1898:basicParentRelationships","Field:1898:basicForeignRelationships","Field:1898:manyToManyModelRelationships","Field:1898:manyToManylocalModelRelationships","Field:1898:typedMorphRelationships","Field:1898:identifiedMorphRelationships","Field:1899:inputs","Field:1899:foreign","Field:1899:relatedForeigns","Field:1899:basicParentRelationships","Field:1899:basicForeignRelationships","Field:1899:manyToManyModelRelationships","Field:1899:manyToManylocalModelRelationships","Field:1899:typedMorphRelationships","Field:1899:identifiedMorphRelationships","Field:1900:inputs","Field:1900:foreign","Field:1900:relatedForeigns","Field:1900:basicParentRelationships","Field:1900:basicForeignRelationships","Field:1900:manyToManyModelRelationships","Field:1900:manyToManylocalModelRelationships","Field:1900:typedMorphRelationships","Field:1900:identifiedMorphRelationships","Field:1901:inputs","Field:1901:foreign","Field:1901:relatedForeigns","Field:1901:basicParentRelationships","Field:1901:basicForeignRelationships","Field:1901:manyToManyModelRelationships","Field:1901:manyToManylocalModelRelationships","Field:1901:typedMorphRelationships","Field:1901:identifiedMorphRelationships","Field:1905:inputs","Field:1905:foreign","Field:1905:relatedForeigns","Field:1905:basicParentRelationships","Field:1905:basicForeignRelationships","Field:1905:manyToManyModelRelationships","Field:1905:manyToManylocalModelRelationships","Field:1905:typedMorphRelationships","Field:1905:identifiedMorphRelationships","Field:1904:inputs","Field:1904:foreign","Field:1904:relatedForeigns","Field:1904:basicParentRelationships","Field:1904:basicForeignRelationships","Field:1904:manyToManyModelRelationships","Field:1904:manyToManylocalModelRelationships","Field:1904:typedMorphRelationships","Field:1904:identifiedMorphRelationships","Field:1906:inputs","Field:1906:foreign","Field:1906:relatedForeigns","Field:1906:basicParentRelationships","Field:1906:basicForeignRelationships","Field:1906:manyToManyModelRelationships","Field:1906:manyToManylocalModelRelationships","Field:1906:typedMorphRelationships","Field:1906:identifiedMorphRelationships","Field:1908:inputs","Field:1908:foreign","Field:1908:relatedForeigns","Field:1908:basicParentRelationships","Field:1908:basicForeignRelationships","Field:1908:manyToManyModelRelationships","Field:1908:manyToManylocalModelRelationships","Field:1908:typedMorphRelationships","Field:1908:identifiedMorphRelationships","Entity:306:foreigns","Entity:306:pivotRelationships","Entity:306:pivotMorphRelationships","Entity:306:basicRelationships","Entity:306:hasManyThroughRelationships","Entity:306:basicRelatedRelationships","Entity:306:manyToManyRelationships","Entity:306:manyToManyRelatedRelationships","Entity:306:morphRelationships","Entity:306:morphRelatedRelationships","Entity:346:authProject","Entity:346:cruds","Entity:346:fields","Field:1929:inputs","Field:1929:foreign","Field:1929:relatedForeigns","Field:1929:basicParentRelationships","Field:1929:basicForeignRelationships","Field:1929:manyToManyModelRelationships","Field:1929:manyToManylocalModelRelationships","Field:1929:typedMorphRelationships","Field:1929:identifiedMorphRelationships","Entity:346:foreigns","Entity:346:pivotRelationships","Entity:346:pivotMorphRelationships","Entity:346:basicRelationships","Entity:346:hasManyThroughRelationships","Entity:346:basicRelatedRelationships","Entity:346:manyToManyRelationships","Entity:346:manyToManyRelatedRelationships","Entity:346:morphRelationships","Entity:346:morphRelatedRelationships","Entity:343:authProject","Entity:343:cruds","Entity:343:fields","Field:1918:inputs","Field:1918:foreign","Field:1918:relatedForeigns","Field:1918:basicParentRelationships","Field:1918:basicForeignRelationships","Field:1918:manyToManyModelRelationships","Field:1918:manyToManylocalModelRelationships","Field:1918:typedMorphRelationships","Field:1918:identifiedMorphRelationships","Field:1921:inputs","Field:1921:foreign","Field:1921:relatedForeigns","Field:1921:basicParentRelationships","Field:1921:basicForeignRelationships","Field:1921:manyToManyModelRelationships","Field:1921:manyToManylocalModelRelationships","Field:1921:typedMorphRelationships","Field:1921:identifiedMorphRelationships","Field:1922:inputs","Field:1922:foreign","Foreign:455:inputs","Field:1922:relatedForeigns","Field:1922:basicParentRelationships","Field:1922:basicForeignRelationships","BasicRelationship:612:inputs","BasicRelationship:612:contrary","BasicRelationship:611:inputs","BasicRelationship:611:contrary","BasicRelationship:612:hasManyDetails","BasicRelationship:611:hasManyDetails","Field:1922:manyToManyModelRelationships","Field:1922:manyToManylocalModelRelationships","Field:1922:typedMorphRelationships","Field:1922:identifiedMorphRelationships","Entity:343:foreigns","Entity:343:pivotRelationships","Entity:343:pivotMorphRelationships","Entity:343:basicRelationships","Entity:343:hasManyThroughRelationships","Entity:343:basicRelatedRelationships","Entity:343:manyToManyRelationships","Entity:343:manyToManyRelatedRelationships","Entity:343:morphRelationships","Entity:343:morphRelatedRelationships","Entity:335:authProject","Entity:335:cruds","Entity:335:fields","Field:1842:inputs","Field:1842:foreign","Field:1842:relatedForeigns","Field:1842:basicParentRelationships","Field:1842:basicForeignRelationships","Field:1842:manyToManyModelRelationships","Field:1842:manyToManylocalModelRelationships","Field:1842:typedMorphRelationships","Field:1842:identifiedMorphRelationships","Field:1843:inputs","Field:1843:foreign","Foreign:438:inputs","Field:1843:relatedForeigns","Field:1843:basicParentRelationships","Field:1843:basicForeignRelationships","BasicRelationship:582:inputs","BasicRelationship:582:contrary","BasicRelationship:581:inputs","BasicRelationship:581:contrary","BasicRelationship:582:hasManyDetails","BasicRelationship:581:hasManyDetails","Field:1843:manyToManyModelRelationships","Field:1843:manyToManylocalModelRelationships","Field:1843:typedMorphRelationships","Field:1843:identifiedMorphRelationships","Entity:335:foreigns","Entity:335:pivotRelationships","Entity:335:pivotMorphRelationships","Entity:335:basicRelationships","Entity:335:hasManyThroughRelationships","Entity:335:basicRelatedRelationships","Entity:335:manyToManyRelationships","Entity:335:manyToManyRelatedRelationships","Entity:335:morphRelationships","Entity:335:morphRelatedRelationships","Entity:329:authProject","Entity:329:cruds","Entity:329:fields","Field:1825:inputs","Field:1825:foreign","Foreign:429:inputs","Field:1825:relatedForeigns","Field:1825:basicParentRelationships","Field:1825:basicForeignRelationships","Field:1825:manyToManyModelRelationships","Field:1825:manyToManylocalModelRelationships","Field:1825:typedMorphRelationships","Field:1825:identifiedMorphRelationships","Field:1826:inputs","Field:1826:foreign","Field:1826:relatedForeigns","Field:1826:basicParentRelationships","Field:1826:basicForeignRelationships","Field:1826:manyToManyModelRelationships","Field:1826:manyToManylocalModelRelationships","Field:1826:typedMorphRelationships","Field:1826:identifiedMorphRelationships","Field:1827:inputs","Field:1827:foreign","Field:1827:relatedForeigns","Field:1827:basicParentRelationships","Field:1827:basicForeignRelationships","Field:1827:manyToManyModelRelationships","Field:1827:manyToManylocalModelRelationships","Field:1827:typedMorphRelationships","Field:1827:identifiedMorphRelationships","Entity:329:foreigns","Entity:329:pivotRelationships","Entity:329:pivotMorphRelationships","Entity:329:basicRelationships","Entity:329:hasManyThroughRelationships","Entity:329:basicRelatedRelationships","Entity:329:manyToManyRelationships","Entity:329:manyToManyRelatedRelationships","Entity:329:morphRelationships","Entity:329:morphRelatedRelationships","Entity:292:authProject","Entity:292:cruds","Entity:292:fields","Field:1668:inputs","Field:1668:foreign","Field:1668:relatedForeigns","Foreign:392:inputs","Foreign:426:inputs","Foreign:433:inputs","Foreign:434:inputs","Foreign:448:inputs","Field:1668:basicParentRelationships","BasicRelationship:537:inputs","BasicRelationship:537:contrary","BasicRelationship:538:inputs","BasicRelationship:538:contrary","BasicRelationship:537:hasManyDetails","BasicRelationship:538:hasManyDetails","BasicRelationship:566:inputs","BasicRelationship:566:contrary","BasicRelationship:565:inputs","BasicRelationship:565:contrary","BasicRelationship:566:hasManyDetails","BasicRelationship:565:hasManyDetails","BasicRelationship:572:inputs","BasicRelationship:572:contrary","BasicRelationship:571:inputs","BasicRelationship:571:contrary","BasicRelationship:572:hasManyDetails","BasicRelationship:571:hasManyDetails","BasicRelationship:574:inputs","BasicRelationship:574:contrary","BasicRelationship:573:inputs","BasicRelationship:573:contrary","BasicRelationship:574:hasManyDetails","BasicRelationship:573:hasManyDetails","BasicRelationship:600:inputs","BasicRelationship:600:contrary","BasicRelationship:599:inputs","BasicRelationship:599:contrary","BasicRelationship:600:hasManyDetails","BasicRelationship:599:hasManyDetails","Field:1668:basicForeignRelationships","Field:1668:manyToManyModelRelationships","Field:1668:manyToManylocalModelRelationships","Field:1668:typedMorphRelationships","Field:1668:identifiedMorphRelationships","Field:1810:inputs","Field:1810:foreign","Field:1810:relatedForeigns","Field:1810:basicParentRelationships","Field:1810:basicForeignRelationships","Field:1810:manyToManyModelRelationships","Field:1810:manyToManylocalModelRelationships","Field:1810:typedMorphRelationships","Field:1810:identifiedMorphRelationships","Field:1722:inputs","Field:1722:foreign","Field:1722:relatedForeigns","Field:1722:basicParentRelationships","Field:1722:basicForeignRelationships","Field:1722:manyToManyModelRelationships","Field:1722:manyToManylocalModelRelationships","Field:1722:typedMorphRelationships","Field:1722:identifiedMorphRelationships","Field:1723:inputs","Field:1723:foreign","Field:1723:relatedForeigns","Field:1723:basicParentRelationships","Field:1723:basicForeignRelationships","Field:1723:manyToManyModelRelationships","Field:1723:manyToManylocalModelRelationships","Field:1723:typedMorphRelationships","Field:1723:identifiedMorphRelationships","Field:1724:inputs","Field:1724:foreign","Field:1724:relatedForeigns","Field:1724:basicParentRelationships","Field:1724:basicForeignRelationships","Field:1724:manyToManyModelRelationships","Field:1724:manyToManylocalModelRelationships","Field:1724:typedMorphRelationships","Field:1724:identifiedMorphRelationships","Field:1725:inputs","Field:1725:foreign","Field:1725:relatedForeigns","Field:1725:basicParentRelationships","Field:1725:basicForeignRelationships","Field:1725:manyToManyModelRelationships","Field:1725:manyToManylocalModelRelationships","Field:1725:typedMorphRelationships","Field:1725:identifiedMorphRelationships","Field:1726:inputs","Field:1726:foreign","Field:1726:relatedForeigns","Field:1726:basicParentRelationships","Field:1726:basicForeignRelationships","Field:1726:manyToManyModelRelationships","Field:1726:manyToManylocalModelRelationships","Field:1726:typedMorphRelationships","Field:1726:identifiedMorphRelationships","Field:1727:inputs","Field:1727:foreign","Field:1727:relatedForeigns","Field:1727:basicParentRelationships","Field:1727:basicForeignRelationships","Field:1727:manyToManyModelRelationships","Field:1727:manyToManylocalModelRelationships","Field:1727:typedMorphRelationships","Field:1727:identifiedMorphRelationships","Field:1728:inputs","Field:1728:foreign","Field:1728:relatedForeigns","Field:1728:basicParentRelationships","Field:1728:basicForeignRelationships","Field:1728:manyToManyModelRelationships","Field:1728:manyToManylocalModelRelationships","Field:1728:typedMorphRelationships","Field:1728:identifiedMorphRelationships","Field:1759:inputs","Field:1759:foreign","Foreign:391:inputs","Field:1759:relatedForeigns","Field:1759:basicParentRelationships","Field:1759:basicForeignRelationships","BasicRelationship:535:inputs","BasicRelationship:535:contrary","BasicRelationship:536:inputs","BasicRelationship:536:contrary","BasicRelationship:535:hasManyDetails","BasicRelationship:536:hasManyDetails","Field:1759:manyToManyModelRelationships","Field:1759:manyToManylocalModelRelationships","Field:1759:typedMorphRelationships","Field:1759:identifiedMorphRelationships","Field:1760:inputs","Field:1760:foreign","Field:1760:relatedForeigns","Field:1760:basicParentRelationships","Field:1760:basicForeignRelationships","Field:1760:manyToManyModelRelationships","Field:1760:manyToManylocalModelRelationships","Field:1760:typedMorphRelationships","Field:1760:identifiedMorphRelationships","Entity:292:foreigns","Entity:292:pivotRelationships","Entity:292:pivotMorphRelationships","Entity:292:basicRelationships","Entity:292:hasManyThroughRelationships","Entity:292:basicRelatedRelationships","Entity:292:manyToManyRelationships","Entity:292:manyToManyRelatedRelationships","Entity:292:morphRelationships","Entity:292:morphRelatedRelationships","Entity:307:authProject","Entity:307:cruds","Entity:307:fields","Field:1712:inputs","Field:1712:foreign","Field:1712:relatedForeigns","Foreign:459:inputs","Foreign:460:inputs","Field:1712:basicParentRelationships","BasicRelationship:616:inputs","BasicRelationship:616:contrary","BasicRelationship:615:inputs","BasicRelationship:615:contrary","BasicRelationship:616:hasManyDetails","BasicRelationship:615:hasManyDetails","Field:1712:basicForeignRelationships","Field:1712:manyToManyModelRelationships","Field:1712:manyToManylocalModelRelationships","Field:1712:typedMorphRelationships","Field:1712:identifiedMorphRelationships","Field:1786:inputs","Field:1786:foreign","Field:1786:relatedForeigns","Field:1786:basicParentRelationships","Field:1786:basicForeignRelationships","Field:1786:manyToManyModelRelationships","Field:1786:manyToManylocalModelRelationships","Field:1786:typedMorphRelationships","Field:1786:identifiedMorphRelationships","Field:1787:inputs","Field:1787:foreign","Field:1787:relatedForeigns","Field:1787:basicParentRelationships","Field:1787:basicForeignRelationships","Field:1787:manyToManyModelRelationships","Field:1787:manyToManylocalModelRelationships","Field:1787:typedMorphRelationships","Field:1787:identifiedMorphRelationships","Field:1788:inputs","Field:1788:foreign","Field:1788:relatedForeigns","Field:1788:basicParentRelationships","Field:1788:basicForeignRelationships","Field:1788:manyToManyModelRelationships","Field:1788:manyToManylocalModelRelationships","Field:1788:typedMorphRelationships","Field:1788:identifiedMorphRelationships","Field:1933:inputs","Field:1933:foreign","Field:1933:relatedForeigns","Field:1933:basicParentRelationships","Field:1933:basicForeignRelationships","Field:1933:manyToManyModelRelationships","Field:1933:manyToManylocalModelRelationships","Field:1933:typedMorphRelationships","Field:1933:identifiedMorphRelationships","Field:1935:inputs","Field:1935:foreign","Field:1935:relatedForeigns","Field:1935:basicParentRelationships","Field:1935:basicForeignRelationships","Field:1935:manyToManyModelRelationships","Field:1935:manyToManylocalModelRelationships","Field:1935:typedMorphRelationships","Field:1935:identifiedMorphRelationships","Field:1938:inputs","Field:1938:foreign","Field:1938:relatedForeigns","Field:1938:basicParentRelationships","Field:1938:basicForeignRelationships","Field:1938:manyToManyModelRelationships","Field:1938:manyToManylocalModelRelationships","Field:1938:typedMorphRelationships","Field:1938:identifiedMorphRelationships","Field:1936:inputs","Field:1936:foreign","Field:1936:relatedForeigns","Field:1936:basicParentRelationships","Field:1936:basicForeignRelationships","Field:1936:manyToManyModelRelationships","Field:1936:manyToManylocalModelRelationships","Field:1936:typedMorphRelationships","Field:1936:identifiedMorphRelationships","Field:1939:inputs","Field:1939:foreign","Field:1939:relatedForeigns","Field:1939:basicParentRelationships","Field:1939:basicForeignRelationships","Field:1939:manyToManyModelRelationships","Field:1939:manyToManylocalModelRelationships","Field:1939:typedMorphRelationships","Field:1939:identifiedMorphRelationships","Field:1940:inputs","Field:1940:foreign","Field:1940:relatedForeigns","Field:1940:basicParentRelationships","Field:1940:basicForeignRelationships","Field:1940:manyToManyModelRelationships","Field:1940:manyToManylocalModelRelationships","Field:1940:typedMorphRelationships","Field:1940:identifiedMorphRelationships","Field:1941:inputs","Field:1941:foreign","Field:1941:relatedForeigns","Field:1941:basicParentRelationships","Field:1941:basicForeignRelationships","Field:1941:manyToManyModelRelationships","Field:1941:manyToManylocalModelRelationships","Field:1941:typedMorphRelationships","Field:1941:identifiedMorphRelationships","Entity:307:foreigns","Entity:307:pivotRelationships","Entity:307:pivotMorphRelationships","Entity:307:basicRelationships","Entity:307:hasManyThroughRelationships","Entity:307:basicRelatedRelationships","Entity:307:manyToManyRelationships","Entity:307:manyToManyRelatedRelationships","Entity:307:morphRelationships","Entity:307:morphRelatedRelationships","Entity:345:authProject","Entity:345:cruds","Entity:345:fields","Field:1926:inputs","Field:1926:foreign","Field:1926:relatedForeigns","Field:1926:basicParentRelationships","Field:1926:basicForeignRelationships","Field:1926:manyToManyModelRelationships","Field:1926:manyToManylocalModelRelationships","Field:1926:typedMorphRelationships","Field:1926:identifiedMorphRelationships","Field:1927:inputs","Field:1927:foreign","Field:1927:relatedForeigns","Field:1927:basicParentRelationships","Field:1927:basicForeignRelationships","Field:1927:manyToManyModelRelationships","Field:1927:manyToManylocalModelRelationships","Field:1927:typedMorphRelationships","Field:1927:identifiedMorphRelationships","Field:1928:inputs","Field:1928:foreign","Field:1928:relatedForeigns","Field:1928:basicParentRelationships","Field:1928:basicForeignRelationships","Field:1928:manyToManyModelRelationships","Field:1928:manyToManylocalModelRelationships","Field:1928:typedMorphRelationships","Field:1928:identifiedMorphRelationships","Entity:345:foreigns","Entity:345:pivotRelationships","Entity:345:pivotMorphRelationships","Entity:345:basicRelationships","Entity:345:hasManyThroughRelationships","Entity:345:basicRelatedRelationships","Entity:345:manyToManyRelationships","Entity:345:manyToManyRelatedRelationships","Entity:345:morphRelationships","Entity:345:morphRelatedRelationships","Entity:332:authProject","Entity:332:cruds","Entity:332:fields","Field:1839:inputs","Field:1839:foreign","Field:1839:relatedForeigns","Foreign:452:inputs","Field:1839:basicParentRelationships","BasicRelationship:606:inputs","BasicRelationship:606:contrary","BasicRelationship:605:inputs","BasicRelationship:605:contrary","BasicRelationship:606:hasManyDetails","BasicRelationship:605:hasManyDetails","Field:1839:basicForeignRelationships","Field:1839:manyToManyModelRelationships","Field:1839:manyToManylocalModelRelationships","Field:1839:typedMorphRelationships","Field:1839:identifiedMorphRelationships","Entity:332:foreigns","Entity:332:pivotRelationships","Entity:332:pivotMorphRelationships","Entity:332:basicRelationships","Entity:332:hasManyThroughRelationships","Entity:332:basicRelatedRelationships","Entity:332:manyToManyRelationships","Entity:332:manyToManyRelatedRelationships","Entity:332:morphRelationships","Entity:332:morphRelatedRelationships","Entity:309:authProject","Entity:309:cruds","Entity:309:fields","Field:1736:inputs","Field:1736:foreign","Field:1736:relatedForeigns","Foreign:411:inputs","Foreign:413:inputs","Foreign:418:inputs","Field:1736:basicParentRelationships","Field:1736:basicForeignRelationships","Field:1736:manyToManyModelRelationships","Field:1736:manyToManylocalModelRelationships","Field:1736:typedMorphRelationships","Field:1736:identifiedMorphRelationships","Field:1909:inputs","Field:1909:foreign","Field:1909:relatedForeigns","Field:1909:basicParentRelationships","Field:1909:basicForeignRelationships","Field:1909:manyToManyModelRelationships","Field:1909:manyToManylocalModelRelationships","Field:1909:typedMorphRelationships","Field:1909:identifiedMorphRelationships","Entity:309:foreigns","Entity:309:pivotRelationships","Entity:309:pivotMorphRelationships","Entity:309:basicRelationships","Entity:309:hasManyThroughRelationships","Entity:309:basicRelatedRelationships","Entity:309:manyToManyRelationships","ManyToManyRelationship:146:contrary","ManyToManyRelationship:145:contrary","ManyToManyRelationship:146:components","ManyToManyRelationship:146:manyToManyDetails","ManyToManyRelationship:145:components","ManyToManyRelationship:145:manyToManyDetails","ManyToManyRelationship:148:contrary","ManyToManyRelationship:147:contrary","ManyToManyRelationship:148:components","ManyToManyRelationship:148:manyToManyDetails","ManyToManyRelationship:147:components","ManyToManyRelationship:147:manyToManyDetails","ManyToManyRelationship:141:contrary","ManyToManyRelationship:142:contrary","ManyToManyRelationship:141:components","ManyToManyRelationship:141:manyToManyDetails","ManyToManyRelationship:142:components","ManyToManyRelationship:142:manyToManyDetails","Entity:309:manyToManyRelatedRelationships","Entity:309:morphRelationships","Entity:309:morphRelatedRelationships","Entity:319:authProject","Entity:319:cruds","Entity:319:fields","Field:1796:inputs","Field:1796:foreign","Field:1796:relatedForeigns","Field:1796:basicParentRelationships","Field:1796:basicForeignRelationships","Field:1796:manyToManyModelRelationships","Field:1796:manyToManylocalModelRelationships","Field:1796:typedMorphRelationships","Field:1796:identifiedMorphRelationships","Field:1797:inputs","Field:1797:foreign","Foreign:414:inputs","Field:1797:relatedForeigns","Field:1797:basicParentRelationships","Field:1797:basicForeignRelationships","Field:1797:manyToManyModelRelationships","Field:1797:manyToManylocalModelRelationships","Field:1797:typedMorphRelationships","Field:1797:identifiedMorphRelationships","Entity:319:foreigns","Entity:319:pivotRelationships","Entity:319:pivotMorphRelationships","Entity:319:basicRelationships","Entity:319:hasManyThroughRelationships","Entity:319:basicRelatedRelationships","Entity:319:manyToManyRelationships","Entity:319:manyToManyRelatedRelationships","Entity:319:morphRelationships","Entity:319:morphRelatedRelationships","Entity:317:authProject","Entity:317:cruds","Entity:317:fields","Field:1793:inputs","Field:1793:foreign","Foreign:410:inputs","Field:1793:relatedForeigns","Field:1793:basicParentRelationships","Field:1793:basicForeignRelationships","Field:1793:manyToManyModelRelationships","Field:1793:manyToManylocalModelRelationships","Field:1793:typedMorphRelationships","Field:1793:identifiedMorphRelationships","Field:1794:inputs","Field:1794:foreign","Field:1794:relatedForeigns","Field:1794:basicParentRelationships","Field:1794:basicForeignRelationships","Field:1794:manyToManyModelRelationships","Field:1794:manyToManylocalModelRelationships","Field:1794:typedMorphRelationships","Field:1794:identifiedMorphRelationships","Entity:317:foreigns","Entity:317:pivotRelationships","Entity:317:pivotMorphRelationships","Entity:317:basicRelationships","Entity:317:hasManyThroughRelationships","Entity:317:basicRelatedRelationships","Entity:317:manyToManyRelationships","Entity:317:manyToManyRelatedRelationships","Entity:317:morphRelationships","Entity:317:morphRelatedRelationships","Entity:321:authProject","Entity:321:cruds","Entity:321:fields","Field:1802:inputs","Field:1802:foreign","Field:1802:relatedForeigns","Field:1802:basicParentRelationships","Field:1802:basicForeignRelationships","Field:1802:manyToManyModelRelationships","Field:1802:manyToManylocalModelRelationships","Field:1802:typedMorphRelationships","Field:1802:identifiedMorphRelationships","Field:1803:inputs","Field:1803:foreign","Foreign:419:inputs","Field:1803:relatedForeigns","Field:1803:basicParentRelationships","Field:1803:basicForeignRelationships","Field:1803:manyToManyModelRelationships","Field:1803:manyToManylocalModelRelationships","Field:1803:typedMorphRelationships","Field:1803:identifiedMorphRelationships","Entity:321:foreigns","Entity:321:pivotRelationships","Entity:321:pivotMorphRelationships","Entity:321:basicRelationships","Entity:321:hasManyThroughRelationships","Entity:321:basicRelatedRelationships","Entity:321:manyToManyRelationships","Entity:321:manyToManyRelatedRelationships","Entity:321:morphRelationships","Entity:321:morphRelatedRelationships","Entity:310:authProject","Entity:310:cruds","Entity:310:fields","Field:1737:inputs","Field:1737:foreign","Field:1737:relatedForeigns","Field:1737:basicParentRelationships","Field:1737:basicForeignRelationships","Field:1737:manyToManyModelRelationships","Field:1737:manyToManylocalModelRelationships","Field:1737:typedMorphRelationships","Field:1737:identifiedMorphRelationships","Entity:310:foreigns","Entity:310:pivotRelationships","Entity:310:pivotMorphRelationships","Entity:310:basicRelationships","Entity:310:hasManyThroughRelationships","Entity:310:basicRelatedRelationships","Entity:310:manyToManyRelationships","Entity:310:manyToManyRelatedRelationships","Entity:310:morphRelationships","Entity:310:morphRelatedRelationships","Entity:333:authProject","Entity:333:cruds","Entity:333:fields","Field:1840:inputs","Field:1840:foreign","Field:1840:relatedForeigns","Field:1840:basicParentRelationships","Field:1840:basicForeignRelationships","Field:1840:manyToManyModelRelationships","Field:1840:manyToManylocalModelRelationships","Field:1840:typedMorphRelationships","Field:1840:identifiedMorphRelationships","Field:1848:inputs","Field:1848:foreign","Foreign:442:inputs","Field:1848:relatedForeigns","Field:1848:basicParentRelationships","Field:1848:basicForeignRelationships","BasicRelationship:590:inputs","BasicRelationship:590:contrary","BasicRelationship:589:inputs","BasicRelationship:589:contrary","BasicRelationship:590:hasManyDetails","BasicRelationship:589:hasManyDetails","Field:1848:manyToManyModelRelationships","Field:1848:manyToManylocalModelRelationships","Field:1848:typedMorphRelationships","Field:1848:identifiedMorphRelationships","Entity:333:foreigns","Entity:333:pivotRelationships","Entity:333:pivotMorphRelationships","Entity:333:basicRelationships","Entity:333:hasManyThroughRelationships","Entity:333:basicRelatedRelationships","Entity:333:manyToManyRelationships","Entity:333:manyToManyRelatedRelationships","Entity:333:morphRelationships","Entity:333:morphRelatedRelationships","Entity:324:authProject","Entity:324:cruds","Entity:324:fields","Field:1809:inputs","Field:1809:foreign","Field:1809:relatedForeigns","Foreign:447:inputs","Field:1809:basicParentRelationships","BasicRelationship:598:inputs","BasicRelationship:598:contrary","BasicRelationship:597:inputs","BasicRelationship:597:contrary","BasicRelationship:598:hasManyDetails","BasicRelationship:597:hasManyDetails","Field:1809:basicForeignRelationships","Field:1809:manyToManyModelRelationships","Field:1809:manyToManylocalModelRelationships","Field:1809:typedMorphRelationships","Field:1809:identifiedMorphRelationships","Field:1875:inputs","Field:1875:foreign","Field:1875:relatedForeigns","Field:1875:basicParentRelationships","Field:1875:basicForeignRelationships","Field:1875:manyToManyModelRelationships","Field:1875:manyToManylocalModelRelationships","Field:1875:typedMorphRelationships","Field:1875:identifiedMorphRelationships","Field:1874:inputs","Field:1874:foreign","Field:1874:relatedForeigns","Field:1874:basicParentRelationships","Field:1874:basicForeignRelationships","Field:1874:manyToManyModelRelationships","Field:1874:manyToManylocalModelRelationships","Field:1874:typedMorphRelationships","Field:1874:identifiedMorphRelationships","Field:1863:inputs","Field:1863:foreign","Field:1863:relatedForeigns","Field:1863:basicParentRelationships","Field:1863:basicForeignRelationships","Field:1863:manyToManyModelRelationships","Field:1863:manyToManylocalModelRelationships","Field:1863:typedMorphRelationships","Field:1863:identifiedMorphRelationships","Field:1864:inputs","Field:1864:foreign","Field:1864:relatedForeigns","Field:1864:basicParentRelationships","Field:1864:basicForeignRelationships","Field:1864:manyToManyModelRelationships","Field:1864:manyToManylocalModelRelationships","Field:1864:typedMorphRelationships","Field:1864:identifiedMorphRelationships","Field:1865:inputs","Field:1865:foreign","Field:1865:relatedForeigns","Field:1865:basicParentRelationships","Field:1865:basicForeignRelationships","Field:1865:manyToManyModelRelationships","Field:1865:manyToManylocalModelRelationships","Field:1865:typedMorphRelationships","Field:1865:identifiedMorphRelationships","Field:1866:inputs","Field:1866:foreign","Field:1866:relatedForeigns","Field:1866:basicParentRelationships","Field:1866:basicForeignRelationships","Field:1866:manyToManyModelRelationships","Field:1866:manyToManylocalModelRelationships","Field:1866:typedMorphRelationships","Field:1866:identifiedMorphRelationships","Field:1867:inputs","Field:1867:foreign","Field:1867:relatedForeigns","Field:1867:basicParentRelationships","Field:1867:basicForeignRelationships","Field:1867:manyToManyModelRelationships","Field:1867:manyToManylocalModelRelationships","Field:1867:typedMorphRelationships","Field:1867:identifiedMorphRelationships","Field:1868:inputs","Field:1868:foreign","Field:1868:relatedForeigns","Field:1868:basicParentRelationships","Field:1868:basicForeignRelationships","Field:1868:manyToManyModelRelationships","Field:1868:manyToManylocalModelRelationships","Field:1868:typedMorphRelationships","Field:1868:identifiedMorphRelationships","Field:1869:inputs","Field:1869:foreign","Field:1869:relatedForeigns","Field:1869:basicParentRelationships","Field:1869:basicForeignRelationships","Field:1869:manyToManyModelRelationships","Field:1869:manyToManylocalModelRelationships","Field:1869:typedMorphRelationships","Field:1869:identifiedMorphRelationships","Field:1871:inputs","Field:1871:foreign","Field:1871:relatedForeigns","Field:1871:basicParentRelationships","Field:1871:basicForeignRelationships","Field:1871:manyToManyModelRelationships","Field:1871:manyToManylocalModelRelationships","Field:1871:typedMorphRelationships","Field:1871:identifiedMorphRelationships","Field:1872:inputs","Field:1872:foreign","Foreign:446:inputs","Field:1872:relatedForeigns","Field:1872:basicParentRelationships","Field:1872:basicForeignRelationships","BasicRelationship:595:inputs","BasicRelationship:595:contrary","BasicRelationship:596:inputs","BasicRelationship:596:contrary","BasicRelationship:595:hasManyDetails","BasicRelationship:596:hasManyDetails","Field:1872:manyToManyModelRelationships","Field:1872:manyToManylocalModelRelationships","Field:1872:typedMorphRelationships","Field:1872:identifiedMorphRelationships","Field:1873:inputs","Field:1873:foreign","Field:1873:relatedForeigns","Field:1873:basicParentRelationships","Field:1873:basicForeignRelationships","Field:1873:manyToManyModelRelationships","Field:1873:manyToManylocalModelRelationships","Field:1873:typedMorphRelationships","Field:1873:identifiedMorphRelationships","Entity:324:foreigns","Entity:324:pivotRelationships","Entity:324:pivotMorphRelationships","Entity:324:basicRelationships","Entity:324:hasManyThroughRelationships","Entity:324:basicRelatedRelationships","Entity:324:manyToManyRelationships","Entity:324:manyToManyRelatedRelationships","Entity:324:morphRelationships","Entity:324:morphRelatedRelationships","Entity:308:authProject","Entity:308:cruds","Entity:308:fields","Field:1735:inputs","Field:1735:foreign","Field:1735:relatedForeigns","Foreign:388:inputs","Foreign:389:inputs","Foreign:432:inputs","Foreign:435:inputs","Field:1735:basicParentRelationships","BasicRelationship:527:inputs","BasicRelationship:527:contrary","BasicRelationship:528:inputs","BasicRelationship:528:contrary","BasicRelationship:527:hasManyDetails","BasicRelationship:528:hasManyDetails","BasicRelationship:529:inputs","BasicRelationship:529:contrary","BasicRelationship:530:inputs","BasicRelationship:530:contrary","BasicRelationship:529:hasManyDetails","BasicRelationship:530:hasManyDetails","BasicRelationship:569:inputs","BasicRelationship:569:contrary","BasicRelationship:570:inputs","BasicRelationship:570:contrary","BasicRelationship:569:hasManyDetails","BasicRelationship:570:hasManyDetails","BasicRelationship:575:inputs","BasicRelationship:575:contrary","BasicRelationship:576:inputs","BasicRelationship:576:contrary","BasicRelationship:575:hasManyDetails","BasicRelationship:576:hasManyDetails","Field:1735:basicForeignRelationships","Field:1735:manyToManyModelRelationships","Field:1735:manyToManylocalModelRelationships","Field:1735:typedMorphRelationships","Field:1735:identifiedMorphRelationships","Field:1740:inputs","Field:1740:foreign","Field:1740:relatedForeigns","Field:1740:basicParentRelationships","Field:1740:basicForeignRelationships","Field:1740:manyToManyModelRelationships","Field:1740:manyToManylocalModelRelationships","Field:1740:typedMorphRelationships","Field:1740:identifiedMorphRelationships","Field:1741:inputs","Field:1741:foreign","Field:1741:relatedForeigns","Field:1741:basicParentRelationships","Field:1741:basicForeignRelationships","Field:1741:manyToManyModelRelationships","Field:1741:manyToManylocalModelRelationships","Field:1741:typedMorphRelationships","Field:1741:identifiedMorphRelationships","Field:1781:inputs","Field:1781:foreign","Field:1781:relatedForeigns","Field:1781:basicParentRelationships","Field:1781:basicForeignRelationships","Field:1781:manyToManyModelRelationships","Field:1781:manyToManylocalModelRelationships","Field:1781:typedMorphRelationships","Field:1781:identifiedMorphRelationships","Field:1784:inputs","Field:1784:foreign","Field:1784:relatedForeigns","Field:1784:basicParentRelationships","Field:1784:basicForeignRelationships","Field:1784:manyToManyModelRelationships","Field:1784:manyToManylocalModelRelationships","Field:1784:typedMorphRelationships","Field:1784:identifiedMorphRelationships","Field:1743:inputs","Field:1743:foreign","Field:1743:relatedForeigns","Field:1743:basicParentRelationships","Field:1743:basicForeignRelationships","Field:1743:manyToManyModelRelationships","Field:1743:manyToManylocalModelRelationships","Field:1743:typedMorphRelationships","Field:1743:identifiedMorphRelationships","Field:1783:inputs","Field:1783:foreign","Field:1783:relatedForeigns","Field:1783:basicParentRelationships","Field:1783:basicForeignRelationships","Field:1783:manyToManyModelRelationships","Field:1783:manyToManylocalModelRelationships","Field:1783:typedMorphRelationships","Field:1783:identifiedMorphRelationships","Entity:308:foreigns","Entity:308:pivotRelationships","Entity:308:pivotMorphRelationships","Entity:308:basicRelationships","Entity:308:hasManyThroughRelationships","Entity:308:basicRelatedRelationships","Entity:308:manyToManyRelationships","Entity:308:manyToManyRelatedRelationships","Entity:308:morphRelationships","Entity:308:morphRelatedRelationships","Entity:341:authProject","Entity:341:cruds","Entity:341:fields","Field:1910:inputs","Field:1910:foreign","Field:1910:relatedForeigns","Field:1910:basicParentRelationships","Field:1910:basicForeignRelationships","Field:1910:manyToManyModelRelationships","Field:1910:manyToManylocalModelRelationships","Field:1910:typedMorphRelationships","Field:1910:identifiedMorphRelationships","Entity:341:foreigns","Entity:341:pivotRelationships","Entity:341:pivotMorphRelationships","Entity:341:basicRelationships","Entity:341:hasManyThroughRelationships","Entity:341:basicRelatedRelationships","Entity:341:manyToManyRelationships","Entity:341:manyToManyRelatedRelationships","Entity:341:morphRelationships","Entity:341:morphRelatedRelationships","Entity:296:authProject","Entity:296:cruds","Entity:296:fields","Field:1672:inputs","Field:1672:foreign","Field:1672:relatedForeigns","Foreign:444:inputs","Foreign:458:inputs","Field:1672:basicParentRelationships","BasicRelationship:591:inputs","BasicRelationship:591:contrary","BasicRelationship:592:inputs","BasicRelationship:592:contrary","BasicRelationship:591:hasManyDetails","BasicRelationship:592:hasManyDetails","BasicRelationship:614:inputs","BasicRelationship:614:contrary","BasicRelationship:613:inputs","BasicRelationship:613:contrary","BasicRelationship:614:hasManyDetails","BasicRelationship:613:hasManyDetails","Field:1672:basicForeignRelationships","Field:1672:manyToManyModelRelationships","Field:1672:manyToManylocalModelRelationships","Field:1672:typedMorphRelationships","Field:1672:identifiedMorphRelationships","Field:1859:inputs","Field:1859:foreign","Field:1859:relatedForeigns","Field:1859:basicParentRelationships","Field:1859:basicForeignRelationships","Field:1859:manyToManyModelRelationships","Field:1859:manyToManylocalModelRelationships","Field:1859:typedMorphRelationships","Field:1859:identifiedMorphRelationships","Field:1833:inputs","Field:1833:foreign","Field:1833:relatedForeigns","Field:1833:basicParentRelationships","Field:1833:basicForeignRelationships","Field:1833:manyToManyModelRelationships","Field:1833:manyToManylocalModelRelationships","Field:1833:typedMorphRelationships","Field:1833:identifiedMorphRelationships","Field:1854:inputs","Field:1854:foreign","Field:1854:relatedForeigns","Field:1854:basicParentRelationships","Field:1854:basicForeignRelationships","Field:1854:manyToManyModelRelationships","Field:1854:manyToManylocalModelRelationships","Field:1854:typedMorphRelationships","Field:1854:identifiedMorphRelationships","Field:1855:inputs","Field:1855:foreign","Field:1855:relatedForeigns","Field:1855:basicParentRelationships","Field:1855:basicForeignRelationships","Field:1855:manyToManyModelRelationships","Field:1855:manyToManylocalModelRelationships","Field:1855:typedMorphRelationships","Field:1855:identifiedMorphRelationships","Field:1862:inputs","Field:1862:foreign","Field:1862:relatedForeigns","Field:1862:basicParentRelationships","Field:1862:basicForeignRelationships","Field:1862:manyToManyModelRelationships","Field:1862:manyToManylocalModelRelationships","Field:1862:typedMorphRelationships","Field:1862:identifiedMorphRelationships","Field:1857:inputs","Field:1857:foreign","Field:1857:relatedForeigns","Field:1857:basicParentRelationships","Field:1857:basicForeignRelationships","Field:1857:manyToManyModelRelationships","Field:1857:manyToManylocalModelRelationships","Field:1857:typedMorphRelationships","Field:1857:identifiedMorphRelationships","Field:1858:inputs","Field:1858:foreign","Field:1858:relatedForeigns","Field:1858:basicParentRelationships","Field:1858:basicForeignRelationships","Field:1858:manyToManyModelRelationships","Field:1858:manyToManylocalModelRelationships","Field:1858:typedMorphRelationships","Field:1858:identifiedMorphRelationships","Field:1860:inputs","Field:1860:foreign","Field:1860:relatedForeigns","Field:1860:basicParentRelationships","Field:1860:basicForeignRelationships","Field:1860:manyToManyModelRelationships","Field:1860:manyToManylocalModelRelationships","Field:1860:typedMorphRelationships","Field:1860:identifiedMorphRelationships","Field:1861:inputs","Field:1861:foreign","Field:1861:relatedForeigns","Field:1861:basicParentRelationships","Field:1861:basicForeignRelationships","Field:1861:manyToManyModelRelationships","Field:1861:manyToManylocalModelRelationships","Field:1861:typedMorphRelationships","Field:1861:identifiedMorphRelationships","Field:1831:inputs","Field:1831:foreign","Field:1831:relatedForeigns","Field:1831:basicParentRelationships","Field:1831:basicForeignRelationships","Field:1831:manyToManyModelRelationships","Field:1831:manyToManylocalModelRelationships","Field:1831:typedMorphRelationships","Field:1831:identifiedMorphRelationships","Field:1832:inputs","Field:1832:foreign","Field:1832:relatedForeigns","Field:1832:basicParentRelationships","Field:1832:basicForeignRelationships","Field:1832:manyToManyModelRelationships","Field:1832:manyToManylocalModelRelationships","Field:1832:typedMorphRelationships","Field:1832:identifiedMorphRelationships","Field:1856:inputs","Field:1856:foreign","Field:1856:relatedForeigns","Field:1856:basicParentRelationships","Field:1856:basicForeignRelationships","Field:1856:manyToManyModelRelationships","Field:1856:manyToManylocalModelRelationships","Field:1856:typedMorphRelationships","Field:1856:identifiedMorphRelationships","Entity:296:foreigns","Entity:296:pivotRelationships","Entity:296:pivotMorphRelationships","Entity:296:basicRelationships","Entity:296:hasManyThroughRelationships","Entity:296:basicRelatedRelationships","Entity:296:manyToManyRelationships","Entity:296:manyToManyRelatedRelationships","Entity:296:morphRelationships","Entity:296:morphRelatedRelationships","Entity:339:authProject","Entity:339:cruds","Entity:339:fields","Field:1877:inputs","Field:1877:foreign","Field:1877:relatedForeigns","Field:1877:basicParentRelationships","Field:1877:basicForeignRelationships","Field:1877:manyToManyModelRelationships","Field:1877:manyToManylocalModelRelationships","Field:1877:typedMorphRelationships","Field:1877:identifiedMorphRelationships","Field:1925:inputs","Field:1925:foreign","Field:1925:relatedForeigns","Field:1925:basicParentRelationships","Field:1925:basicForeignRelationships","Field:1925:manyToManyModelRelationships","Field:1925:manyToManylocalModelRelationships","Field:1925:typedMorphRelationships","Field:1925:identifiedMorphRelationships","Entity:339:foreigns","Entity:339:pivotRelationships","Entity:339:pivotMorphRelationships","Entity:339:basicRelationships","Entity:339:hasManyThroughRelationships","Entity:339:basicRelatedRelationships","Entity:339:manyToManyRelationships","Entity:339:manyToManyRelatedRelationships","Entity:339:morphRelationships","Entity:339:morphRelatedRelationships","Entity:336:authProject","Entity:336:cruds","Entity:336:fields","Field:1849:inputs","Field:1849:foreign","Field:1849:relatedForeigns","Foreign:443:inputs","Field:1849:basicParentRelationships","Field:1849:basicForeignRelationships","Field:1849:manyToManyModelRelationships","Field:1849:manyToManylocalModelRelationships","Field:1849:typedMorphRelationships","Field:1849:identifiedMorphRelationships","Entity:336:foreigns","Entity:336:pivotRelationships","Entity:336:pivotMorphRelationships","Entity:336:basicRelationships","Entity:336:hasManyThroughRelationships","Entity:336:basicRelatedRelationships","Entity:336:manyToManyRelationships","Entity:336:manyToManyRelatedRelationships","Entity:336:morphRelationships","Entity:336:morphRelatedRelationships","Entity:305:authProject","Entity:305:cruds","Entity:305:fields","Field:1710:inputs","Field:1710:foreign","Field:1710:relatedForeigns","Foreign:415:inputs","Field:1710:basicParentRelationships","BasicRelationship:558:inputs","BasicRelationship:558:contrary","BasicRelationship:557:inputs","BasicRelationship:557:contrary","BasicRelationship:558:hasManyDetails","BasicRelationship:557:hasManyDetails","Field:1710:basicForeignRelationships","Field:1710:manyToManyModelRelationships","Field:1710:manyToManylocalModelRelationships","Field:1710:typedMorphRelationships","Field:1710:identifiedMorphRelationships","Field:1750:inputs","Field:1750:foreign","Field:1750:relatedForeigns","Field:1750:basicParentRelationships","Field:1750:basicForeignRelationships","Field:1750:manyToManyModelRelationships","Field:1750:manyToManylocalModelRelationships","Field:1750:typedMorphRelationships","Field:1750:identifiedMorphRelationships","Field:1818:inputs","Field:1818:foreign","Field:1818:relatedForeigns","Field:1818:basicParentRelationships","Field:1818:basicForeignRelationships","Field:1818:manyToManyModelRelationships","Field:1818:manyToManylocalModelRelationships","Field:1818:typedMorphRelationships","Field:1818:identifiedMorphRelationships","Field:1721:inputs","Field:1721:foreign","Field:1721:relatedForeigns","Field:1721:basicParentRelationships","Field:1721:basicForeignRelationships","Field:1721:manyToManyModelRelationships","Field:1721:manyToManylocalModelRelationships","Field:1721:typedMorphRelationships","Field:1721:identifiedMorphRelationships","Field:1713:inputs","Field:1713:foreign","Field:1713:relatedForeigns","Field:1713:basicParentRelationships","Field:1713:basicForeignRelationships","Field:1713:manyToManyModelRelationships","Field:1713:manyToManylocalModelRelationships","Field:1713:typedMorphRelationships","Field:1713:identifiedMorphRelationships","Field:1714:inputs","Field:1714:foreign","Field:1714:relatedForeigns","Field:1714:basicParentRelationships","Field:1714:basicForeignRelationships","Field:1714:manyToManyModelRelationships","Field:1714:manyToManylocalModelRelationships","Field:1714:typedMorphRelationships","Field:1714:identifiedMorphRelationships","Field:1715:inputs","Field:1715:foreign","Field:1715:relatedForeigns","Field:1715:basicParentRelationships","Field:1715:basicForeignRelationships","Field:1715:manyToManyModelRelationships","Field:1715:manyToManylocalModelRelationships","Field:1715:typedMorphRelationships","Field:1715:identifiedMorphRelationships","Field:1752:inputs","Field:1752:foreign","Field:1752:relatedForeigns","Field:1752:basicParentRelationships","Field:1752:basicForeignRelationships","Field:1752:manyToManyModelRelationships","Field:1752:manyToManylocalModelRelationships","Field:1752:typedMorphRelationships","Field:1752:identifiedMorphRelationships","Field:1720:inputs","Field:1720:foreign","Field:1720:relatedForeigns","Field:1720:basicParentRelationships","Field:1720:basicForeignRelationships","Field:1720:manyToManyModelRelationships","Field:1720:manyToManylocalModelRelationships","Field:1720:typedMorphRelationships","Field:1720:identifiedMorphRelationships","Field:1754:inputs","Field:1754:foreign","Field:1754:relatedForeigns","Field:1754:basicParentRelationships","Field:1754:basicForeignRelationships","Field:1754:manyToManyModelRelationships","Field:1754:manyToManylocalModelRelationships","Field:1754:typedMorphRelationships","Field:1754:identifiedMorphRelationships","Field:1791:inputs","Field:1791:foreign","Field:1791:relatedForeigns","Field:1791:basicParentRelationships","Field:1791:basicForeignRelationships","Field:1791:manyToManyModelRelationships","Field:1791:manyToManylocalModelRelationships","Field:1791:typedMorphRelationships","Field:1791:identifiedMorphRelationships","Field:1748:inputs","Field:1748:foreign","Field:1748:relatedForeigns","Field:1748:basicParentRelationships","Field:1748:basicForeignRelationships","Field:1748:manyToManyModelRelationships","Field:1748:manyToManylocalModelRelationships","Field:1748:typedMorphRelationships","Field:1748:identifiedMorphRelationships","Field:1798:inputs","Field:1798:foreign","Field:1798:relatedForeigns","Field:1798:basicParentRelationships","Field:1798:basicForeignRelationships","Field:1798:manyToManyModelRelationships","Field:1798:manyToManylocalModelRelationships","Field:1798:typedMorphRelationships","Field:1798:identifiedMorphRelationships","Entity:305:foreigns","Entity:305:pivotRelationships","Entity:305:pivotMorphRelationships","Entity:305:basicRelationships","Entity:305:hasManyThroughRelationships","Entity:305:basicRelatedRelationships","Entity:305:manyToManyRelationships","Entity:305:manyToManyRelatedRelationships","Entity:305:morphRelationships","Entity:305:morphRelatedRelationships","Entity:331:authProject","Entity:331:cruds","Entity:331:fields","Field:1838:inputs","Field:1838:foreign","Field:1838:relatedForeigns","Field:1838:basicParentRelationships","Field:1838:basicForeignRelationships","Field:1838:manyToManyModelRelationships","Field:1838:manyToManylocalModelRelationships","Field:1838:typedMorphRelationships","Field:1838:identifiedMorphRelationships","Entity:331:foreigns","Entity:331:pivotRelationships","Entity:331:pivotMorphRelationships","Entity:331:basicRelationships","Entity:331:hasManyThroughRelationships","Entity:331:basicRelatedRelationships","Entity:331:manyToManyRelationships","Entity:331:manyToManyRelatedRelationships","Entity:331:morphRelationships","Entity:331:morphRelatedRelationships","Entity:320:authProject","Entity:320:cruds","Entity:320:fields","Field:1800:inputs","Field:1800:foreign","Field:1800:relatedForeigns","Field:1800:basicParentRelationships","Field:1800:basicForeignRelationships","Field:1800:manyToManyModelRelationships","Field:1800:manyToManylocalModelRelationships","Field:1800:typedMorphRelationships","Field:1800:identifiedMorphRelationships","Field:1834:inputs","Field:1834:foreign","Field:1834:relatedForeigns","Field:1834:basicParentRelationships","Field:1834:basicForeignRelationships","Field:1834:manyToManyModelRelationships","Field:1834:manyToManylocalModelRelationships","Field:1834:typedMorphRelationships","Field:1834:identifiedMorphRelationships","Field:1835:inputs","Field:1835:foreign","Field:1835:relatedForeigns","Field:1835:basicParentRelationships","Field:1835:basicForeignRelationships","Field:1835:manyToManyModelRelationships","Field:1835:manyToManylocalModelRelationships","Field:1835:typedMorphRelationships","Field:1835:identifiedMorphRelationships","Field:1836:inputs","Field:1836:foreign","Field:1836:relatedForeigns","Field:1836:basicParentRelationships","Field:1836:basicForeignRelationships","Field:1836:manyToManyModelRelationships","Field:1836:manyToManylocalModelRelationships","Field:1836:typedMorphRelationships","Field:1836:identifiedMorphRelationships","Entity:320:foreigns","Entity:320:pivotRelationships","Entity:320:pivotMorphRelationships","Entity:320:basicRelationships","Entity:320:hasManyThroughRelationships","Entity:320:basicRelatedRelationships","Entity:320:manyToManyRelationships","Entity:320:manyToManyRelatedRelationships","Entity:320:morphRelationships","Entity:320:morphRelatedRelationships","Entity:338:authProject","Entity:338:cruds","Entity:338:fields","Field:1853:inputs","Field:1853:foreign","Field:1853:relatedForeigns","Foreign:449:inputs","Field:1853:basicParentRelationships","Field:1853:basicForeignRelationships","Field:1853:manyToManyModelRelationships","Field:1853:manyToManylocalModelRelationships","Field:1853:typedMorphRelationships","Field:1853:identifiedMorphRelationships","Field:1930:inputs","Field:1930:foreign","Field:1930:relatedForeigns","Field:1930:basicParentRelationships","Field:1930:basicForeignRelationships","Field:1930:manyToManyModelRelationships","Field:1930:manyToManylocalModelRelationships","Field:1930:typedMorphRelationships","Field:1930:identifiedMorphRelationships","Field:1931:inputs","Field:1931:foreign","Field:1931:relatedForeigns","Field:1931:basicParentRelationships","Field:1931:basicForeignRelationships","Field:1931:manyToManyModelRelationships","Field:1931:manyToManylocalModelRelationships","Field:1931:typedMorphRelationships","Field:1931:identifiedMorphRelationships","Field:1932:inputs","Field:1932:foreign","Field:1932:relatedForeigns","Field:1932:basicParentRelationships","Field:1932:basicForeignRelationships","Field:1932:manyToManyModelRelationships","Field:1932:manyToManylocalModelRelationships","Field:1932:typedMorphRelationships","Field:1932:identifiedMorphRelationships","Field:1893:inputs","Field:1893:foreign","Field:1893:relatedForeigns","Field:1893:basicParentRelationships","Field:1893:basicForeignRelationships","Field:1893:manyToManyModelRelationships","Field:1893:manyToManylocalModelRelationships","Field:1893:typedMorphRelationships","Field:1893:identifiedMorphRelationships","Field:1892:inputs","Field:1892:foreign","Field:1892:relatedForeigns","Field:1892:basicParentRelationships","Field:1892:basicForeignRelationships","Field:1892:manyToManyModelRelationships","Field:1892:manyToManylocalModelRelationships","Field:1892:typedMorphRelationships","Field:1892:identifiedMorphRelationships","Field:1882:inputs","Field:1882:foreign","Field:1882:relatedForeigns","Field:1882:basicParentRelationships","Field:1882:basicForeignRelationships","Field:1882:manyToManyModelRelationships","Field:1882:manyToManylocalModelRelationships","Field:1882:typedMorphRelationships","Field:1882:identifiedMorphRelationships","Field:1883:inputs","Field:1883:foreign","Field:1883:relatedForeigns","Field:1883:basicParentRelationships","Field:1883:basicForeignRelationships","Field:1883:manyToManyModelRelationships","Field:1883:manyToManylocalModelRelationships","Field:1883:typedMorphRelationships","Field:1883:identifiedMorphRelationships","Field:1884:inputs","Field:1884:foreign","Field:1884:relatedForeigns","Field:1884:basicParentRelationships","Field:1884:basicForeignRelationships","Field:1884:manyToManyModelRelationships","Field:1884:manyToManylocalModelRelationships","Field:1884:typedMorphRelationships","Field:1884:identifiedMorphRelationships","Field:1885:inputs","Field:1885:foreign","Field:1885:relatedForeigns","Field:1885:basicParentRelationships","Field:1885:basicForeignRelationships","Field:1885:manyToManyModelRelationships","Field:1885:manyToManylocalModelRelationships","Field:1885:typedMorphRelationships","Field:1885:identifiedMorphRelationships","Field:1886:inputs","Field:1886:foreign","Field:1886:relatedForeigns","Field:1886:basicParentRelationships","Field:1886:basicForeignRelationships","Field:1886:manyToManyModelRelationships","Field:1886:manyToManylocalModelRelationships","Field:1886:typedMorphRelationships","Field:1886:identifiedMorphRelationships","Field:1887:inputs","Field:1887:foreign","Field:1887:relatedForeigns","Field:1887:basicParentRelationships","Field:1887:basicForeignRelationships","Field:1887:manyToManyModelRelationships","Field:1887:manyToManylocalModelRelationships","Field:1887:typedMorphRelationships","Field:1887:identifiedMorphRelationships","Field:1888:inputs","Field:1888:foreign","Field:1888:relatedForeigns","Field:1888:basicParentRelationships","Field:1888:basicForeignRelationships","Field:1888:manyToManyModelRelationships","Field:1888:manyToManylocalModelRelationships","Field:1888:typedMorphRelationships","Field:1888:identifiedMorphRelationships","Field:1889:inputs","Field:1889:foreign","Field:1889:relatedForeigns","Field:1889:basicParentRelationships","Field:1889:basicForeignRelationships","Field:1889:manyToManyModelRelationships","Field:1889:manyToManylocalModelRelationships","Field:1889:typedMorphRelationships","Field:1889:identifiedMorphRelationships","Field:1890:inputs","Field:1890:foreign","Field:1890:relatedForeigns","Field:1890:basicParentRelationships","Field:1890:basicForeignRelationships","Field:1890:manyToManyModelRelationships","Field:1890:manyToManylocalModelRelationships","Field:1890:typedMorphRelationships","Field:1890:identifiedMorphRelationships","Field:1891:inputs","Field:1891:foreign","Field:1891:relatedForeigns","Field:1891:basicParentRelationships","Field:1891:basicForeignRelationships","Field:1891:manyToManyModelRelationships","Field:1891:manyToManylocalModelRelationships","Field:1891:typedMorphRelationships","Field:1891:identifiedMorphRelationships","Field:1894:inputs","Field:1894:foreign","Field:1894:relatedForeigns","Field:1894:basicParentRelationships","Field:1894:basicForeignRelationships","Field:1894:manyToManyModelRelationships","Field:1894:manyToManylocalModelRelationships","Field:1894:typedMorphRelationships","Field:1894:identifiedMorphRelationships","Field:1895:inputs","Field:1895:foreign","Field:1895:relatedForeigns","Field:1895:basicParentRelationships","Field:1895:basicForeignRelationships","Field:1895:manyToManyModelRelationships","Field:1895:manyToManylocalModelRelationships","Field:1895:typedMorphRelationships","Field:1895:identifiedMorphRelationships","Entity:338:foreigns","Entity:338:pivotRelationships","Entity:338:pivotMorphRelationships","Entity:338:basicRelationships","Entity:338:hasManyThroughRelationships","Entity:338:basicRelatedRelationships","Entity:338:manyToManyRelationships","Entity:338:manyToManyRelatedRelationships","Entity:338:morphRelationships","Entity:338:morphRelatedRelationships","Entity:340:authProject","Entity:340:cruds","Entity:340:fields","Field:1879:inputs","Field:1879:foreign","Field:1879:relatedForeigns","Field:1879:basicParentRelationships","Field:1879:basicForeignRelationships","Field:1879:manyToManyModelRelationships","Field:1879:manyToManylocalModelRelationships","Field:1879:typedMorphRelationships","Field:1879:identifiedMorphRelationships","Field:1880:inputs","Field:1880:foreign","Field:1880:relatedForeigns","Field:1880:basicParentRelationships","Field:1880:basicForeignRelationships","Field:1880:manyToManyModelRelationships","Field:1880:manyToManylocalModelRelationships","Field:1880:typedMorphRelationships","Field:1880:identifiedMorphRelationships","Field:1881:inputs","Field:1881:foreign","Field:1881:relatedForeigns","Field:1881:basicParentRelationships","Field:1881:basicForeignRelationships","Field:1881:manyToManyModelRelationships","Field:1881:manyToManylocalModelRelationships","Field:1881:typedMorphRelationships","Field:1881:identifiedMorphRelationships","Entity:340:foreigns","Entity:340:pivotRelationships","Entity:340:pivotMorphRelationships","Entity:340:basicRelationships","Entity:340:hasManyThroughRelationships","Entity:340:basicRelatedRelationships","Entity:340:manyToManyRelationships","Entity:340:manyToManyRelatedRelationships","Entity:340:morphRelationships","Entity:340:morphRelatedRelationships","Entity:294:authProject","Entity:294:cruds","Entity:294:fields","Field:1670:inputs","Field:1670:foreign","Field:1670:relatedForeigns","Field:1670:basicParentRelationships","Field:1670:basicForeignRelationships","Field:1670:manyToManyModelRelationships","Field:1670:manyToManylocalModelRelationships","Field:1670:typedMorphRelationships","Field:1670:identifiedMorphRelationships","Entity:294:foreigns","Entity:294:pivotRelationships","Entity:294:pivotMorphRelationships","Entity:294:basicRelationships","Entity:294:hasManyThroughRelationships","Entity:294:basicRelatedRelationships","Entity:294:manyToManyRelationships","Entity:294:manyToManyRelatedRelationships","Entity:294:morphRelationships","Entity:294:morphRelatedRelationships","Entity:334:authProject","Entity:334:cruds","Entity:334:fields","Field:1841:inputs","Field:1841:foreign","Field:1841:relatedForeigns","Field:1841:basicParentRelationships","Field:1841:basicForeignRelationships","Field:1841:manyToManyModelRelationships","Field:1841:manyToManylocalModelRelationships","Field:1841:typedMorphRelationships","Field:1841:identifiedMorphRelationships","Field:1897:inputs","Field:1897:foreign","Foreign:451:inputs","Field:1897:relatedForeigns","Field:1897:basicParentRelationships","Field:1897:basicForeignRelationships","BasicRelationship:604:inputs","BasicRelationship:604:contrary","BasicRelationship:603:inputs","BasicRelationship:603:contrary","BasicRelationship:604:hasManyDetails","BasicRelationship:603:hasManyDetails","Field:1897:manyToManyModelRelationships","Field:1897:manyToManylocalModelRelationships","Field:1897:typedMorphRelationships","Field:1897:identifiedMorphRelationships","Entity:334:foreigns","Entity:334:pivotRelationships","Entity:334:pivotMorphRelationships","Entity:334:basicRelationships","Entity:334:hasManyThroughRelationships","Entity:334:basicRelatedRelationships","Entity:334:manyToManyRelationships","Entity:334:manyToManyRelatedRelationships","Entity:334:morphRelationships","Entity:334:morphRelatedRelationships","Entity:337:authProject","Entity:337:cruds","Entity:337:fields","Field:1850:inputs","Field:1850:foreign","Field:1850:relatedForeigns","Field:1850:basicParentRelationships","Field:1850:basicForeignRelationships","Field:1850:manyToManyModelRelationships","Field:1850:manyToManylocalModelRelationships","Field:1850:typedMorphRelationships","Field:1850:identifiedMorphRelationships","Field:1851:inputs","Field:1851:foreign","Field:1851:relatedForeigns","Field:1851:basicParentRelationships","Field:1851:basicForeignRelationships","Field:1851:manyToManyModelRelationships","Field:1851:manyToManylocalModelRelationships","Field:1851:typedMorphRelationships","Field:1851:identifiedMorphRelationships","Field:1852:inputs","Field:1852:foreign","Field:1852:relatedForeigns","Field:1852:basicParentRelationships","Field:1852:basicForeignRelationships","Field:1852:manyToManyModelRelationships","Field:1852:manyToManylocalModelRelationships","Field:1852:typedMorphRelationships","Field:1852:identifiedMorphRelationships","Entity:337:foreigns","Entity:337:pivotRelationships","Entity:337:pivotMorphRelationships","Entity:337:basicRelationships","Entity:337:hasManyThroughRelationships","Entity:337:basicRelatedRelationships","Entity:337:manyToManyRelationships","Entity:337:manyToManyRelatedRelationships","Entity:337:morphRelationships","Entity:337:morphRelatedRelationships","Entity:293:authProject","Entity:293:cruds","Entity:293:fields","Field:1669:inputs","Field:1669:foreign","Field:1669:relatedForeigns","Foreign:405:inputs","Foreign:430:inputs","Field:1669:basicParentRelationships","BasicRelationship:548:inputs","BasicRelationship:548:contrary","BasicRelationship:547:inputs","BasicRelationship:547:contrary","BasicRelationship:548:hasManyDetails","BasicRelationship:547:hasManyDetails","Field:1669:basicForeignRelationships","Field:1669:manyToManyModelRelationships","Field:1669:manyToManylocalModelRelationships","Field:1669:typedMorphRelationships","Field:1669:identifiedMorphRelationships","Field:1749:inputs","Field:1749:foreign","Field:1749:relatedForeigns","Field:1749:basicParentRelationships","Field:1749:basicForeignRelationships","Field:1749:manyToManyModelRelationships","Field:1749:manyToManylocalModelRelationships","Field:1749:typedMorphRelationships","Field:1749:identifiedMorphRelationships","Field:1729:inputs","Field:1729:foreign","Field:1729:relatedForeigns","Field:1729:basicParentRelationships","Field:1729:basicForeignRelationships","Field:1729:manyToManyModelRelationships","Field:1729:manyToManylocalModelRelationships","Field:1729:typedMorphRelationships","Field:1729:identifiedMorphRelationships","Field:1730:inputs","Field:1730:foreign","Field:1730:relatedForeigns","Field:1730:basicParentRelationships","Field:1730:basicForeignRelationships","Field:1730:manyToManyModelRelationships","Field:1730:manyToManylocalModelRelationships","Field:1730:typedMorphRelationships","Field:1730:identifiedMorphRelationships","Field:1731:inputs","Field:1731:foreign","Field:1731:relatedForeigns","Field:1731:basicParentRelationships","Field:1731:basicForeignRelationships","Field:1731:manyToManyModelRelationships","Field:1731:manyToManylocalModelRelationships","Field:1731:typedMorphRelationships","Field:1731:identifiedMorphRelationships","Field:1774:inputs","Field:1774:foreign","Field:1774:relatedForeigns","Field:1774:basicParentRelationships","Field:1774:basicForeignRelationships","Field:1774:manyToManyModelRelationships","Field:1774:manyToManylocalModelRelationships","Field:1774:typedMorphRelationships","Field:1774:identifiedMorphRelationships","Field:1775:inputs","Field:1775:foreign","Field:1775:relatedForeigns","Field:1775:basicParentRelationships","Field:1775:basicForeignRelationships","Field:1775:manyToManyModelRelationships","Field:1775:manyToManylocalModelRelationships","Field:1775:typedMorphRelationships","Field:1775:identifiedMorphRelationships","Field:1732:inputs","Field:1732:foreign","Field:1732:relatedForeigns","Field:1732:basicParentRelationships","Field:1732:basicForeignRelationships","Field:1732:manyToManyModelRelationships","Field:1732:manyToManylocalModelRelationships","Field:1732:typedMorphRelationships","Field:1732:identifiedMorphRelationships","Field:1733:inputs","Field:1733:foreign","Field:1733:relatedForeigns","Field:1733:basicParentRelationships","Field:1733:basicForeignRelationships","Field:1733:manyToManyModelRelationships","Field:1733:manyToManylocalModelRelationships","Field:1733:typedMorphRelationships","Field:1733:identifiedMorphRelationships","Field:1755:inputs","Field:1755:foreign","Field:1755:relatedForeigns","Field:1755:basicParentRelationships","Field:1755:basicForeignRelationships","Field:1755:manyToManyModelRelationships","Field:1755:manyToManylocalModelRelationships","Field:1755:typedMorphRelationships","Field:1755:identifiedMorphRelationships","Field:1746:inputs","Field:1746:foreign","Field:1746:relatedForeigns","Field:1746:basicParentRelationships","Field:1746:basicForeignRelationships","Field:1746:manyToManyModelRelationships","Field:1746:manyToManylocalModelRelationships","Field:1746:typedMorphRelationships","Field:1746:identifiedMorphRelationships","Field:1780:inputs","Field:1780:foreign","Field:1780:relatedForeigns","Field:1780:basicParentRelationships","Field:1780:basicForeignRelationships","Field:1780:manyToManyModelRelationships","Field:1780:manyToManylocalModelRelationships","Field:1780:typedMorphRelationships","Field:1780:identifiedMorphRelationships","Entity:293:foreigns","Entity:293:pivotRelationships","Entity:293:pivotMorphRelationships","Entity:293:basicRelationships","Entity:293:hasManyThroughRelationships","Entity:293:basicRelatedRelationships","Entity:293:manyToManyRelationships","Entity:293:manyToManyRelatedRelationships","Entity:293:morphRelationships","Entity:293:morphRelatedRelationships","Entity:330:authProject","Entity:330:cruds","Entity:330:fields","Field:1828:inputs","Field:1828:foreign","Field:1828:relatedForeigns","Field:1828:basicParentRelationships","Field:1828:basicForeignRelationships","Field:1828:manyToManyModelRelationships","Field:1828:manyToManylocalModelRelationships","Field:1828:typedMorphRelationships","Field:1828:identifiedMorphRelationships","Field:1829:inputs","Field:1829:foreign","Field:1829:relatedForeigns","Field:1829:basicParentRelationships","Field:1829:basicForeignRelationships","Field:1829:manyToManyModelRelationships","Field:1829:manyToManylocalModelRelationships","Field:1829:typedMorphRelationships","Field:1829:identifiedMorphRelationships","Field:1830:inputs","Field:1830:foreign","Field:1830:relatedForeigns","Field:1830:basicParentRelationships","Field:1830:basicForeignRelationships","Field:1830:manyToManyModelRelationships","Field:1830:manyToManylocalModelRelationships","Field:1830:typedMorphRelationships","Field:1830:identifiedMorphRelationships","Entity:330:foreigns","Entity:330:pivotRelationships","Entity:330:pivotMorphRelationships","Entity:330:basicRelationships","Entity:330:hasManyThroughRelationships","Entity:330:basicRelatedRelationships","Entity:330:manyToManyRelationships","Entity:330:manyToManyRelatedRelationships","Entity:330:morphRelationships","Entity:330:morphRelatedRelationships","Entity:311:authProject","Entity:311:cruds","Entity:311:fields","Field:1738:inputs","Field:1738:foreign","Field:1738:relatedForeigns","Field:1738:basicParentRelationships","Field:1738:basicForeignRelationships","Field:1738:manyToManyModelRelationships","Field:1738:manyToManylocalModelRelationships","Field:1738:typedMorphRelationships","Field:1738:identifiedMorphRelationships","Entity:311:foreigns","Entity:311:pivotRelationships","Entity:311:pivotMorphRelationships","Entity:311:basicRelationships","Entity:311:hasManyThroughRelationships","Entity:311:basicRelatedRelationships","Entity:311:manyToManyRelationships","Entity:311:manyToManyRelatedRelationships","Entity:311:morphRelationships","Entity:311:morphRelatedRelationships","Entity:291:authProject","Project:14:comments","Entity:291:cruds","Entity:291:fields","Field:1657:inputs","Field:1657:foreign","Field:1657:relatedForeigns","Field:1657:basicParentRelationships","Field:1657:basicForeignRelationships","Field:1657:manyToManyModelRelationships","Field:1657:manyToManylocalModelRelationships","Field:1657:typedMorphRelationships","Field:1657:identifiedMorphRelationships","Field:1658:inputs","Field:1658:foreign","Field:1658:relatedForeigns","Field:1658:basicParentRelationships","Field:1658:basicForeignRelationships","Field:1658:manyToManyModelRelationships","Field:1658:manyToManylocalModelRelationships","Field:1658:typedMorphRelationships","Field:1658:identifiedMorphRelationships","Field:1659:inputs","Field:1659:foreign","Field:1659:relatedForeigns","Field:1659:basicParentRelationships","Field:1659:basicForeignRelationships","Field:1659:manyToManyModelRelationships","Field:1659:manyToManylocalModelRelationships","Field:1659:typedMorphRelationships","Field:1659:identifiedMorphRelationships","Field:1660:inputs","Field:1660:foreign","Field:1660:relatedForeigns","Field:1660:basicParentRelationships","Field:1660:basicForeignRelationships","Field:1660:manyToManyModelRelationships","Field:1660:manyToManylocalModelRelationships","Field:1660:typedMorphRelationships","Field:1660:identifiedMorphRelationships","Field:1661:inputs","Field:1661:foreign","Field:1661:relatedForeigns","Field:1661:basicParentRelationships","Field:1661:basicForeignRelationships","Field:1661:manyToManyModelRelationships","Field:1661:manyToManylocalModelRelationships","Field:1661:typedMorphRelationships","Field:1661:identifiedMorphRelationships","Field:1662:inputs","Field:1662:foreign","Field:1662:relatedForeigns","Field:1662:basicParentRelationships","Field:1662:basicForeignRelationships","Field:1662:manyToManyModelRelationships","Field:1662:manyToManylocalModelRelationships","Field:1662:typedMorphRelationships","Field:1662:identifiedMorphRelationships","Field:1663:inputs","Field:1663:foreign","Field:1663:relatedForeigns","Field:1663:basicParentRelationships","Field:1663:basicForeignRelationships","Field:1663:manyToManyModelRelationships","Field:1663:manyToManylocalModelRelationships","Field:1663:typedMorphRelationships","Field:1663:identifiedMorphRelationships","Field:1664:inputs","Field:1664:foreign","Field:1664:relatedForeigns","Field:1664:basicParentRelationships","Field:1664:basicForeignRelationships","Field:1664:manyToManyModelRelationships","Field:1664:manyToManylocalModelRelationships","Field:1664:typedMorphRelationships","Field:1664:identifiedMorphRelationships","Field:1665:inputs","Field:1665:foreign","Field:1665:relatedForeigns","Field:1665:basicParentRelationships","Field:1665:basicForeignRelationships","Field:1665:manyToManyModelRelationships","Field:1665:manyToManylocalModelRelationships","Field:1665:typedMorphRelationships","Field:1665:identifiedMorphRelationships","Field:1666:inputs","Field:1666:foreign","Field:1666:relatedForeigns","Field:1666:basicParentRelationships","Field:1666:basicForeignRelationships","Field:1666:manyToManyModelRelationships","Field:1666:manyToManylocalModelRelationships","Field:1666:typedMorphRelationships","Field:1666:identifiedMorphRelationships","Field:1667:inputs","Field:1667:foreign","Field:1667:relatedForeigns","Field:1667:basicParentRelationships","Field:1667:basicForeignRelationships","Field:1667:manyToManyModelRelationships","Field:1667:manyToManylocalModelRelationships","Field:1667:typedMorphRelationships","Field:1667:identifiedMorphRelationships","Field:1917:inputs","Field:1917:foreign","Foreign:453:inputs","Field:1917:relatedForeigns","Field:1917:basicParentRelationships","Field:1917:basicForeignRelationships","BasicRelationship:608:inputs","BasicRelationship:608:contrary","BasicRelationship:607:inputs","BasicRelationship:607:contrary","BasicRelationship:608:hasManyDetails","BasicRelationship:607:hasManyDetails","Field:1917:manyToManyModelRelationships","Field:1917:manyToManylocalModelRelationships","Field:1917:typedMorphRelationships","Field:1917:identifiedMorphRelationships","Entity:291:foreigns","Entity:291:pivotRelationships","Entity:291:pivotMorphRelationships","Entity:291:basicRelationships","Entity:291:hasManyThroughRelationships","Entity:291:basicRelatedRelationships","Entity:291:manyToManyRelationships","Entity:291:manyToManyRelatedRelationships","Entity:291:morphRelationships","Entity:291:morphRelatedRelationships","Entity:342:authProject","Entity:342:cruds","Entity:342:fields","Field:1911:inputs","Field:1911:foreign","Field:1911:relatedForeigns","Field:1911:basicParentRelationships","Field:1911:basicForeignRelationships","Field:1911:manyToManyModelRelationships","Field:1911:manyToManylocalModelRelationships","Field:1911:typedMorphRelationships","Field:1911:identifiedMorphRelationships","Field:1913:inputs","Field:1913:foreign","Field:1913:relatedForeigns","Field:1913:basicParentRelationships","Field:1913:basicForeignRelationships","Field:1913:manyToManyModelRelationships","Field:1913:manyToManylocalModelRelationships","Field:1913:typedMorphRelationships","Field:1913:identifiedMorphRelationships","Field:1914:inputs","Field:1914:foreign","Field:1914:relatedForeigns","Field:1914:basicParentRelationships","Field:1914:basicForeignRelationships","Field:1914:manyToManyModelRelationships","Field:1914:manyToManylocalModelRelationships","Field:1914:typedMorphRelationships","Field:1914:identifiedMorphRelationships","Field:1920:inputs","Field:1920:foreign","Field:1920:relatedForeigns","Field:1920:basicParentRelationships","Field:1920:basicForeignRelationships","Field:1920:manyToManyModelRelationships","Field:1920:manyToManylocalModelRelationships","Field:1920:typedMorphRelationships","Field:1920:identifiedMorphRelationships","Field:1915:inputs","Field:1915:foreign","Field:1915:relatedForeigns","Field:1915:basicParentRelationships","Field:1915:basicForeignRelationships","Field:1915:manyToManyModelRelationships","Field:1915:manyToManylocalModelRelationships","Field:1915:typedMorphRelationships","Field:1915:identifiedMorphRelationships","Entity:342:foreigns","Entity:342:pivotRelationships","Entity:342:pivotMorphRelationships","Entity:342:basicRelationships","Entity:342:hasManyThroughRelationships","Entity:342:basicRelatedRelationships","Entity:342:manyToManyRelationships","Entity:342:manyToManyRelatedRelationships","Entity:342:morphRelationships","Entity:342:morphRelatedRelationships"]}